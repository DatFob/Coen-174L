%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: SCU Seal_Outlined_201.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Santa Clara University
%%CreationDate: 9/15/08
%%BoundingBox: 0 0 276 276
%%HiResBoundingBox: 0 0 275.6680 275.6446
%%CropBox: 0 0 275.6680 275.6446
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 20334 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFA1A19A9A6F94698D6969698D696969936F9A70A1A1CACAFD%64FFA1A16F6FFD04696869686968696969686969696869686944FD04699A%9ACACAFD5BFFCA9A9AFD0969946FFD049AC3A1A1A0A19A9A709A6F6FFD04%696869696F6FA1CAFD55FFCA9A94696944696869699A9AA1A7FD11FFCACA%A1A16F6F6869686944696FA1A8FD50FFA19AFD0569949AC3CAFD1DFFA19A%6FFD0469939ACAFD4CFFA16F69686968939AC9CAFD07FFCAFD0DFF9AA7FD%0CFFA19A6F696869696F9AFD48FF9A93696969939ACAFD07FFCAA19B9A94%6F9ACAFD09FFA8699AFD0FFFA19AFD0569A1FD44FFA169694469699AA8FD%08FFA169696FFFA89A4493FD09FF9A4494FD11FFCA766F6869446F9AFD40%FFA19469696994A1FD0DFF699AFFFFFF9A69CAFD07FFCF6F9A69FD0CFFC3%9AFD06FFA16F6969696FCAFD3DFF6F69686969A1FD05FFC9A8FD08FF6F6F%FFFFFFA1699AFD07FF9AA0A169A1FD0CFF9A689AA1FD05FF9A6F6869689A%A8FD39FFA16969696F9AFD07FF6994FD08FF7069CAFFFFA169CAFD06FFCA%94CACF69A1FD0CFF6F699ACAFD07FFA169696993A1FD36FFA89A6869689A%A8FD08FF6F449AFD07FF9A68CAFFFF6F9AFD07FF9A6FFFFF6F6FFD0BFFA1%6976FD05FFA1FD04FFCF6F6944696FFD34FFA193696969CAFD0AFF709A69%A1FD06FFA1696FA16993FD08FF6F93949A6993FD0BFF9A69FD06FFA16F9B%CAFFFFFFA194696969CAFD31FF9A6968696FFD0CFF9AA79A68A1FD05FFCA%6994A19A689AFD06FFA16FA8CAA19A68CAFD09FFCA689AFD06FFCA696FA0%FD04FFCA9A6969689BFD2FFF6F6969699AFD0DFF9ACAFF9469CAFD04FFCF%699AFFFF9A699AFD05FF94A1FFFFFFA8699AFD09FF9A69A7FD06FFA16FFF%FFFFCFCAFFFFFFA16969699AFD2DFF6F69446FA7FFFFFFCAFD0AFF9AA1FF%9A6969CAFD04FF696FFFFFCF6F689AFFFFFFA169FD05FF699AFD08FFA869%6FFD07FF6FA1FD04FF6FA1FFFFFFCA69694493A8FFCFFD27FFCA6F69699A%FD04FF9AA1FD0AFF9A9A6F949A696FFD04FF9A69FFFFFFCA94699ACACA69%9AFD05FF9469FD08FFA169C9FD06FFA194FD05FFC369A1FD04FF6F696993%A8FD27FFCA6969699AFFFFFFCA6F69CAFD0AFF9A69A1CFFF9A696FFFFFFF%76699AFD04FF9A6F9A9A9A6FC3FFFFFFA169696FCAFD06FF6F69CAFD06FF%9A9AFD05FF6F699AFD05FF6F696869A7FD25FFCA696969A1FFFFFFCA706F%69C3FD0AFF9AA1FD04FF9A696FC39A94699AA1FD0DFFA7CAA1A1A1FD06FF%9469FD06FFCA6FFD05FF9A6F69A1FD06FF9A696969A1FD23FFCA6869689A%FD04FFA8FFCA6968CAFD09FF9A76FD04FFCA69696FA1A8FD15FFCAFD05FF%6F69A8FD05FF6F9AFD04FF7694A169A1FD07FF76696869A1FD21FFCA6969%69A1FD08FFA1696FFD09FF9A9AFD04FFA1A1FD08FFCACAA1A19AA19A9A9A%A1A1C9A8FD0AFFCA699AFD04FF9A93FD04FFA194FFCA69CAFFFFFFCAA0FF%FFFF9A696993CAFD20FF696968A1FFFFFFA1A8FD05FF76699AFD06FFA1FF%A169C3FD08FFCAA1769A6969686969696869696968696969686F6F9AA1FD%06FFA169949AA16F6FA8FFFFFFA769A1FFA169A1FD04FF9A6FFFFFFF9A69%686FCAFD1EFF6F6969A1FFFFFF9A6993A1FD05FF6F69A7FD05FF6FA1946F%9AFD05FFCAA16FFD04699A9AA1A1CACACFCAFFCACAA1C99A9A6F6F696969%9AA1FD05FF9A9A709ACAFFFFFFCA93A1FFFFCA69C3FD04FF6F6970FFFFFF%9A696994FD1DFF6F69449AFFFFA8936FCAA19ACAFD04FFCA686FFFFFCFFF%FF6F69A1FD05FFA16F6968696FA1A7FD11FFA8CA9A9A68696894A1FD07FF%A8FFFF6F6FFFFFFFA1699AFFFFFF9A6FA8CAA8FFFFFF7069449AFD1BFF9A%69699AFFFFFF9A9AFD0AFFC3699AFFFFFF9A6FFD05FFA19369699ACAFD08%FF9AFD08FFC3A8FD07FFA19A69696FA1FD05FFCA94936FFD04FFCA69A1FF%FFA16FCAFD07FF6F6969A1FD19FFA169686FCAFFFFA16FFD0CFF9A689AA1%949AFD04FFA1696969A1A8FD08FFCA9A6F6F9ACAFFFFFFA19A699AA7FD09%FF9A6F686F9AFD04FFCA699AFD04FFA1699AFFA86FA1FD04FFA1A1FFFFFF%696969A1FD17FFCA6F6969CAFFFFFF6FC3FD0DFF936993A1FFFFFFA19469%6F9AFD04FFA1FFFFCAFFFFFFA1946969A1FD05FF6F6969A1FD04FFCAFFA1%CAFFFFFFC369696FCAFD04FF9AFD04FFC369C3FF939AFD05FFA86FA8FFFF%CA696969FD17FF9A68699AFFFFFFA86FA8FD09FF9AA1FFFF699AFD04FF6F%6968A1FD06FF6F6F6FFD05FF9A6F69A1FD04FFA89A696FFD05FFA16F6FA1%FD05FF9A69449ACAFFFFFFCAFFFFFFA1699A9A6FFD05FFA894446FA8FFFF%A168696FFD15FFC3696970FD05FF69CAFD09FFCA6FFFA1C3FFFFFFCA6969%76FD06FFCF6F69699AFD05FFC3CAFFA1FD05FFA7FF9AFD05FFCA696994A1%FD05FFCA9A696FA1FD06FFCA699370FD05FFCA94699A9A9ACAFFFF9A6969%A1FD13FFCA696969FD05FFA8699AFD0AFF69A1FD04FF9A4469A1FD09FF6F%936FCAFD15FF9A6F699AFD08FFC3696976FD05FFA16969FD05FFA16968A1%FFFF9A9AFFFFCA6F6869A8FD12FF706969C3FD06FF6F69CAFD08FFCA6FFD%04FF9A6994CAFFCAC3FFC3FD05FFA1CAFD17FFA8FF9AFD05FFA1FFFFCAFF%FF6F696FFD04FFC369CAFD04FF9A6969CAFFFFFF9A68CAFFFFA169699AFD%11FFA169689AFD07FFA1446FA8FD07FF6FA1FFFFA86F449AFD04FF69696F%FD0FFFCFFFFFA1A1FD0DFFCAFD04FFA16F939AFFFFFF766969FFFFFFA1C9%FD04FF6F6969FD04FFA168696FFFFFFF6F6968A1FD10FF94696FCAFD08FF%9A6993A1FD05FF709AFFFFCA9369C3FD04FF9A69699ACAFD08FFCACAFD05%FFCAC36F9AA1FD11FFA169699ACAFFFFFFA1696FFD04FFCACAFF6F6970FD%05FF696FCAFD05FF69696FFD0FFFA168699AFD09FFCF9A68696FA19A9A69%9AFFFFA86F68A1FD04FFA8C36F6F9AC3FD08FF9A949AC3FD04FF6F69689A%FD10FFA89A696F76CAFD04FFA16969FFFFFFA16F69699AFD05FF6969A1FD%06FFA168699AFD0EFF6F696FFD0CFFC36F6969696FC3FFFFCF6F69CAFD07%FFCAA1FD09FF9A936993FD05FFC3696FA1FD12FFC39AFD07FFA16969FFFF%FF9A699AFD05FF9A699AFD08FF94696FFD0DFF9A6968A1FD0EFFA8CAA8FD%04FF6F68A1FD04FFA8FD0EFFCA6F696FCAFD04FFA0CAA1A1FD10FFCAFFFF%CFFD04FFA8FFFFFFA1696FFFFFFF6FA1FD04FF9A696FFD05FFA8FFFFFF9A%6968A0FD0CFF946994FD15FF9A69A1FFCAA1C39AFD08FFC3FFC9A8FD04FF%A1A1CAA1FD14FFCAA1CA9AFD08FFCAA1FFA7FFA1696FFFFFFFA1FFFFFFA8%696FFD07FF9AFFFFFF6F6969FD0BFFA168699AFD14FF9A449AFFFFA86F68%9ACAFD07FF6F696FFD05FFA8FD0DFFA8CAA89AFD06FFCA6F699AFD08FFA1%696FA1FFFF76699AFD06FF6F68FD05FFA1A16F699AFFFFA169699AFD0AFF%6F696FFD14FFCA6994FFFFFFCA69696FA1FD06FFA16F6969A1FD0AFFA19A%9A6F9AA1FFFFFF946F69CAFD05FFA1696969C3FD06FFA1936969A1FFFFFF%6F69A1FD04FF9A699AA19A9A9A6FFD049A94A8FFFF946994FD09FFA16968%9AFD06FFA1CAFD0CFF6969A8FFFFFFA1A16FCAFD07FFCA9A6976A1FD08FF%A06F6F9A6FA1A16F9AFFFFA144696FCAFD04FFA1A169CAA8FD07FFA76F6F%9AFD04FF6969A8FFFF9A686F769A9ACAA8FFA8A1FFFFA8CAFFFF766968A1%FD08FF9A696FCAFD06FF9A69946F9A9AC3A1CAA1CACAFF70699AFFA7CAA1%CACAA1A1CAA1CAA1CAA8FFCFCF9AFD09FF709A9AC39AA1FFFFCA94CAFF9A%9A6FFD07FFCAA1CAFFCACAA1CAA1CAA7CA6FCAA7CAA1CAFFA1689AFFCF9A%C3A1C9A1C39A9A6F9394FFFFFF9AFFFFFF696970FD07FFCA69696FFD08FF%CA76936969696F6F9A6F9A6F9A6F9A769A6F9A6F9A769A769A769A6F9A6F%9A6F946F9A6F9A76C3FFFF9A94A1A16F939AFFFFFF76A1FFFFFFA1FFFFA1%9A6F9A6F9A6F9A6F9A6F9A6F9A769A769A769A6F9A6F9A9A9A6F9A6F9A6F%946F6F68696F9AA1FFFFFFA169A1FFFF9A6869A8FD06FFA16969CAFD0CFF%9A6F6F9A709A6FFD069AA19AC3A1C9A1CACAFFCAFFCAFD05FFCAFFA1A16F%94CAA1696F6F9A70A1FFFFFFC39AFD04FFCA6F9A9ACACAFD07FFA8FFCACA%A7CAA1CAA1A19AA1FD069A6F9A709A699ACAFFFFFFA8A16F69699AFFFFA1%6969A1FD06FF94686FFD0DFF9A69CAFFFFCACA6F6976A19AA19A9A686969%6F6F6F69946F946F6F6F9A6F9A76A1FFFFA1939A6FA1CA6FA1FD04FFA894%FFFFFFCA69A1FFFFA19A6F9A6F94699A6F9A6F6969946F6F69696FA19AA1%9A9A699AA8FFFFFFA76F9AFFA8A16F69446F9AA76FFFFFFF69696FFD06FF%69699AFD0EFFA1699A9AC3A8A169C3FD04FF6FA1FD04FF6F94CAFFFFFF6F%94A8CAA1C39A9ACAFF9AA1FFFFFF9AA1FD05FF6FCAFFFFA19AFFFF6F9AA1%CACACA6F9AFD04FF6F9AFD04FF9A94CAFFFFFFA1939ACAA1A16F939ACA6F%6969696FCAFFFFFF9AA1FFFFA1696FCAFD04FF9A6969C9FFFF9A9A769A9A%9A769A9A9A769A6FA1A76F699A6F9469696F9A6F696FA1A1CACACA6F6F6F%9A9A9A69696F9A769A699AFF9AA7FFFFA16FFD06FF9A9AFFFFCA6FFF6F69%9A9A769A6969769A6F94699AA8FFA1A19A94699A6F6F696F6F9A6F6969CA%766968696FC3A094FD04FFA19AFFFFA16968A1FD04FF9A6993FFFFFF9AFD%0C69FF9A69FD04FFA16FCAA8CACACA9A9A6F69699A6F696FC39A699AFFCA%CAA1C370FF6FFFFFFF6FC3FD06FFA19AFFFFFF9ACA9A9ACAA8CAFFA169A1%A19A69936F6F699476A1A7CAA1FFCA939AFFFFFFCA939ACA699ACAFFFFFF%6FCAFD04FF69CAFFFF696970FD04FF69696FFD04FF9A69CAFFFFA16FA8FF%FFA16FFFA89A699A769A6F69699A769A6F9A696F70A1A16F9AFFFFCA699A%769A769A699AFF6FA8FF9A6FCFFD07FF69A1FFFF6FFF766F6F9A9A9A6F6F%A1FFFFA169CAA19A696F6F9A769A6F6F6894769A6F6F6FCAFF6FA1FD04FF%9A699AA8FF6F6FA1FFFF9A446FCAFFFFA76969C3FD05FFC36FC3FF9A9AFD%04FFCAFFFF9A69A1A19A946FC3A1CACAFF9A94CAFFFFFF70946F9A6F9A69%A1A1C3A19A6FFF9A9A9A696FFD08FF9A69A16FA1FF9A70CAA1CA9A696F9A%6F9A6F9ACAFFFFFF6F9ACACAA8CAA1946FA1A1A169A1FFFF9AA1FFFFFFCA%6F9AA1FFCAA1FD04FFA16969CAFFFFA16869A8FD06FFCA6F9A6FCAFD06FF%CF696FFFFFFF699AFD04A19A6F699A769A6F6F696969CA9A6FA1A19A9476%949AFFA169769AA8CACACAA8FFA1CA6F9A68A1FFA16F9A6F9AA1CA6FA1A1%69696F6994769A6F6969FD04A1C3766FA8FFFF9469FFFFCA6FFFFFFFA8FD%0AFFCA69699AFFFF6F696FFD09FF6F69A7FD06FFC969A1FD04FFFD059AA1%6F94A8CA9A6F9ACA6FCAFFC369696FCACAA16F949A9A6FFF7093699A709A%6F936F9AFF949A9A6F9AA1FFA19A696FA1FFCA94A1A1699AA8CA6FFD059A%76A1CAFFFFFFA169A1FFFF94A1FD0EFF93689AFFFF6F449AFFFF6F9A9AFD%05FF9A6F9AFFA8FFFFFF6F69A8FD0AFF946F9A6F94A8FFA169696F689469%CAA1946FCA6F93699A76A16F9A6F9A6F9A769A9A9A6F696F94A89A6FA1A8%6F6F69696F69A1FFFF6F9A76946FFD0BFF689AFFFF9A696FA1FD08FFA7A1%FFFF6F6969FFFF69699AFFFF9A6FA1FD06FFCA936F9AA7FFFF936FFD0CFF%CAA0699AC39A9A70A16F9ACA9A6993CAFF6FA1CA6969936F949A9A9AA19A%A16F9A696969CA9A9AFFFF699394FFFD049A6F9BA19A69C3A7FD0CFF9469%FFFFFF9ACACAFD08FF9A70FFFFA16993CAA16968C3FFFF6FCAFD09FF6F69%FFFFCA689AFD0EFFA1A1699AA1CA6F6FA1C36F696FC36FA1CF6F699A696F%FD0669686F696F6F696FFFA193A19A689AA1CA699AA1CA9A699ACAFD0EFF%9A69A7FFFF9AA8FFA8A19A9A6F6F69696894FFFFA16968CAA16969A8FFFF%9AFD0AFFA19AFFFFA169A1FD0FFFA1939A9A696F6F9A69939A9A69A1FF9A%70936F9A9AA19A9A69699AA19AA19A94699A6FFF9A696F9A69939A9A696F%709A69CAFD0FFFCA69A1FFFF9AFD07696F9A76A16FFFFFCA69699A766969%FFFFCA6FFD0AFFCAA1FFFF9A68FD11FFA1CAA16FA8FF76699AFF6F696F6F%9ACA686969946F9A6969689A769A6F6F6969A1A1696F689AFFA1689ACAFF%6FCAA1CAA8FD0FFFA86970FFFF9A689A76A1A194A8FD04FF9AA8FFA86F68%9A9A6994FFFFCA696F9A9AA1A1CACAFFFFFFA1A1FFFF6F94FD13FF9A69A1%6F949A9A6F699AC36F9A6F69699369696993CAC9696969936F6969946F94%9AA169936F9A6F6F9A949AFD13FF6F94FFFF9AA1FD04FF6FFD05FF6FCAFF%FF6F69706F696FFFFFC9696FFD04696869696F6F6FA1FFCA6F6FFD13FFA1%9A9A9AA1A1449A6FFFA16F6FA16893A16F4493CAFFFFA169696FCA69699A%9469A1FF9A6F699ACA6FA176A1FD13FF9A69FFFFFFCAFFFFFF6F699AFFFF%FFA169A8FFFF9A686F93699AFFFF9AA1FFFFCACAA1A19A9A6F6969CFFFFF%699AFD16FF6F9A6F93A89A9A699AFF9A6F696F699AFFFFA8FFFFCA69696F%696F9AFFA1699A6FCF6F946F94FD16FF9A69CAFD04FFCF6F696F936FA170%696FFFFFFF70696F696976FFFF9A9AFD09FFA86FA8FFA1699AFD16FF9A9A%CA6FA7449A9AA1A19A6F69689AFFFF9A696FFFFFCA6F6944A16FA1A0A16F%69A19AA1A176FD16FFA168CAFFFFFFCA696976FFA869446969CAFFFFFF9A%446F6969A1FFFF6FC3FD0AFFA0FFFFCA69C3FD18FFCA936F9AA1A16F9469%696FCAFFFF9A94CAA169CAFFFF9A9369946994A1C96F9A69CAFD18FFA169%A1FFFFFF6969A1FD04FFCAA7FD05FF9AFD04699AFFA86969CAFD0CFFA169%A1FD11FFCAFD07FFA1FF9A936969686F9AFFFFFF6F6FA8FFFFA169A1FFFF%A89A6969686F6FA1FFCAFD06FFCAFD12FFA168A1FFFF6F69A1FD0CFFA068%696969A1FFFFCFA19AFD0CFFA169CAFD0FFFCA69696F9A9AA1FD049A6F69%696F70C3FFFFFFA169A1FFFF6F9AFFFF6F94A7FFFFFF9A946969699476A1%FD049A6F69699AFD10FFA7699AFFFF949AFD0DFFA1696968699AFD11FF9A%69A7FD0FFF76696F94696968696869699476A1A8FFFFFF9A6F6FCAFFFFFF%6969FFFFFF9A6F6FCAFFFFFFCA9A9A6F6968696869686F6F9468CAFD0FFF%CA68A1FFFF769A6FA1FD0BFFA168698D69A1FD0EFFCAFFFFC369CAFD0FFF%A169FD0DFFCA9A6F9AA1FD05FF6994FD05FFA16F9AA1FD0DFF9A69CAFD0F%FFCA699AFFFF9A69A1CFFD04FFA19AA1FD04FFA1696968699AFFA89AFFFF%CAFFA1A1769A7694699AFFFF9A69A1FD0FFFA169A1FD07FFA8CA9A9A6F94%76CAFD07FF6F69FD07FFA09A6F9A76A1A8FD08FF9469FD10FFCA69A1FFFF%69CAFD04FFA86F6869696FCAFFFFA1FD0469A1FFFF6F936F946FFD049A94%699AFFFFFFC369CAFD0FFFCA69A1FFCA6F9A6F9A6F946F9A9ACAFD06FFA1%A19AA1696F9AA19AC3FD06FFA19A6F9A6F946F9A6F9AFFFF699AFD10FFA1%69A1FFA19AFD05FF6F689AFFFF70A1FFFF9AFD046976FFFF9A6FA1A8FD04%FFA14493FFFFCFFFA1699AFD0FFFA8696FFFA193A8CAA8CACAFD0AFF9368%694469696944696FFD09FFA8FFA8CAA8A16FFFA86976FD10FFA168C3FFCA%6FFD04FF9A449AFFFFFFCF6FFFFF9A446993699BFFFF9ACAFD05FFC36994%FD05FFCA69A1FD10FF6F93FFFF6FFD0FFFA8C3A1CA6993A1CAA1CAFD0EFF%9A9AFFC969C3FD10FF9A69CAFFFF949AFFCA9A6994FD04FFA89AFFFF9A69%696F696FFFFFFFCAFD04FFA1686FA8FD05FFCA6976FD10FF9A69CAFF9AA1%FD12FF6F69FD12FF9AA1FF7669A8FD10FF9A68FFFFFFA16969694493A8FF%FFFFA86F6FFFFF9A686F9A699AFD07FFCA6993CAFD07FF699AFD10FFA169%A1FF9A9AFD12FF6993FD12FF6FFFFF9469FD11FF6F6FFD04FFA8A19AA1FD%04FFA89A6FCAFFFF6F696F6F696FFD06FFCA6869A7FD05FFCFFFFF9469FD%10FFCA689AFFA16FFD12FF6F69FD11FFA194FFFF689AFD11FF6F6FFFFFA1%A1FD09FFCFFD04FF6F689AA16993FD05FFCA6969A8FD05FFA7A1FFFF9A69%CAFD10FF946FFFFF9ACAFD11FF6994FD11FF9A9AFFA169A1FD11FF699AFF%FF9A9AFD0EFF69699A9A6969CAFFFFFFCA6969A8FD05FFA19A6FFFFFA168%A1FD10FF7669A8FF6FA1FD06FFA1FD049AFFA19A769AA86F69CA9A9A76CA%FFFF769A6F9ACFFD05FF6FA1FF9A69CAFD10FFA169A1FFFF9468696F9AA1%CACAFD04FFCACFFFA86969A1CA6969A1FFFFCA69699AC39A9A6F9A6F9369%9AFFFFA8699AFD10FFCA69A1FFA16FFD07FF9A696FCAFFCA6F699AFF6F93%CA9A699ACAFF6F9ACACA69CAFD04FFA894FFFF6994FD11FF9A69FFFFCA6F%9A6F6FFD04696FA1A1A16FFFFFC36969A1A86944A1FFFF6F696F9A6F9A9A%A1A1FFFFCF6FFFFFFF696FFD11FF696FFFA86FA8FD07FF68A1FFFFFF9A68%FFFF6F69FFA869A1FFA16FFFFFFFA1A1FD04FF9A6FFFA16976FD11FF696F%FFFFA1A1FFFFFFCA9A9A6F694469689AFFFF9A6968CFFF6F699AFFFF9A94%FD0AFFC3A1FFFFA169CAFD10FF9A69CAFF6FC3FD06FFCA69A1FFFFFF9A69%FFFF6F93FFCA69C9FFC369FD09FF6FCAFFA169CAFD10FFCA699AFD0CFFCA%A193A1FFFF9A6994FFFF9A4493FFFFA1CAFD0AFF709AFFFFA1699AFD10FF%A144A1FFA16FFD07FF68A1FFFFFF9A69FFFF6F69FFA869A1FFA1696FFD07%FFA86FFFFF696FFD11FFA168CAFD0EFF9ACAFFFF6F696FFFFF9A6969CAFD%0CFFA16969FFFFFF6994FD11FF6F6FFFFF94A8FD05FFCF699AFFFFFF9A69%CAFF6993CAC969C9FFFF6F696FFD06FFA19AFFA7699AFD11FF6F93FFFFCA%FD0FFFA86969A1FFFFCA68699AFD0BFF7669699476FFFF9A44CAFD10FF76%69A8FF6F9AFD06FF69A1FFFFFF9A44936F6F69946969A1FFFFFF6F6969CA%FD04FF6FCAFF9A44CAFD10FFA16976FFFF9AA1FD09FFA1FD04FFA14469A1%FFFFFF93699AFD0AFF9A696FFFFFCFFFFFCA6994FD10FFCA69A1FFCA6FFD%06FF699AFFFFFF9A69CAFD04FFCA69CAFD04FF9A696FFFFFFFA19AFFFF69%9AFD11FF9A69FFFFFF6FA1FD09FF9A6FCAFFFF9A696FFD04FF6F6969FD09%FF6F696FFD07FF6F69A8FD10FF6F69FFFF6FA1FD05FF69A1FFFFFF9A68FD%05FFA869A1FD05FF9A69A1FFFF949AFFA1699AFD10FFCA699AFFFFA16944%6F9ACAFD07FF6976FFFF6F689AFD04FFA16969A1FD06FFCA696969A1FD07%FFCA699AFD10FFA169A1FF9A9AFD04FFCA699AFFFFFF9A69CAFD04FFCA69%C3FFCAFD04FF69A1FFCA6FFFFF9A69FD11FF7669A7FFFF9A9AA16969699A%A1FD04FFCA6FFFFFCA69699AFD04FFA869689AFD05FFA16869A1CA6FFD04%FFCAA8FFFF9468CAFD10FF696FFFFF6FCAFD04FF68A1FFFFFF9A68FD05FF%A169A1FF6FFD04FF6F9AFF6F9AFFCA449AFD10FFA8696FFFFFFFA1FFFFFF%A194686969A1A8FF76A1FFFF766969CAFD05FF6F696FFD04FFA16994CAFF%FF9A9AFFFFFF6FA1FFFFA86994FD10FF9A69CAFF9B6FFFFFFFA1699AFFFF%FF9469A7FD04FFC369A1FF9A94FFFFC369FFCA94CAFF7069CAFD10FF9A69%CAFD09FFCF9A9469696F9AFFFFFF94699AFD06FFA16869A1FFFFA0446970%9A6F9A69696F93696969FFFFFF6F69A1FD0FFFA8696FFFCA6FA8FFA19A6F%9A9AFFA1946F9AA1FFFFCA6F946FCAA16F6F9A6FCAFF9A6FFFA8696FFD10%FFCA689AFD0DFFC36F6976FFFFA168699AFD06FFCA93699AFFFFCAA1A1C3%A1CAA1CACFFFCAFFFFA1A1FFFFFF6994FD10FF9A69A8FF9A9AFD15FFCFCA%FFFFFF6FCAFF9A69CAFD10FF6969CAFD0FFF6FCAFFFF9A6969FD08FF6F69%69CAFD0DFFCA9A9AA8FFFFA1449AFD0FFFCA689AFFFF69CAFD18FF6F9AFF%CA689AFD10FF76699AFFFFA19AFD0BFFA19AFFFFA869689AFD08FFCA6969%9AFD0CFF9A69936F9ACAFFFF9A69CAFD0FFF9A69CAFFA16FFD0BFFCAFD0B%FFCA94CAFF9A69A8FD0FFFA1696FFFFFFF6FCAFD0BFF9AA0FFFFA16969A1%FD09FF93686FFD0BFF9A449AFFFFA19AFFFFA86969FD0FFFA8696FFFFF6F%A1FD0AFF936FFD0AFF9A76FFA8696FFD0FFFA86969FFFFFF9A696FCAFD08%FF9A6F69FFFFFF69696FFD0AFF9A6969A1FD0AFF6969FD04FF6FA1FFFFA1%696FFD0FFF9A69A1FFA194FD04FF9A9ACAFFFFA169699AFFFFFF6FA1FFFF%FFCA6FFFFF9A69CAFD0FFF9469CAFFFFA19A9A6969A1FD08FF9A9AFFFFA1%6969C3FD0BFF696969FD09FFA8696FFD04FF9A6FFFFFFF9A696FFD0FFF69%6FFFFF6FA1FFFFFF94446FA8FF7669689AFFCA69696FFFFFFF6FA1FFCA44%9AFD0FFF9A44A1FFFFFFA1A8FFA16F446F6F9A76A1A1CAA19AA8FFFF6F68%6FA8FD0BFFA16969A1FD04FF9AA1FFFFFF699AFD04FF69A1FD04FF9A699A%FD0EFFA169C3FFCA69FFFFFF6F6969FFFFFF6F9AFFFFCA696994FFFF9A9A%FFFF6F69CAFD0EFF9A699AFD09FF9A6994FD0669A0FFFFC369699AFD0CFF%CA6F686FFFFFFF9A69FFFFFFA8696FFFFFFF9A9AFD06FF6F6976FD0EFF6F%69FFFF9A6FFFFFCA6F6FFFFFFFA1A1FFFFFF696FA1FFA86FA8FF9A699AFD%0EFF9A449AFD0BFF9AA1FFA8CAA16F6FFFFFFF696969FD0EFF9A6969A1FF%FFA194FFFFFFCA699AFD0CFF706976FD0DFFA16970FFFF93A1FFFFFF6FCA%FFFF9AC3FFFFA19AFFFFFF9A9AFFCA696FFD0EFF9A699AFD0CFFA19AFD04%FFA1CAFFFF9A6969A1FD0FFF696969CAFFFF6FA1FFFF70699AFD0DFF6F69%6FFD0DFF6F69A1FFA16FA8FFFFA16FFFFFA19AFFFF9AA1FFFF9A6FFFFF94%44CAFD0AFFCFFFFF9A449AFFFFCFFD0BFF6FA1FFFFCFFFFFFFA869686FFD%10FFCA696970FFFFCF6F9A6F6970FD0FFF9A696FFD0DFF6993FFFF9A9AFF%FFFF9ACAFF9AC3FFCA6FFFFFCA69FFFFA1699AFD0CFFCA94699AFD0FFFCA%6FFD06FF9A6969A1FD11FF9A6869A1FFFFFF769AA1FD11FF9A6969A1FD0B%FFA1449AFFFF6F9AFFFF9A9AFFA1A0FF9AA1FFFF69A1FFCA696FFD0CFFA1%6968A1FD11FF9A6F9AA8FFFFA168696FFD12FFCA93696FCAFD17FFA19369%9AFD0BFF9A68C3FFFF69C9FFFF6FFFA1C3CA9AFFFF6F9AFFFF6F69A8FD0B%FF9A6969CAFD12FFA8699AFFFFFF696969FD14FF9A69689AFD18FFA89A44%69A1FD0AFF6F68CAFFA769CAFFA1A7FFCACAA1FF766FFFFF766976FD0AFF%A169696FFD14FFCA6FFFFFFF6F6968A1FD15FF946969C3FD19FFC369696F%CAFD08FFCA696FFFFFC36FFD07FFA193CFFFA1696FFD09FFCA9A6993A1FD%15FFCACAFFFFA169699AFD17FF696969CAFD0CFF9A9AA1FD0BFF7669689A%A1FD07FFA1696FFFFF9A6FFD05FFA16FA8FFA16969FD08FFCA6F69699ACA%FD0AFFA16FA1FD0CFFA769686FCAFD17FFCA696969FD0BFF9A69696FCAFD%0BFFA89A69696FC3FD06FF9A699AFFFF9A6FFFFFFFA76FA1FFCA6F69CAFD%06FFA19A69696FCAFD0BFFC3696969CAFD0AFFCA946969A1FD19FF9A6869%6FFD0AFF9A446968CAFD0DFFCA7669446976A1A8FFFFFF6F699AFFFF9A6F%FFA16FA1FFCA6F68A1FD04FFA19A6969689AA8FD0DFF766969699AFD07FF%CFFFFF9444699AFD1BFF9A69699AFD09FFA193699AFD08FF9A9A9ACAFD04%FFCAC36F69699394A1A8FF6F69A1FFFF9A6F94A1FFFF9A69C3FFCA9A9A69%696994A1FD06FF9AA1FD08FFCF6F696FFD0AFF9A69699AFD1DFF6F68699A%FD09FFA8CAFD09FFCA6869A1FD07FFA8A16F696869696F6969A1FFFF9AA1%FFFF9A44696F69686969949ACAFD07FF9A689AFD0AFFA1FD0AFF9A69696F%FD1EFFCA6F69699AFD13FFCA699AFD0CFFCA9A9A6F946969A1FD04FF9A69%6F6F949AA1A1FD0AFFCA709A69CAFD13FFA169696FFD1EFFCFFFA8694469%9AFD12FF9469FD12FFCA69699AFFCF6F449ACFFD0FFFCAFFCA696FFD12FF%A1686969CAFD21FFA89369699AFD10FFCA69A1FD14FF6F696F9369A1FD06%FFA8FD0DFFA169A1FD10FFA1696969CAFD23FFA76F686976FD0FFF696FFD%0EFF769A70A1FD04FF766F69A1FD04FFA79A6969A1FD0DFF696FFD0FFF9A%686969CAFD25FFA893696976FD0DFFA169A1FD0DFF6F6FA7CA69A1FD0AFF%A169699AA1FD0EFFC969A1FD0DFF9A696969CAFD27FFA86F68696FFD0BFF%CA696FFD0DFFA169A1FFFFA169FD0AFF9A6FFD12FF9369FD0BFFCA944469%69CAFD29FFCA9469696FCAFD09FFA169CAFD0DFFC369CAFFFFA169CAFD09%FF9ACAFD12FFA7699AFD09FFCA9369696FFD2DFF9A686969A1FD06FFA19A%689AFD0EFFA8696FFFFF6F6FFD0AFF946969699AA8FD0FFF6F6976A1FD06%FF9A6968696FFD2FFFA16969699ACAFD04FFCA9A699AFD0FFF9A696F9A76%FD0BFF9A9A9A946869A8FD0EFFA1699AA8FD05FF706969699AFD31FFA169%69686FA1FD05FFA89AA8FD0DFFA1946F6969FD10FFA16894FD0DFFCA6FCA%FFFFCFFFFFA16969686FA1FD34FF9469696994FD13FFCA699AFFA1696FFD%10FF9A69FD13FFCA9A6969699ACAFD36FF9A696869699AFD11FF9A69FFFF%FF7669A7FD0FFFA169CAFD11FF9A69686969A1FD39FFCA9A69696993A0FD%0FFF6F9AFFFFFFC369CAFD0FFFA169FD10FFC36F69696994FD3DFFA16969%686969A1FD0DFF9A68FFFFFF6F69CAFD0FFF699AFD0EFF9A6F4469686FA1%FD40FFA193696969939AFD0CFF9A6FC39A93A1FD0FFF9A9AFD0CFFCAA16F%6969696FA1FD44FFA169696869699AA1FD0AFFA19A9AA1FD0EFFCA6F9AFD%0BFFC96F696869696F9AFD48FFA094FD04696F9AA1FD18FFC36FA1FD09FF%CA9A93FD04696FC3FD4CFFC96F6944696869699A9ACAA8FD13FFA8FD07FF%A1A16F6F68696869699AA1FD50FFCAC36F6FFD0569949AA1A1CAFD12FFA8%C99A9A6F8DFD05699A9AFD56FFA8A16F6F696944696869686F6F946FFD04%9AA19AA19A9A769A6F936969686968696869699A9ACAFD5CFFCA9A9A6F6F%696968FD1469949AA1A1FD64FFA8CA9A9A6F946F6F6869696968FD04696F%6F9A76A1A1CAFD33FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 201 C)
%%CMYKCustomColor: 0 1 0.6300 0.2900 (PANTONE 201 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-09-15T16:54:19-07:00</xap:CreateDate>
         <xap:ModifyDate>2008-09-15T16:54:19-07:00</xap:ModifyDate>
         <xap:MetadataDate>2008-09-15T16:54:19-07:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FUq1/zX5a8vwevrWpW9ghFVE0iq7Dp8Cfbf/Yg4DIBvw6bJlNQiZPLPMX/OUnkyxZo9Gsrn&#xA;V5FJAkNLWEgdCGcPJ98eR4ndYPZ3NL6yI/afx8WAX/8Azkn+Zusz+hoVhb2hP2Ut4Hupt/EvyU/Q&#xA;mRMj3uzh2BpsYuZJ95ofj4qYtf8AnJ3zE5JbWIPU3NZF0xd/8mtvT5Ux6suLs3F/MP8Asv1uT8gf&#xA;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&#xA;dirsVdir/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:334F1AB584CC11DDA992F400C35A6B9B</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:334F1AB684CC11DDA992F400C35A6B9B</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:334F1AB484CC11DDA992F400C35A6B9B</stRef:instanceID>
            <stRef:documentID>uuid:334F1AB384CC11DDA992F400C35A6B9B</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>8.500000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 201 C</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 201 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>63.000000</xapG:yellow>
                           <xapG:black>29.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -275.645 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 275.645 li
275.668 275.645 li
275.668 0 li
cp
clp
[1 0 0 1 0 0 ]ct
55.3198 192.708 mo
57.061 195.364 57.2939 197.608 57.3218 198.449 cv
56.8384 199.309 54.7441 201.269 53.2212 202.357 cv
52.8843 202.353 52.5068 201.922 52.6235 201.664 cv
54.0103 200.077 56.4229 196.642 54.0186 192.974 cv
52.2773 190.316 49.5962 190.22 47.5991 191.529 cv
46.1343 192.489 44.6899 193.843 44.6382 197.177 cv
44.5435 201.534 li
44.4814 203.836 43.7866 206.913 41.0566 208.702 cv
37.894 210.775 33.7974 210.115 31.1025 206.004 cv
30.46 205.023 29.8799 203.775 29.6074 202.778 cv
29.438 202.302 29.2476 201.794 29.0815 201.541 cv
29.6938 200.732 31.3716 199.226 32.7695 198.31 cv
33.0522 198.306 33.4839 198.746 33.3877 199.035 cv
32.0596 200.493 30.4556 202.766 32.4453 205.802 cv
34.4766 208.9 37.0757 208.146 38.6069 207.144 cv
40.5376 205.878 40.9077 203.465 40.9395 201.771 cv
40.9458 198.15 li
40.938 195.307 41.584 192.081 44.7461 190.008 cv
48.4082 187.608 52.625 188.597 55.3198 192.708 cv
cp
false sop
/0 
<<
/Name (PANTONE 201 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 1 0.63 0.29 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
35.0518 183.793 mo
36.0137 183.728 36.0366 183.678 35.6372 182.697 cv
33.8843 178.389 li
33.4707 177.373 33.2949 177.363 32.4277 178.084 cv
27.1885 182.42 li
26.4175 183.061 25.5503 183.781 25.1934 184.171 cv
25.2222 184.241 li
25.4492 184.271 26.4766 184.262 27.7393 184.196 cv
35.0518 183.793 li
cp
35.5107 175.522 mo
34.7993 176.098 34.7456 176.283 35.1733 177.333 cv
37.3257 182.622 li
37.6821 183.498 37.8784 183.663 38.752 183.593 cv
43.1221 183.243 li
44.9946 183.094 46.0898 182.934 46.4956 182.769 cv
46.938 182.589 47.0879 182.323 46.8193 181.453 cv
46.4595 180.252 li
46.5439 179.932 47.1338 179.692 47.4097 179.947 cv
47.7065 180.888 48.1484 181.974 48.7817 183.635 cv
49.252 184.791 49.8389 186.021 50.2607 186.952 cv
50.1987 187.223 49.6372 187.532 49.3672 187.397 cv
48.7866 186.286 li
48.3706 185.476 47.6514 184.87 46.1245 184.92 cv
44.1724 184.979 41.377 184.975 36.6494 185.184 cv
25.2417 185.662 li
23.7148 185.712 22.9292 185.787 22.3818 186.132 cv
21.7817 185.396 20.876 185.071 20.2397 184.881 cv
20.1543 184.671 20.1284 184.396 20.3579 184.221 cv
21.7944 183.104 23.2622 181.854 24.6704 180.669 cv
37.5376 169.839 li
40.2949 167.533 40.6626 166.853 40.2339 165.271 cv
39.9595 164.281 li
40.0444 163.961 40.6626 163.791 40.8813 163.906 cv
41.3921 165.372 41.854 166.613 42.4956 168.189 cv
43.1797 169.87 43.7949 171.171 44.2451 172.172 cv
44.2119 172.512 43.6362 172.787 43.3521 172.617 cv
42.8281 171.646 li
42.4551 170.94 42.0342 170.54 41.6655 170.69 cv
41.2603 170.855 40.668 171.301 39.897 171.94 cv
35.5107 175.522 li
cp
f
30.8843 140.982 mo
32.0688 140.833 36.7681 140.24 37.7808 139.998 cv
38.0269 140.042 38.2529 140.243 38.3052 140.655 cv
37.6904 141.19 36.4458 142.453 32.9482 146.21 cv
23.6216 156.229 li
22.5254 157.396 19.6089 160.356 18.8398 161.254 cv
18.8491 161.329 li
19.3418 161.419 20.2549 161.342 21.4395 161.192 cv
30.0479 160.106 li
31.9038 159.872 37.0278 159.149 38.1367 158.399 cv
38.5381 158.082 38.6851 157.34 38.646 156.392 cv
38.6177 155.214 li
38.9048 154.949 39.3838 154.926 39.6143 155.164 cv
39.748 156.862 39.8745 158.181 40.0498 159.568 cv
40.2485 161.145 40.4155 162.152 40.6606 163.455 cv
40.4961 163.743 39.9482 163.851 39.6826 163.655 cv
39.4365 162.657 li
39.2485 161.804 38.8965 161.238 38.4385 161.105 cv
36.9507 160.76 32.1377 161.405 30.2422 161.645 cv
18.8301 163.085 li
17.7241 163.225 16.8999 163.366 16.0908 164.269 cv
15.6045 164.863 15.4414 165.799 15.4365 166.715 cv
15.4385 167.362 li
15.2295 167.617 14.6372 167.691 14.4419 167.412 cv
14.3613 165.821 14.1104 163.833 14.0254 163.157 cv
13.9492 162.557 13.8296 161.924 13.689 161.446 cv
15.6079 160.442 20.2573 155.32 21.5669 153.935 cv
25.4121 149.753 li
28.1699 146.813 30.1055 144.663 31.7783 142.661 cv
31.7686 142.585 li
31.5522 142.46 30.9204 142.54 30.0913 142.645 cv
21.6406 143.711 li
19.7847 143.945 14.6558 144.63 13.5615 145.493 cv
13.2344 145.763 13.0732 146.393 13.0649 147.918 cv
13.0664 148.566 li
12.8628 148.859 12.2261 148.901 12.0698 148.616 cv
11.9312 146.88 11.8096 145.6 11.6299 144.174 cv
11.4263 142.561 11.2637 141.59 11.0234 140.325 cv
11.1831 140 11.7358 139.93 12.0015 140.125 cv
12.1465 140.64 li
12.4956 141.816 12.9063 142.526 13.2412 142.637 cv
14.7432 143.095 19.6304 142.402 21.4468 142.173 cv
30.8843 140.982 li
cp
f
33.1191 123.291 mo
37.2666 123.804 37.8286 123.797 38.335 121.65 cv
38.6021 120.463 li
38.7881 120.258 39.4897 120.421 39.5806 120.661 cv
39.2368 122.79 39.0391 124.062 38.8535 125.563 cv
38.668 127.063 38.5444 128.382 38.3262 130.793 cv
38.1802 131.004 37.499 130.996 37.3389 130.671 cv
37.3877 129.306 li
37.4551 127.142 36.8857 126.881 32.7383 126.368 cv
15.0815 124.183 li
13.8569 124.031 13.8174 124.026 13.6782 125.152 cv
13.4229 127.216 li
13.2231 128.83 13.0464 130.903 13.8389 131.954 cv
14.5962 132.962 15.4189 133.445 16.3555 133.98 cv
16.5552 134.31 16.2925 134.811 15.958 134.921 cv
14.2549 134.101 11.7964 133.225 10.249 132.767 cv
10.1841 132.645 10.2051 132.152 10.3374 132.054 cv
11.6294 131.985 11.7432 130.742 11.9565 129.016 cv
13.8379 113.817 li
14.0884 111.791 14.0513 111.443 13.0942 110.753 cv
13.0381 110.556 13.1289 110.147 13.2959 110.092 cv
14.8647 110.705 18.0317 111.364 19.2305 111.398 cv
19.5278 111.587 19.4487 112.225 19.1885 112.384 cv
18.1875 112.374 16.6934 112.456 16.189 112.965 cv
15.4106 113.745 14.9185 115.132 14.6626 117.196 cv
14.333 119.86 li
14.1938 120.986 14.2378 120.954 15.5415 121.115 cv
33.1191 123.291 li
cp
f
29.5107 107.102 mo
30.29 107.669 30.3394 107.646 30.6631 106.638 cv
32.0845 102.209 li
32.4199 101.165 32.2915 101.044 31.1641 101.04 cv
24.3628 101.001 li
23.3608 100.997 22.2334 100.993 21.7095 101.063 cv
21.6865 101.135 li
21.8413 101.304 22.6353 101.956 23.645 102.717 cv
29.5107 107.102 li
cp
35.1719 101.055 mo
34.2573 101.04 34.0977 101.147 33.751 102.228 cv
32.0054 107.664 li
31.7168 108.564 31.7612 108.817 32.4761 109.324 cv
36.0508 111.862 li
37.5825 112.949 38.5249 113.53 38.9419 113.664 cv
39.3965 113.81 39.6816 113.703 40.0347 112.863 cv
40.5298 111.711 li
40.8003 111.52 41.4067 111.714 41.4541 112.087 cv
41.0781 112.999 40.7197 114.115 40.1387 115.795 cv
39.7573 116.983 39.417 118.304 39.1426 119.288 cv
38.9219 119.456 38.2925 119.333 38.1724 119.056 cv
38.4399 117.832 li
38.6416 116.943 38.479 116.017 37.2764 115.075 cv
35.7412 113.867 33.6016 112.068 29.8423 109.194 cv
20.7891 102.237 li
19.5869 101.295 18.936 100.848 18.2949 100.761 cv
18.3071 99.8115 17.8213 98.9805 17.4561 98.4263 cv
17.5254 98.2104 17.6821 97.9829 17.9702 97.9956 cv
19.7881 98.063 21.7163 98.0464 23.5571 98.042 cv
40.375 97.9995 li
43.9692 98.0015 44.688 97.7158 45.3745 96.2285 cv
45.8003 95.293 li
46.0708 95.1021 46.6538 95.3687 46.7476 95.5972 cv
46.1982 97.0488 45.7554 98.2969 45.2354 99.9175 cv
44.6807 101.646 44.3174 103.038 44.02 104.094 cv
43.7759 104.333 43.1582 104.175 43.0493 103.862 cv
43.271 102.781 li
43.438 102.001 43.3726 101.424 42.9932 101.302 cv
42.5767 101.168 41.8364 101.129 40.8345 101.125 cv
35.1719 101.055 li
cp
f
40.9434 61.3506 mo
41.0693 57.7798 42.5605 54.4058 45.1631 51.457 cv
46.5142 49.9263 48.7441 48.061 50.3081 47.0708 cv
50.6978 46.8096 50.9326 46.6641 51.1279 46.3823 cv
51.8394 46.96 53.8442 48.4775 55.8647 49.8569 cv
55.9487 50.1831 55.603 50.6348 55.249 50.6753 cv
52.8447 49.3096 49.3906 48.5313 45.7627 52.6421 cv
41.9346 56.98 41.5762 63.2202 47.7534 68.6719 cv
54.02 74.2026 60.8096 73.4873 64.9131 68.8374 cv
68.1411 65.1802 67.0605 61.3516 65.8755 59.146 cv
65.9014 58.8154 66.3364 58.4429 66.6455 58.5142 cv
68.022 60.082 69.3408 62.5571 69.5327 63.4829 cv
69.292 63.876 69.1113 64.3213 68.9556 64.7388 cv
68.6436 65.5732 67.2896 68.0098 65.6885 69.8242 cv
63.4365 72.3755 60.7471 74.3398 57.4585 75.1191 cv
53.8154 75.9385 49.5483 75.2998 45.6987 71.9023 cv
42.3862 68.979 40.8027 65.0591 40.9434 61.3506 cv
cp
f
63.7251 43.2432 mo
61.3018 39.8384 60.8706 39.3633 58.8145 40.5825 cv
57.998 41.0659 li
57.7207 41.0679 57.3672 40.4404 57.4829 40.2114 cv
59.2544 39.0483 60.3247 38.3354 61.5571 37.4585 cv
62.7588 36.603 63.7832 35.8252 65.2773 34.6641 cv
65.5313 34.6299 66.0083 35.1694 65.916 35.4307 cv
65.2227 36.022 li
63.52 37.4775 63.8281 38.0405 66.251 41.4453 cv
74.2827 52.73 li
75.7368 54.7729 76.4292 55.5503 77.4224 55.7715 cv
78.0146 55.8872 78.877 55.8599 81.311 54.1274 cv
83.9297 52.2637 84.4844 51.6738 84.7695 51.0308 cv
85.1089 50.2031 85.0791 48.4658 84.5181 46.3735 cv
84.5874 46.0796 85.2651 45.793 85.4268 46.02 cv
85.6807 46.3765 87.1719 50.2983 87.3638 51.4805 cv
85.7466 52.5342 82.7969 54.5845 79.6235 56.8433 cv
76.7891 58.8604 li
75.4951 59.7813 74.5322 60.5151 72.853 61.8081 cv
72.5991 61.8423 72.1685 61.3672 72.2148 61.041 cv
73.0698 60.2861 li
74.7183 58.8198 74.4565 58.3218 72.0332 54.917 cv
63.7251 43.2432 li
cp
f
148.274 26.7539 mo
143.638 26.3887 li
142.582 26.3057 142.547 26.2627 142.921 25.374 cv
145.84 18.6572 li
146.348 17.4995 146.8 16.5767 146.929 16.3872 cv
147.004 16.3936 li
147.193 16.8872 147.447 17.9854 147.674 18.9614 cv
149.2 25.5894 li
149.455 26.6875 149.367 26.8403 148.274 26.7539 cv
cp
117.401 26.8862 mo
115.5 27.2075 114.927 27.2236 114.795 27.125 cv
114.657 26.9868 114.584 26.5552 114.465 25.8486 cv
112.912 16.6655 li
112.727 15.5664 112.812 15.3906 115.124 15 cv
119.262 14.3003 121.586 16.9346 122.111 20.0352 cv
122.562 22.7036 121.937 24.2222 121.069 25.2163 cv
120.134 26.2627 118.744 26.6592 117.401 26.8862 cv
cp
96.2837 34.2686 mo
91.9922 36.063 li
91.0156 36.4712 90.9653 36.4492 90.8911 35.4878 cv
90.418 28.1792 li
90.3413 26.917 90.3218 25.8901 90.3496 25.6626 cv
90.4194 25.6333 li
90.813 25.9868 91.5415 26.8467 92.189 27.6113 cv
96.5752 32.8096 li
97.3037 33.6699 97.2954 33.8457 96.2837 34.2686 cv
cp
158.158 38.5122 mo
157.149 38.313 li
155.544 37.9868 155.101 37.353 154.276 33.8545 cv
150.369 17.4971 li
149.941 15.7065 149.481 13.8335 149.129 12.0493 cv
149.076 11.7656 148.818 11.6655 148.592 11.6475 cv
148.137 12.1309 147.439 12.7944 146.513 13.001 cv
146.576 13.6445 146.29 14.3809 145.65 15.7676 cv
140.961 26.1777 li
139.027 30.4971 137.769 32.9932 136.946 34.7646 cv
136.306 36.1519 135.442 36.5229 134.531 36.5308 cv
133.278 36.5518 li
133.187 36.6201 133.145 36.7593 133.125 36.9087 cv
132.505 36.811 131.923 36.603 131.457 36.2969 cv
128.543 34.4888 126.036 31.6831 122.197 27.125 cv
121.958 26.8423 121.705 26.4814 121.852 26.2144 cv
123.583 25.1143 126.035 22.6011 125.404 18.8726 cv
124.94 16.1255 123.336 14.5801 121.381 13.9014 cv
119.5 13.2104 117.267 13.3862 114.955 13.7769 cv
111.301 14.3945 108.748 14.9473 106.693 15.4966 cv
106.422 15.7041 106.528 16.332 106.822 16.4839 cv
108.042 16.4395 li
109.604 16.377 109.828 17.0254 110.458 20.7534 cv
112.841 34.8423 li
113.537 38.9629 113.549 39.4858 111.433 40.1265 cv
110.661 40.3594 li
110.601 40.2856 110.529 40.231 110.448 40.2104 cv
109.46 40.4941 li
107.883 40.9375 107.2 40.5767 104.868 37.8413 cv
93.9165 25.0771 li
92.7178 23.6802 91.4531 22.2246 90.3242 20.7983 cv
90.147 20.5703 89.8721 20.5991 89.6631 20.6865 cv
89.4785 21.3247 89.1621 22.2334 88.4321 22.8403 cv
88.7822 23.3843 88.8647 24.1694 88.9287 25.6958 cv
89.5151 37.0981 li
89.7695 41.8237 89.7905 44.6191 89.8687 46.5708 cv
89.9326 48.0972 89.334 48.8218 88.5273 49.2451 cv
87.4224 49.8369 li
87.2896 50.1079 87.605 50.666 87.876 50.7256 cv
88.8022 50.2949 90.0278 49.6968 91.1792 49.2153 cv
92.834 48.5664 93.9155 48.1143 94.8535 47.8086 cv
95.106 47.5303 94.8604 46.9429 94.5396 46.8613 cv
93.3423 47.2324 li
92.4741 47.5093 92.2075 47.3618 92.0234 46.9209 cv
91.8545 46.5171 91.6841 45.4233 91.5166 43.5522 cv
91.126 39.186 li
91.0479 38.3125 91.2109 38.1152 92.083 37.7505 cv
97.3511 35.5479 li
98.3979 35.1104 98.5835 35.1621 99.1655 35.8682 cv
102.789 40.2207 li
103.436 40.9854 103.887 41.5732 104.056 41.9771 cv
104.209 42.3442 103.813 42.769 103.111 43.1484 cv
102.145 43.6816 li
101.978 43.9673 102.258 44.5405 102.599 44.5708 cv
103.595 44.1108 104.89 43.4834 106.564 42.7832 cv
108.045 42.1641 109.235 41.707 110.59 41.2168 cv
110.64 41.292 110.697 41.3491 110.761 41.3701 cv
112.5 40.9951 113.836 40.729 115.402 40.4644 cv
116.893 40.2124 118.167 40.0371 119.858 39.832 cv
120.063 39.6763 120.024 38.9966 119.767 38.8384 cv
118.964 38.853 li
116.749 38.9048 116.595 38.4463 115.898 34.3257 cv
115.062 29.3809 li
114.922 28.5566 114.991 28.5049 116.668 28.2212 cv
118.16 27.9688 118.823 28.2603 119.528 29.0293 cv
120.982 30.6001 122.969 33.0493 124.184 34.3374 cv
127.501 37.8535 129.568 38.5132 132.738 37.9775 cv
133.341 37.8755 133.842 37.73 134.175 37.582 cv
135.03 37.6108 135.997 37.6445 136.903 37.7158 cv
138.672 37.895 139.841 37.9873 140.814 38.144 cv
141.166 38.0117 141.216 37.377 140.968 37.1577 cv
139.733 36.9409 li
138.835 36.79 138.665 36.5371 138.703 36.061 cv
138.737 35.6245 139.085 34.5742 139.792 32.833 cv
141.439 28.771 li
141.769 27.9585 142.004 27.8569 142.947 27.9312 cv
148.639 28.3799 li
149.77 28.4688 149.911 28.6001 150.106 29.4937 cv
151.34 35.0205 li
151.566 35.9966 151.699 36.7256 151.664 37.1621 cv
151.633 37.5591 151.087 37.7554 150.289 37.7725 cv
149.187 37.8052 li
148.906 37.9829 148.895 38.6206 149.184 38.8032 cv
150.279 38.8496 151.719 38.8833 153.527 39.0259 cv
155.225 39.1597 156.54 39.3032 158.08 39.5044 cv
158.281 39.3604 158.406 38.7314 158.158 38.5122 cv
cp
f
193.598 35.7046 mo
194.615 33.4561 196.433 29.2549 196.339 27.9019 cv
196.295 27.3574 195.789 26.8232 194.961 26.3608 cv
194.132 25.8989 li
194.04 25.5518 194.322 25.1113 194.595 25.0601 cv
195.871 25.7246 197.13 26.3374 198.474 26.9453 cv
199.92 27.5996 200.867 27.9844 202.14 28.4727 cv
202.334 28.7788 202.086 29.2344 201.815 29.3745 cv
200.956 29.0728 li
200.062 28.7559 199.225 28.7705 198.839 29.1641 cv
197.781 30.127 195.929 34.313 195.011 36.3438 cv
193.157 40.4414 li
191.729 43.5962 189.738 46.7144 186.824 48.0176 cv
184.572 49.0518 181.597 48.8413 179.047 47.688 cv
176.669 46.6128 174.505 45.0659 173.506 42.7793 cv
172.401 40.3579 172.738 37.3208 174.69 33.0054 cv
178.562 24.4473 li
180.268 20.6758 180.478 20.0278 178.561 18.9429 cv
177.732 18.4805 li
177.592 18.2422 177.939 17.6567 178.195 17.6416 cv
179.885 18.4932 181.04 19.0596 182.418 19.6826 cv
183.831 20.3218 184.984 20.7998 186.705 21.4907 cv
186.862 21.6934 186.652 22.3408 186.38 22.3926 cv
185.521 22.0908 li
183.44 21.3682 183.093 21.9536 181.387 25.7251 cv
177.844 33.5581 li
175.202 39.3965 175.187 44.02 180.457 46.4043 cv
185.453 48.6641 189.218 45.3872 191.712 39.875 cv
193.598 35.7046 li
cp
f
213.65 62.3286 mo
212.89 63.249 209.871 66.8994 209.3 67.769 cv
209.089 67.9053 208.787 67.9141 208.467 67.6489 cv
208.548 66.8384 208.591 65.0659 208.565 59.9326 cv
208.499 46.2446 li
208.498 44.6431 208.596 40.4893 208.541 39.3081 cv
208.483 39.2603 li
208.063 39.5317 207.45 40.2134 206.689 41.1338 cv
201.161 47.8213 li
199.969 49.2632 196.73 53.2993 196.436 54.605 cv
196.361 55.1113 196.763 55.7529 197.44 56.4165 cv
198.268 57.2554 li
198.24 57.6455 197.906 57.9897 197.575 57.9741 cv
196.314 56.8286 195.32 55.9546 194.242 55.0635 cv
193.018 54.0513 192.205 53.4316 191.135 52.6499 cv
191.058 52.3276 191.383 51.874 191.71 51.8345 cv
192.573 52.3931 li
193.294 52.8857 193.938 53.0566 194.363 52.8398 cv
195.684 52.0728 198.748 48.3057 199.966 46.8335 cv
207.295 37.9678 li
208.005 37.1089 208.508 36.4404 208.479 35.229 cv
208.427 34.4624 207.904 33.6694 207.281 32.999 cv
206.836 32.5278 li
206.813 32.1992 207.194 31.7393 207.528 31.8096 cv
208.677 32.9136 210.221 34.1904 210.746 34.624 cv
211.212 35.0093 211.732 35.3882 212.162 35.6401 cv
211.452 37.6865 211.573 44.603 211.567 46.5088 cv
211.63 52.1899 li
211.634 56.2207 211.696 59.1128 211.849 61.7178 cv
211.907 61.7656 li
212.15 61.709 212.557 61.2178 213.089 60.5737 cv
218.516 54.0088 li
219.708 52.5669 222.976 48.5552 223.183 47.1768 cv
223.235 46.7563 222.922 46.1865 221.883 45.0698 cv
221.438 44.5986 li
221.386 44.2461 221.821 43.7793 222.13 43.8799 cv
223.42 45.0498 224.386 45.8994 225.493 46.8149 cv
226.746 47.8511 227.529 48.4468 228.571 49.2046 cv
228.678 49.5508 228.322 49.98 227.995 50.0195 cv
227.537 49.7437 li
226.478 49.126 225.691 48.8896 225.372 49.0386 cv
223.964 49.7334 220.877 53.5854 219.711 54.9966 cv
213.65 62.3286 li
cp
f
250.698 80.8901 mo
249.951 79.6626 249.238 78.4146 248.755 77.4688 cv
248.481 77.3252 247.933 77.5713 247.866 77.9214 cv
248.152 78.5444 li
248.704 79.7578 248.629 80.2461 248.391 80.3911 cv
248.153 80.5361 247.759 80.7314 246.888 80.9072 cv
245.092 81.248 240.346 82.1006 237.443 82.5391 cv
235.209 82.9253 230.862 83.6675 228.009 84.0322 cv
230.901 80.0581 233.907 76.1924 236.946 72.3057 cv
238.921 69.7319 240.423 68.0649 240.723 67.7935 cv
241.015 67.6602 241.376 67.7944 242.293 68.9185 cv
242.656 69.3618 li
242.998 69.4639 243.469 69.0889 243.467 68.7798 cv
242.573 67.4644 241.851 66.3545 240.985 64.9336 cv
240.141 63.5444 239.545 62.4902 239.043 61.5122 cv
238.807 61.3999 238.486 61.5068 238.3 61.7051 cv
238.337 61.6299 238.36 61.5566 238.349 61.499 cv
237.088 60.0884 236.241 59.1201 235.281 57.9512 cv
234.273 56.7236 233.488 55.7046 232.35 54.1929 cv
232.114 54.0933 231.512 54.4893 231.533 54.7656 cv
232.071 55.5469 li
233.333 57.3975 232.858 57.8853 229.598 60.5625 cv
218.646 69.5537 li
215.386 72.231 214.907 72.5264 213.276 70.9785 cv
212.584 70.3237 li
212.256 70.2998 211.812 70.7627 211.863 71.0137 cv
213.124 72.4243 213.971 73.3931 214.979 74.6201 cv
215.938 75.7896 216.724 76.8081 217.862 78.3198 cv
218.098 78.4194 218.7 78.0234 218.679 77.7471 cv
218.171 76.9409 li
216.971 75.0396 217.354 74.6274 220.614 71.9502 cv
231.565 62.959 li
234.826 60.2817 235.397 59.9106 236.967 61.5088 cv
237.628 62.189 li
237.807 62.2388 238.084 62.022 238.237 61.7988 cv
238.203 61.8521 238.165 61.9043 238.153 61.9648 cv
238.439 62.5874 li
239.115 64.0801 238.696 64.999 237.244 66.9009 cv
225.949 81.5674 li
224.875 83.0176 223.543 84.5811 222.332 85.8052 cv
222.362 86.0083 222.426 86.1904 222.524 86.3521 cv
222.604 86.481 222.716 86.5898 222.843 86.645 cv
224.979 86.0977 229.847 85.2153 233.762 84.6035 cv
239.005 83.8022 li
243.357 83.145 246.878 82.7285 249.026 82.6602 cv
249.996 82.6455 250.699 82.8818 251.239 83.6157 cv
251.896 84.543 li
252.165 84.6011 252.709 84.27 252.707 83.9614 cv
251.99 82.9365 251.347 81.9561 250.698 80.8901 cv
cp
f
249.256 118.558 mo
249.398 118.424 249.833 118.366 250.543 118.27 cv
259.773 117.031 li
260.878 116.882 261.051 116.974 261.363 119.297 cv
261.922 123.457 259.21 125.691 256.093 126.109 cv
253.411 126.47 251.914 125.793 250.95 124.893 cv
249.937 123.922 249.587 122.519 249.406 121.17 cv
249.149 119.258 249.152 118.686 249.256 118.558 cv
cp
257.784 138.948 mo
254.526 138.748 252.127 140.797 250.7 142.604 cv
248.017 146.038 li
245.98 148.678 244.013 148.898 242.265 148.791 cv
239.881 148.644 237.791 146.962 237.986 143.792 cv
238.256 139.414 242.244 138.105 244.305 137.664 cv
244.553 137.528 244.508 136.957 244.241 136.751 cv
242.455 136.713 239.799 137.001 238.773 137.374 cv
238.777 136.444 239.06 135.553 239.523 134.897 cv
241.43 132.046 244.318 129.636 249.005 125.955 cv
249.295 125.725 249.664 125.485 249.926 125.64 cv
250.967 127.408 253.396 129.944 257.143 129.44 cv
259.904 129.069 261.503 127.52 262.248 125.588 cv
263.002 123.731 262.902 121.494 262.591 119.17 cv
262.098 115.498 261.632 112.927 261.152 110.855 cv
260.955 110.577 260.323 110.661 260.161 110.95 cv
260.165 112.17 li
260.174 113.734 259.519 113.936 255.771 114.439 cv
241.609 116.341 li
237.467 116.897 236.944 116.892 236.376 114.755 cv
236.132 113.833 li
235.826 113.646 235.244 113.8 235.156 114.041 cv
235.472 115.792 235.692 117.136 235.903 118.71 cv
236.104 120.209 236.236 121.489 236.384 123.186 cv
236.532 123.395 237.213 123.379 237.38 123.128 cv
237.393 122.325 li
237.417 120.109 237.88 119.971 242.021 119.415 cv
246.992 118.747 li
247.82 118.636 247.87 118.706 248.097 120.392 cv
248.298 121.891 247.984 122.543 247.191 123.222 cv
245.572 124.623 243.057 126.524 241.729 127.695 cv
238.102 130.891 237.372 132.935 237.8 136.12 cv
237.896 136.833 238.055 137.421 238.219 137.743 cv
238.262 137.782 238.313 137.805 238.365 137.819 cv
237.815 138.719 236.951 140.519 236.785 143.226 cv
236.483 148.132 239.27 151.448 243.64 151.717 cv
247.414 151.949 249.862 149.75 251.558 147.468 cv
253.729 144.571 li
254.769 143.233 256.509 141.521 258.813 141.663 cv
260.641 141.775 263.174 142.727 262.946 146.426 cv
262.724 150.049 260.079 150.909 258.142 151.283 cv
257.892 151.457 257.974 152.068 258.203 152.233 cv
259.871 152.336 262.117 152.133 263.092 151.852 cv
263.11 151.55 263.262 151.029 263.411 150.546 cv
263.789 149.584 264.071 148.238 264.144 147.067 cv
264.445 142.161 261.558 139.18 257.784 138.948 cv
cp
f
255.606 160.714 mo
259.737 161.569 260.416 161.632 261.063 159.488 cv
261.332 158.578 li
261.534 158.389 262.221 158.607 262.291 158.854 cv
261.83 160.689 261.53 161.94 261.209 163.495 cv
260.902 164.977 260.681 166.244 260.376 168.111 cv
260.213 168.31 259.496 168.238 259.386 167.983 cv
259.499 167.042 li
259.757 164.816 259.109 164.605 254.978 163.751 cv
241.103 160.88 li
236.971 160.024 236.41 159.985 235.686 162.114 cv
235.377 163.016 li
235.175 163.205 234.488 162.986 234.418 162.74 cv
234.879 160.904 235.179 159.653 235.484 158.172 cv
235.807 156.617 236.028 155.35 236.333 153.482 cv
236.496 153.284 237.135 153.339 237.323 153.61 cv
237.248 154.56 li
237.069 156.801 237.6 156.988 241.73 157.843 cv
255.606 160.714 li
cp
f
235.548 178.222 mo
231.664 176.677 231.119 176.541 230.086 178.49 cv
229.527 179.57 li
229.296 179.723 228.658 179.387 228.631 179.132 cv
229.502 177.159 230.015 175.979 230.573 174.574 cv
231.133 173.168 231.586 171.924 232.406 169.646 cv
232.602 169.479 233.258 169.659 233.331 170.014 cv
232.938 171.323 li
232.326 173.399 232.812 173.796 236.694 175.341 cv
253.225 181.921 li
254.37 182.377 254.407 182.392 254.827 181.338 cv
255.596 179.405 li
256.197 177.895 256.893 175.933 256.392 174.716 cv
255.914 173.549 255.24 172.874 254.47 172.119 cv
254.359 171.75 254.74 171.331 255.092 171.309 cv
256.532 172.533 258.689 174.002 260.07 174.837 cv
260.103 174.972 259.958 175.443 259.805 175.505 cv
258.537 175.244 258.113 176.418 257.47 178.034 cv
251.807 192.264 li
251.051 194.161 250.999 194.507 251.751 195.416 cv
251.755 195.621 251.564 195.993 251.389 196.004 cv
250.025 195.015 247.128 193.576 245.977 193.24 cv
245.737 192.981 245.975 192.385 246.267 192.297 cv
247.233 192.56 248.699 192.858 249.315 192.493 cv
250.266 191.936 251.094 190.718 251.862 188.786 cv
252.855 186.291 li
253.274 185.237 253.224 185.258 252.004 184.772 cv
235.548 178.222 li
cp
f
225.79 196.628 mo
222.211 194.32 221.553 194.166 220.313 195.795 cv
219.434 196.938 li
219.109 196.999 218.615 196.591 218.639 196.335 cv
219.976 194.408 220.706 193.35 221.525 192.078 cv
222.387 190.743 223.091 189.578 224.11 187.851 cv
224.334 187.725 224.91 188.006 224.987 188.326 cv
224.452 189.376 li
223.465 191.349 223.892 191.714 227.471 194.022 cv
229.177 195.122 li
231.017 196.309 231.513 196.494 233.98 196.78 cv
244.092 197.992 li
246.996 198.336 247.471 197.967 248.253 197.121 cv
248.994 196.339 li
249.352 196.3 249.799 196.634 249.789 196.942 cv
249.066 197.916 248.295 199.038 247.312 200.563 cv
246.369 202.025 245.664 203.191 245.219 204.028 cv
244.935 204.25 244.399 203.905 244.321 203.585 cv
244.521 203.129 li
245.037 201.887 245.047 201.578 244.779 201.405 cv
244.445 201.189 242.006 200.786 241.568 200.729 cv
238.335 200.31 234.935 199.78 231.827 199.531 cv
232.965 201.66 234.229 203.96 235.554 206.164 cv
236.719 208.176 238.235 210.818 238.637 211.077 cv
238.837 211.207 239.44 210.786 240.032 210.088 cv
240.469 209.56 li
240.846 209.487 241.294 209.821 241.264 210.162 cv
240.459 211.263 239.831 212.163 239.195 213.147 cv
238.561 214.133 238.02 215.044 237.39 216.168 cv
237.059 216.314 236.57 216.044 236.513 215.692 cv
236.919 214.694 li
237.718 212.87 236.191 210.536 234.34 207.092 cv
231.985 202.738 li
230.398 199.69 230.105 199.411 227.529 197.75 cv
225.79 196.628 li
cp
f
85.4619 230.39 mo
86.7715 228.021 87.0957 227.2 85.6836 226.237 cv
84.1719 225.22 li
83.9844 224.935 84.2207 224.429 84.5625 224.436 cv
87.6313 225.45 89.9521 225.551 91.1401 225.434 cv
91.2725 225.507 91.3662 225.649 91.3745 225.791 cv
90.9619 226.381 89.9326 228.086 88.835 230.072 cv
81.3638 243.587 li
79.8809 246.27 79.6201 246.898 80.9189 247.753 cv
82.251 248.626 li
82.334 248.944 81.9932 249.483 81.7036 249.46 cv
80.4512 248.677 78.9814 247.818 77.8232 247.179 cv
76.6318 246.52 75.123 245.731 73.7939 245.088 cv
73.6201 244.854 73.895 244.279 74.2095 244.18 cv
75.624 244.825 li
77.0718 245.489 77.4321 244.916 78.915 242.233 cv
85.4619 230.39 li
cp
f
116.472 240.57 mo
116.013 243.278 118.268 245.356 120.41 246.972 cv
122.318 246.125 123.885 244.574 124.292 242.181 cv
124.698 239.787 123.512 237.284 121.126 236.88 cv
118.554 236.443 116.858 238.295 116.472 240.57 cv
cp
122.188 256.155 mo
122.714 253.056 120.285 250.423 117.783 248.666 cv
115.015 249.608 113.731 251.975 113.378 254.055 cv
112.885 256.958 114.299 259.701 117.058 260.169 cv
119.705 260.618 121.702 259.02 122.188 256.155 cv
cp
126.803 242.526 mo
126.257 245.744 123.449 246.922 121.392 247.744 cv
123.704 249.711 125.707 252.15 125.061 255.956 cv
124.368 260.037 120.847 262.023 116.634 261.309 cv
113.167 260.72 109.888 258.347 110.667 253.756 cv
111.233 250.42 114.179 248.659 116.853 247.821 cv
114.903 246.198 113.172 243.967 113.648 240.939 cv
114.29 236.931 117.784 235.102 121.587 235.747 cv
124.905 236.31 127.442 238.759 126.803 242.526 cv
cp
f
150.019 238.313 mo
150.102 237.654 150.229 237.27 150.813 237.093 cv
159.584 234.271 li
159.801 234.194 159.952 234.412 159.978 234.568 cv
159.859 235.476 159.462 236.55 159.037 237.226 cv
152.162 239.451 li
151.323 239.711 151.169 239.938 151.068 240.722 cv
150.786 243.188 li
150.715 243.685 150.891 243.817 151.426 243.81 cv
152.223 243.758 li
156.964 243.458 162.544 244.755 163.53 250.724 cv
164.654 257.517 158.009 263.456 152.109 264.634 cv
151.673 264.545 151.506 263.766 151.796 263.435 cv
157.521 262.125 161.828 257.58 160.938 252.201 cv
160.017 246.625 154.149 246.143 149.734 246.792 cv
149.175 246.885 149.085 246.576 149.197 245.63 cv
150.019 238.313 li
cp
f
187.819 231.704 mo
186.521 229.33 186 228.616 184.431 229.293 cv
182.763 230.025 li
182.421 230.03 182.12 229.56 182.309 229.275 cv
184.809 227.227 186.137 225.32 186.674 224.255 cv
186.807 224.183 186.978 224.18 187.102 224.248 cv
187.379 224.913 188.268 226.694 189.357 228.685 cv
196.771 242.232 li
198.241 244.921 198.633 245.479 200.05 244.839 cv
201.501 244.181 li
201.814 244.281 202.087 244.858 201.912 245.09 cv
200.58 245.729 199.068 246.51 197.907 247.146 cv
196.713 247.799 195.239 248.65 193.983 249.429 cv
193.694 249.451 193.355 248.91 193.439 248.592 cv
194.742 247.743 li
196.078 246.876 195.787 246.264 194.315 243.575 cv
187.819 231.704 li
cp
f
67.0098 222.455 mo
67.0098 224.665 65.2178 226.454 63.0078 226.454 cv
60.7998 226.454 59.0078 224.665 59.0078 222.455 cv
59.0078 220.247 60.7998 218.454 63.0078 218.454 cv
65.2178 218.454 67.0098 220.247 67.0098 222.455 cv
cp
f
208.02 222.455 mo
208.02 224.665 209.811 226.454 212.019 226.454 cv
214.229 226.454 216.019 224.665 216.019 222.455 cv
216.019 220.247 214.229 218.454 212.019 218.454 cv
209.811 218.454 208.02 220.247 208.02 222.455 cv
cp
f
74.4326 78.3218 mo
78.1367 80.0781 li
80.9521 77.0996 li
80.4258 81.1641 li
84.1299 82.9219 li
80.0986 83.6758 li
79.5762 87.7402 li
77.6104 84.1445 li
73.5811 84.8945 li
76.3984 81.918 li
74.4326 78.3218 li
cp
f
90.0352 65.1924 mo
93.2246 67.7637 li
96.6582 65.5244 li
95.2002 69.3516 li
98.3926 71.9258 li
94.2969 71.7207 li
92.8389 75.5508 li
91.7676 71.5938 li
87.6748 71.3906 li
91.1064 69.1465 li
90.0352 65.1924 li
cp
f
108.263 56.0596 mo
110.767 59.3037 li
114.627 57.9248 li
112.319 61.3096 li
114.821 64.5537 li
110.889 63.4014 li
108.579 66.7847 li
108.457 62.6904 li
104.524 61.5361 li
108.385 60.1553 li
108.263 56.0596 li
cp
f
128.117 51.4209 mo
129.798 55.1572 li
133.874 54.7158 li
130.842 57.4717 li
132.52 61.21 li
128.96 59.1729 li
125.928 61.9268 li
126.766 57.9146 li
123.205 55.8779 li
127.285 55.4307 li
128.117 51.4209 li
cp
f
148.507 51.5337 mo
149.272 55.5576 li
153.339 56.0771 li
149.752 58.0518 li
150.506 62.0791 li
147.523 59.2666 li
143.932 61.2373 li
145.679 57.5322 li
142.692 54.7236 li
146.762 55.2373 li
148.507 51.5337 li
cp
f
168.309 56.3896 mo
168.116 60.4814 li
171.949 61.9341 li
168.002 63.02 li
167.798 67.1113 li
165.552 63.6807 li
161.598 64.7646 li
164.162 61.5674 li
161.915 58.1396 li
165.749 59.5869 li
168.309 56.3896 li
cp
f
186.437 65.7222 mo
185.296 69.6602 li
188.686 71.9648 li
184.593 72.0996 li
183.445 76.0313 li
182.059 72.1719 li
177.964 72.3047 li
181.202 69.791 li
179.811 65.9355 li
183.201 68.2363 li
186.437 65.7222 li
cp
f
201.89 79.0215 mo
199.868 82.584 li
202.627 85.6172 li
198.612 84.7949 li
196.582 88.3496 li
196.131 84.2715 li
192.118 83.4492 li
195.85 81.7598 li
195.397 77.6855 li
198.157 80.7148 li
201.89 79.0215 li
cp
f
99.376 77.9575 mo
102.546 80.5586 li
106.001 78.3525 li
104.501 82.166 li
107.667 84.7715 li
103.579 84.5264 li
102.078 88.3457 li
101.051 84.376 li
96.958 84.1299 li
100.412 81.9258 li
99.376 77.9575 li
cp
f
117.729 69.5693 mo
120.041 72.9561 li
123.975 71.8076 li
121.466 75.0479 li
123.772 78.4346 li
119.919 77.0518 li
117.406 80.2979 li
117.53 76.1992 li
113.676 74.8154 li
117.608 73.6689 li
117.729 69.5693 li
cp
f
137.695 66.6709 mo
138.965 70.5674 li
143.064 70.5713 li
139.743 72.9775 li
141.01 76.875 li
137.695 74.4648 li
134.373 76.876 li
135.645 72.9775 li
132.336 70.5674 li
136.43 70.5693 li
137.695 66.6709 li
cp
f
154.425 79.2412 mo
154.55 83.3369 li
158.482 84.4922 li
154.621 85.8701 li
154.74 89.9658 li
152.238 86.7256 li
148.372 88.1055 li
150.689 84.7197 li
148.185 81.4775 li
152.116 82.6299 li
154.425 79.2412 li
cp
f
176.061 77.8052 mo
175.028 81.7744 li
178.481 83.9854 li
174.389 84.2256 li
173.352 88.1895 li
171.858 84.375 li
167.763 84.6172 li
170.934 82.0176 li
169.445 78.2021 li
172.892 80.4111 li
176.061 77.8052 li
cp
f
43.5435 231.378 mo
18.5522 206.194 4.86426 172.787 5.00098 137.312 cv
5.1377 101.835 19.0825 68.5356 44.2666 43.5449 cv
69.4526 18.5527 102.863 4.86426 138.345 5.00098 cv
173.829 5.13721 207.136 19.083 232.129 44.27 cv
257.118 69.4531 270.805 102.858 270.667 138.333 cv
270.53 173.809 256.586 207.108 231.403 232.099 cv
206.217 257.092 172.805 270.78 137.322 270.644 cv
137.322 270.644 li
101.841 270.508 68.5366 256.563 43.5435 231.378 cv
cp
40.7446 39.9961 mo
14.6123 65.9268 0.143066 100.481 0.000976563 137.292 cv
-0.141113 174.104 14.0625 208.768 39.9941 234.899 cv
65.9282 261.033 100.486 275.503 137.303 275.644 cv
137.303 275.644 li
174.121 275.786 208.79 261.582 234.925 235.648 cv
261.057 209.717 275.525 175.164 275.667 138.353 cv
275.81 101.542 261.608 66.8794 235.678 40.748 cv
209.744 14.6133 175.184 0.14209 138.364 0.000976563 cv
101.547 -0.141113 66.8784 14.0625 40.7446 39.9961 cv
cp
f
128.303 87.0674 mo
128.506 87.6758 129.121 88.4912 130.908 88.9209 cv
133.004 89.4316 134.102 90.0186 134.211 90.2715 cv
134.008 90.5078 132.15 91.0342 130.961 91.0811 cv
131.002 92.0811 li
131.043 92.0791 135.205 91.7334 135.205 90.2324 cv
135.205 89.375 133.84 88.6064 131.145 87.9492 cv
129.73 87.6084 129.352 87.0527 129.252 86.751 cv
128.303 87.0674 li
cp
f
136.246 86.0176 mo
136.105 85.0273 li
132.764 85.8105 li
131.672 86.0938 li
131.916 87.0645 li
133.018 86.7773 li
133.182 86.7393 li
133.172 86.7871 133.152 86.8311 133.152 86.8818 cv
133.152 87.2979 133.49 87.6357 133.908 87.6357 cv
134.326 87.6357 134.664 87.2979 134.664 86.8818 cv
134.664 86.709 134.596 86.5566 134.498 86.4287 cv
136.246 86.0176 li
cp
f
62.1831 88.3398 mo
65.6436 83.0444 69.6689 78.0649 74.2656 73.5039 cv
91.377 56.5234 114.077 47.2231 138.184 47.3164 cv
162.29 47.4092 184.918 56.8843 201.898 73.9961 cv
206.293 78.4248 210.162 83.2344 213.498 88.3394 cv
216.467 88.3613 li
216.67 88.3623 216.878 88.3623 217.084 88.3623 cv
213.407 82.4653 209.043 76.9375 204.027 71.8828 cv
186.482 54.2026 163.104 44.4126 138.195 44.3164 cv
113.287 44.2202 89.8325 53.8296 72.1523 71.374 cv
66.9238 76.5625 62.3916 82.2646 58.5898 88.3628 cv
58.8184 88.3623 59.0479 88.3628 59.2734 88.3613 cv
62.1831 88.3398 li
cp
f
141.606 230.712 mo
140.707 231.561 139.801 232.396 138.885 233.208 cv
138.757 233.299 138.167 233.484 137.454 233.446 cv
137.373 233.442 li
137.292 233.446 li
136.581 233.484 135.991 233.3 135.848 233.196 cv
134.92 232.375 134.004 231.528 133.094 230.669 cv
131.98 229.618 130.882 228.536 129.795 227.431 cv
107.615 204.879 91.0967 171.332 86.0288 137.826 cv
85.9766 137.48 85.9595 137.218 85.9595 137.023 cv
85.9595 136.657 86.0181 136.534 86.0239 136.521 cv
86.0347 136.549 86.4346 136.442 87.7197 136.757 cv
90.6958 137.484 93.9424 137.823 97.9365 137.823 cv
112.405 137.823 126.018 131.712 136.266 120.614 cv
136.642 120.21 137.01 120.005 137.358 120.009 cv
137.738 120.005 138.106 120.209 138.482 120.615 cv
148.733 131.712 162.347 137.823 176.813 137.823 cv
180.807 137.823 184.053 137.484 187.028 136.757 cv
188.392 136.423 188.748 136.563 188.777 136.576 cv
188.775 136.579 188.773 136.58 188.773 136.588 cv
188.773 136.63 188.793 136.749 188.793 136.974 cv
188.793 137.17 188.777 137.448 188.721 137.827 cv
183.646 171.371 167.096 204.955 144.864 227.518 cv
143.791 228.606 142.706 229.675 141.606 230.712 cv
cp
224.385 102.733 mo
223.529 103.066 222.558 103.327 221.468 103.526 cv
225.851 114.296 228.128 125.924 228.082 137.901 cv
227.906 183.597 193.615 221.33 149.477 227.041 cv
170.884 204.101 186.712 171.159 191.688 138.274 cv
191.789 137.598 192.099 135.542 190.778 134.336 cv
189.565 133.228 187.756 133.49 186.315 133.843 cv
183.579 134.512 180.56 134.823 176.813 134.823 cv
163.193 134.823 150.362 129.054 140.685 118.579 cv
139.47 117.266 138.205 117 137.358 117.009 cv
136.543 117 135.281 117.265 134.064 118.576 cv
124.388 129.054 111.559 134.823 97.9365 134.823 cv
94.1885 134.823 91.1689 134.512 88.4326 133.843 cv
86.9917 133.49 85.1821 133.228 83.9692 134.337 cv
82.6489 135.544 82.9604 137.599 83.063 138.274 cv
88.0259 171.09 103.797 203.962 125.133 226.895 cv
81.2222 220.682 47.416 182.771 47.5898 137.208 cv
47.6348 125.464 49.9233 114.077 54.2217 103.517 cv
53.1274 103.314 52.1548 103.048 51.2983 102.71 cv
46.9438 113.529 44.6357 125.184 44.5898 137.196 cv
44.4053 185.557 81.2656 225.572 128.434 230.317 cv
130.214 232.098 132.025 233.817 133.873 235.454 cv
134.776 236.256 136.302 236.487 137.373 236.444 cv
138.487 236.49 139.967 236.256 140.873 235.455 cv
142.688 233.847 144.468 232.159 146.219 230.413 cv
193.568 226.175 230.896 186.378 231.082 137.913 cv
231.129 125.663 228.823 113.767 224.385 102.733 cv
cp
f
228.408 90.3457 mo
223.998 91.0352 219.672 91.4668 216.539 91.5293 cv
211.967 91.6611 li
211.963 91.6602 li
211.896 91.6631 li
211.9 91.6621 li
199.396 92.1563 li
191.523 92.4668 li
191.523 92.4648 li
190.816 92.4951 li
190.125 92.5225 li
190.125 92.5244 li
186.48 92.6807 li
186.479 92.6807 li
172.502 93.291 li
172.504 93.292 li
172.154 93.3076 li
169.213 93.4346 162.518 93.7334 160.598 97.4678 cv
160.543 97.459 li
160.35 98.0039 li
160.064 98.8008 li
160.141 98.8125 li
160.131 98.877 160.133 98.9463 160.125 99.0117 cv
160.105 99.1699 160.092 99.3301 160.086 99.4941 cv
160.084 99.5479 160.072 99.5986 160.072 99.6533 cv
160.072 99.7109 160.082 99.7715 160.084 99.8301 cv
160.086 99.9346 160.096 100.042 160.104 100.149 cv
160.113 100.25 160.119 100.351 160.133 100.454 cv
160.16 100.673 160.199 100.896 160.252 101.122 cv
160.26 101.161 li
160.291 101.33 160.418 102 160.418 102.001 cv
160.471 102.352 160.492 102.675 160.498 102.988 cv
160.5 103.081 160.496 103.171 160.494 103.261 cv
160.488 103.469 160.471 103.671 160.443 103.865 cv
160.43 103.947 160.422 104.03 160.406 104.109 cv
160.354 104.372 160.287 104.626 160.189 104.87 cv
159.875 105.67 159.295 106.436 158.418 107.211 cv
157.762 107.786 156.947 108.371 155.834 109.056 cv
154.324 109.9 li
154.168 109.987 li
153.779 108.633 153.201 107.423 152.515 106.362 cv
153.224 106.07 154.035 105.701 155.041 105.21 cv
156.574 104.462 157.104 103.082 157.104 101.405 cv
157.104 100.023 156.744 98.4385 156.291 96.8379 cv
156.178 96.4434 156.123 96.0713 156.123 95.7197 cv
156.123 95.1064 156.293 94.5537 156.637 94.0508 cv
158.521 91.291 164.992 90.6621 167.756 90.3936 cv
167.756 90.3936 168.857 90.2764 168.859 90.2764 cv
175.164 89.4277 198.658 89.6201 211.281 89.7227 cv
216.459 89.7617 li
222.545 89.7959 231.068 89.3701 237.484 88.5068 cv
234.932 89.1709 231.861 89.8047 228.408 90.3457 cv
cp
216.963 94.8818 mo
216.607 95.166 216.211 95.4297 215.768 95.6729 cv
214.443 96.4033 212.715 96.9482 210.508 97.3057 cv
210.445 97.3154 li
209.813 97.4082 li
208.063 97.6533 205.973 97.8066 203.512 97.876 cv
203.971 97.5654 204.398 97.2363 204.766 96.8662 cv
205.273 96.3535 li
204.744 95.8613 li
203.623 94.8184 202.135 94.0488 200.197 93.5254 cv
200.559 93.5107 li
205.791 93.3047 210.971 93.1006 211.758 93.0684 cv
211.867 93.0645 li
212.971 93.2373 213.938 93.4756 214.781 93.7783 cv
214.844 93.8008 214.895 93.8301 214.955 93.8525 cv
215.307 93.9863 215.648 94.125 215.957 94.2813 cv
216.32 94.4648 216.654 94.665 216.963 94.8818 cv
cp
220.426 98.1709 mo
222.746 98.665 224.461 99.4043 225.689 100.393 cv
223.238 102.122 219.047 102.814 212.307 102.51 cv
213.08 102.195 213.762 101.811 214.359 101.346 cv
214.928 100.902 li
214.467 100.347 li
213.941 99.7158 213.283 99.1553 212.504 98.6494 cv
215.568 98.5576 218.176 98.4004 220.426 98.1709 cv
cp
213.756 106.233 mo
210.963 107.716 206.293 107.81 198.969 106.513 cv
199.145 106.416 199.318 106.318 199.48 106.212 cv
200.084 105.814 li
199.666 105.223 li
199.1 104.419 198.352 103.693 197.418 103.035 cv
198.42 103.153 199.357 103.25 200.244 103.329 cv
200.275 103.332 200.307 103.335 200.34 103.338 cv
201.475 103.438 202.525 103.507 203.494 103.544 cv
203.703 103.553 203.912 103.561 204.113 103.566 cv
204.334 103.571 204.549 103.575 204.76 103.577 cv
204.947 103.579 205.131 103.579 205.313 103.579 cv
205.896 103.577 206.461 103.566 206.992 103.538 cv
207.18 103.554 207.93 103.615 208.645 103.674 cv
208.766 103.684 208.887 103.694 209 103.703 cv
209.084 103.71 209.164 103.717 209.242 103.724 cv
209.383 103.734 209.502 103.744 209.607 103.753 cv
209.738 103.764 209.85 103.773 209.93 103.779 cv
211.639 104.467 212.844 105.296 213.756 106.233 cv
cp
197.123 105.791 mo
196.842 105.896 196.547 105.989 196.23 106.066 cv
196.23 106.067 li
196.229 106.067 li
195.469 106.219 li
195.156 106.272 194.828 106.313 194.492 106.349 cv
194.432 106.354 194.371 106.361 194.311 106.366 cv
193.961 106.398 193.602 106.422 193.225 106.433 cv
193.219 106.433 193.211 106.433 193.205 106.433 cv
190.77 106.502 187.725 106.144 183.842 105.34 cv
184.441 105.236 185.025 105.085 185.594 104.896 cv
185.713 104.857 185.828 104.813 185.943 104.771 cv
186.137 104.698 186.328 104.629 186.514 104.545 cv
186.844 104.399 187.164 104.238 187.467 104.05 cv
188.082 103.668 li
187.68 103.066 li
187.02 102.079 186.086 101.181 184.895 100.374 cv
185.752 100.509 186.412 100.612 186.412 100.612 cv
189.246 101.157 191.506 101.767 193.322 102.476 cv
193.33 102.479 li
195.447 103.306 196.961 104.28 197.99 105.418 cv
197.717 105.553 197.428 105.678 197.123 105.791 cv
cp
198.291 110.425 mo
196.602 110.974 194.451 111.022 191.691 110.499 cv
190.527 109.396 188.977 108.354 186.959 107.34 cv
190.461 107.888 193.188 107.978 195.396 107.644 cv
196.713 108.522 197.627 109.448 198.291 110.425 cv
cp
187.346 113.343 mo
186.891 113.286 186.414 113.21 185.918 113.113 cv
185.914 113.113 185.91 113.112 185.908 113.111 cv
184.434 112.825 182.777 112.365 180.926 111.75 cv
181.807 111.677 182.621 111.51 183.355 111.236 cv
184.033 110.983 li
183.76 110.314 li
183.617 109.967 183.434 109.621 183.23 109.277 cv
183.223 109.263 183.213 109.249 183.205 109.234 cv
182.596 108.211 181.734 107.208 180.627 106.248 cv
184.961 107.783 188.059 109.298 190.066 110.928 cv
190.361 111.168 190.639 111.411 190.889 111.657 cv
191.355 112.116 191.717 112.586 192.029 113.059 cv
190.75 113.454 189.232 113.574 187.346 113.343 cv
cp
178.904 114.64 mo
178.904 114.64 178.232 114.297 177.998 114.177 cv
177.875 113.96 177.723 113.742 177.584 113.525 cv
177.568 113.502 177.553 113.478 177.537 113.454 cv
177.1 112.779 176.586 112.104 175.988 111.432 cv
180.518 113.25 184.012 114.295 186.879 114.687 cv
187.58 115.481 188.061 116.265 188.408 117.05 cv
186.023 117.384 182.994 116.646 178.904 114.64 cv
cp
182.527 122.272 mo
180.584 122.226 178.291 121.38 175.535 119.673 cv
174.434 118.989 173.268 118.177 172.074 117.272 cv
171.967 117.071 171.834 116.864 171.715 116.661 cv
172.854 117.155 174.094 117.569 175.354 117.798 cv
175.563 117.837 175.771 117.876 175.98 117.903 cv
176.117 117.921 176.252 117.929 176.387 117.94 cv
176.637 117.964 176.887 117.978 177.135 117.981 cv
177.25 117.983 177.365 117.985 177.479 117.983 cv
177.84 117.974 178.199 117.952 178.555 117.896 cv
179.27 117.784 li
179.133 117.073 li
179.115 116.976 179.086 116.878 179.064 116.78 cv
180.945 118.774 182.092 120.589 182.527 122.272 cv
cp
170.977 123.165 mo
171.648 123.353 172.305 123.468 172.939 123.495 cv
173.66 123.526 li
173.67 122.804 li
173.67 122.8 173.668 122.796 173.668 122.794 cv
173.67 122.753 173.67 122.722 173.67 122.716 cv
173.67 122.433 173.643 122.142 173.605 121.847 cv
173.535 121.183 173.375 120.489 173.146 119.776 cv
173.656 120.128 174.158 120.458 174.648 120.765 cv
176.076 122.919 176.828 124.778 176.994 126.438 cv
175.209 126.112 173.227 125.038 170.977 123.165 cv
cp
170.98 130.185 mo
169.922 129.812 168.842 129.157 167.715 128.181 cv
167.734 128.091 li
167.811 127.733 167.854 127.368 167.883 126.999 cv
167.891 126.894 167.893 126.788 167.896 126.681 cv
167.902 126.55 167.916 126.419 167.916 126.286 cv
167.916 126.181 167.9 126.075 167.896 125.97 cv
167.889 125.735 167.875 125.503 167.854 125.269 cv
167.838 125.104 167.82 124.942 167.797 124.778 cv
167.754 124.456 167.699 124.136 167.633 123.815 cv
167.623 123.771 167.613 123.726 167.604 123.681 cv
167.426 122.862 167.189 122.063 166.91 121.3 cv
166.959 121.347 167.025 121.411 167.098 121.479 cv
169.301 123.597 li
170.449 125.985 171.023 128.003 171.023 129.716 cv
171.023 129.88 170.99 130.026 170.98 130.185 cv
cp
166.443 127.015 mo
166.42 127.007 166.396 126.999 166.379 126.993 cv
166.369 126.991 166.357 126.987 166.357 126.987 cv
166.355 126.987 li
165.711 126.687 li
164.369 126.017 162.998 124.907 161.635 123.39 cv
161.635 123.39 161.607 123.356 161.566 123.306 cv
160.16 121.563 li
160.199 121.165 160.232 120.763 160.232 120.335 cv
160.232 120.312 160.23 120.288 160.229 120.265 cv
161.076 120.831 161.912 121.241 162.732 121.519 cv
163.02 121.624 163.303 121.712 163.584 121.772 cv
164.291 121.927 li
164.422 121.218 li
164.469 120.962 164.502 120.696 164.523 120.425 cv
164.531 120.335 164.531 120.239 164.535 120.147 cv
164.543 120.001 164.555 119.858 164.555 119.708 cv
164.555 119.687 164.549 119.663 164.547 119.642 cv
164.547 119.569 164.551 119.499 164.547 119.427 cv
164.564 119.44 164.576 119.452 164.592 119.466 cv
164.6 119.474 164.611 119.483 164.619 119.491 cv
165.713 121.724 166.346 123.771 166.486 125.534 cv
166.506 125.786 166.518 126.034 166.518 126.274 cv
166.518 126.536 166.467 126.767 166.443 127.015 cv
cp
164.984 132.882 mo
164.004 132.349 163.045 131.577 162.088 130.44 cv
162.199 129.878 162.266 129.28 162.293 128.651 cv
162.307 128.452 162.33 128.261 162.33 128.05 cv
162.33 127.948 162.32 127.841 162.318 127.737 cv
162.316 127.606 162.311 127.472 162.303 127.339 cv
162.279 126.87 162.242 126.392 162.18 125.896 cv
163.041 126.665 163.908 127.29 164.771 127.759 cv
165.045 128.97 165.195 130.071 165.195 131.052 cv
165.195 131.716 165.109 132.313 164.984 132.882 cv
cp
160.895 128.761 mo
160.887 128.907 160.885 129.062 160.871 129.204 cv
160.826 129.661 160.76 130.099 160.66 130.509 cv
160.658 130.519 li
160.65 130.542 160.59 130.729 160.543 130.88 cv
158.103 129.342 156.034 126.055 154.604 122.367 cv
155.045 122.577 li
155.216 121.905 li
155.64 122.372 156.088 122.813 156.566 123.208 cv
156.814 123.415 157.07 123.606 157.332 123.786 cv
157.426 123.851 157.523 123.909 157.619 123.97 cv
157.949 124.177 158.285 124.37 158.641 124.528 cv
159.301 124.821 li
159.572 124.151 li
159.672 123.909 159.746 123.64 159.824 123.374 cv
159.951 123.53 160.059 123.665 160.154 123.782 cv
160.365 124.044 li
160.402 124.089 160.434 124.128 160.457 124.155 cv
160.463 124.183 160.467 124.208 160.473 124.235 cv
160.57 124.692 160.65 125.134 160.717 125.565 cv
160.742 125.72 160.766 125.874 160.787 126.026 cv
160.848 126.507 160.891 126.974 160.91 127.423 cv
160.916 127.513 160.918 127.601 160.92 127.688 cv
160.93 128.06 160.914 128.413 160.895 128.761 cv
cp
158.771 119.153 mo
158.805 119.556 158.834 119.956 158.834 120.335 cv
158.834 120.813 158.807 121.272 158.752 121.706 cv
158.693 121.974 li
158.695 121.976 li
158.633 122.261 158.555 122.522 158.482 122.794 cv
157.984 122.493 157.488 122.118 157.002 121.673 cv
156.491 121.206 155.989 120.657 155.501 120.038 cv
155.507 118.415 155.03 116.157 154.191 113.978 cv
154.199 113.954 154.206 113.932 154.214 113.908 cv
155.636 116.007 157.201 117.818 158.771 119.153 cv
cp
162.482 116.015 mo
162.611 116.491 162.961 117.8 162.961 117.8 cv
163.09 118.478 163.154 119.114 163.154 119.708 cv
163.154 119.853 163.127 119.976 163.119 120.114 cv
162.082 119.755 161.01 119.192 159.896 118.28 cv
159.652 118.079 159.406 117.862 159.16 117.636 cv
157.539 116.137 155.939 114.093 154.524 111.771 cv
154.517 111.655 154.506 111.535 154.49 111.41 cv
155.043 111.102 155.597 110.792 156.047 110.539 cv
158.09 112.807 160.348 114.729 162.482 116.015 cv
cp
166.141 112.564 mo
166.311 112.887 li
166.512 113.27 166.75 113.723 166.75 113.723 cv
167.195 114.686 167.428 115.579 167.553 116.431 cv
166.289 116.261 164.932 115.827 163.438 114.958 cv
163.178 114.808 162.914 114.645 162.65 114.473 cv
162.428 114.328 162.205 114.174 161.98 114.015 cv
161.951 113.993 161.922 113.975 161.891 113.953 cv
160.342 112.842 158.762 111.412 157.283 109.797 cv
157.896 109.396 158.434 109.008 158.906 108.624 cv
160.709 109.937 163.285 111.557 166.141 112.564 cv
cp
169.027 108.447 mo
169.047 108.47 169.066 108.492 169.086 108.515 cv
169.293 108.755 li
170.229 109.877 170.811 110.96 171.18 112.01 cv
170.865 112.029 170.539 112.032 170.201 112.016 cv
169.189 111.966 168.078 111.748 166.865 111.341 cv
166.857 111.339 li
166.318 111.157 165.764 110.938 165.195 110.688 cv
165.193 110.687 165.191 110.686 165.189 110.685 cv
163.496 109.933 161.709 108.887 159.977 107.648 cv
160.477 107.129 160.875 106.599 161.174 106.051 cv
163.221 106.981 166.053 108.038 169.027 108.447 cv
cp
171.82 98.8223 mo
173.371 99.54 174.514 100.388 175.375 101.313 cv
174.246 101.881 172.898 102.293 171.197 102.428 cv
170.85 102.455 170.494 102.473 170.129 102.48 cv
167.586 102.536 164.652 102.12 161.713 101.313 cv
161.66 101.035 li
161.65 100.985 161.643 100.944 161.637 100.908 cv
161.615 100.802 li
161.564 100.588 161.529 100.381 161.506 100.181 cv
161.498 100.124 161.5 100.07 161.494 100.014 cv
161.482 99.8789 161.475 99.7451 161.475 99.6162 cv
161.48 99.4063 161.533 99.2158 161.574 99.0205 cv
165.135 99.5 168.813 99.4316 171.82 98.8223 cv
cp
172.404 97.2588 mo
171.791 97.4043 li
171.441 97.4795 171.08 97.5449 170.711 97.6045 cv
168.143 98.0068 165.137 97.9883 162.189 97.6299 cv
164.152 95.082 169.898 94.8066 172.215 94.7061 cv
175.096 94.5801 li
175.596 94.8359 176.027 95.1152 176.418 95.4102 cv
175.393 96.1836 174.102 96.8311 172.404 97.2588 cv
cp
179.861 104.149 mo
179.309 104.123 178.74 104.083 178.146 104.014 cv
178.145 104.014 li
178.049 104.001 li
177.805 103.969 177.16 103.884 177.16 103.883 cv
176.217 103.738 175.248 103.539 174.279 103.301 cv
174.527 103.23 174.756 103.145 174.986 103.062 cv
175.021 103.05 175.055 103.035 175.088 103.023 cv
175.42 102.9 175.742 102.771 176.041 102.621 cv
176.367 102.464 176.682 102.297 176.965 102.105 cv
177.564 101.701 li
177.143 101.115 li
176.625 100.396 175.945 99.7305 175.121 99.1162 cv
176.643 99.3184 178.215 99.4355 179.746 99.4395 cv
180.301 99.6377 li
180.305 99.6387 li
182.881 100.595 184.797 101.833 185.99 103.227 cv
184.434 103.95 182.354 104.266 179.861 104.149 cv
cp
175.492 109.729 mo
173.555 109.121 li
173.127 108.969 172.697 108.756 172.268 108.577 cv
172.986 108.525 173.652 108.409 174.273 108.236 cv
174.594 108.154 174.908 108.062 175.197 107.942 cv
175.867 107.667 li
175.568 107.007 li
175.414 106.66 175.219 106.319 175.002 105.98 cv
174.953 105.902 174.902 105.825 174.85 105.748 cv
174.674 105.491 174.477 105.238 174.268 104.986 cv
174.186 104.886 174.111 104.783 174.023 104.684 cv
174.078 104.697 174.133 104.707 174.189 104.72 cv
175.063 104.93 175.936 105.104 176.791 105.239 cv
179.023 106.563 180.658 108.012 181.668 109.491 cv
181.813 109.704 181.943 109.917 182.063 110.131 cv
181.188 110.34 180.191 110.414 179.092 110.35 cv
177.99 110.285 176.787 110.08 175.494 109.729 cv
175.492 109.729 li
cp
161.896 102.963 mo
161.895 102.918 161.9 102.876 161.898 102.83 cv
165.111 103.657 168.303 104.014 171.016 103.839 cv
172.307 104.818 173.201 105.841 173.828 106.883 cv
172.609 107.214 171.172 107.311 169.477 107.102 cv
167.135 106.813 164.393 105.966 161.693 104.734 cv
161.805 104.315 161.865 103.874 161.887 103.412 cv
161.896 103.309 161.906 103.205 161.906 103.097 cv
161.906 103.055 161.9 103.008 161.896 102.963 cv
cp
170.059 114.279 mo
170.059 114.279 169.439 113.891 168.869 113.533 cv
168.289 113.17 li
168.941 113.308 169.564 113.382 170.164 113.413 cv
170.303 113.422 170.441 113.428 170.578 113.431 cv
170.783 113.434 170.988 113.437 171.188 113.426 cv
171.568 113.409 171.939 113.376 172.291 113.309 cv
173.002 113.173 li
172.844 112.468 li
172.781 112.188 172.689 111.907 172.586 111.625 cv
172.395 111.07 172.137 110.51 171.814 109.944 cv
172.188 110.096 172.561 110.246 172.934 110.381 cv
174.721 111.936 176.059 113.505 176.893 115.046 cv
177.186 115.583 177.383 116.085 177.539 116.573 cv
175.457 116.653 172.896 115.88 170.059 114.279 cv
cp
169.078 117.267 mo
169.064 116.577 168.947 115.853 168.742 115.104 cv
168.816 115.149 168.887 115.194 168.951 115.235 cv
169.07 115.31 169.174 115.376 169.211 115.399 cv
169.895 116.321 170.479 117.226 170.928 118.083 cv
171.67 119.493 172.031 120.782 172.156 121.979 cv
171.801 121.919 171.436 121.833 171.064 121.72 cv
169.947 121.378 168.758 120.792 167.502 119.94 cv
167.502 119.942 li
165.65 118.536 li
164.27 117.286 li
164.172 116.917 li
165.281 117.429 166.34 117.741 167.35 117.884 cv
167.697 117.942 168.037 117.976 168.369 117.981 cv
169.092 117.989 li
169.078 117.267 li
cp
209.789 98.8232 mo
211.063 99.3506 212.008 99.9834 212.768 100.692 cv
211.371 101.511 209.486 102 206.971 102.138 cv
203.826 102.312 199.742 102.002 193.74 101.139 cv
193.24 100.946 192.703 100.761 192.141 100.582 cv
195.641 100.431 198.369 100.02 200.488 99.3223 cv
204.287 99.3174 207.332 99.1533 209.789 98.8232 cv
cp
190.984 95.3037 mo
190.574 94.8828 190.084 94.498 189.543 94.1396 cv
190.863 94.085 li
196.9 93.9785 200.768 94.75 203.074 96.4092 cv
202.293 97.0166 201.375 97.5498 200.158 97.96 cv
198.313 98.583 195.953 98.9727 192.939 99.1475 cv
192.91 99.1484 192.887 99.1514 192.857 99.1533 cv
192.404 99.1787 191.922 99.1943 191.439 99.21 cv
191.268 99.2148 191.111 99.2246 190.936 99.2295 cv
190.551 99.2393 190.135 99.2393 189.729 99.2432 cv
189.434 99.2461 189.152 99.2539 188.846 99.2529 cv
188.504 99.2529 188.135 99.2441 187.781 99.2402 cv
187.389 99.2354 187.008 99.2344 186.598 99.2246 cv
186.561 99.2188 li
186.475 99.2051 186.24 99.1689 185.951 99.123 cv
184.986 98.9717 li
184.986 98.9717 184.988 98.9717 184.988 98.9707 cv
185.445 98.8818 185.895 98.7754 186.342 98.6523 cv
186.473 98.6162 186.604 98.582 186.734 98.543 cv
186.947 98.4785 187.158 98.4121 187.367 98.3389 cv
187.697 98.2256 188.02 98.0977 188.334 97.9609 cv
188.459 97.9053 188.582 97.8467 188.705 97.7881 cv
189.064 97.6152 189.412 97.4297 189.744 97.2207 cv
189.803 97.1836 189.859 97.1416 189.918 97.1025 cv
190.283 96.8613 190.635 96.6016 190.955 96.3086 cv
191.49 95.8213 li
190.984 95.3037 li
cp
178.07 94.957 mo
177.902 94.791 177.721 94.6309 177.527 94.4736 cv
184.676 94.1611 li
185.582 94.1211 186.207 94.0938 186.273 94.0908 cv
186.6 94.2051 li
187.703 94.627 188.57 95.1611 189.307 95.749 cv
187.264 97.2012 184.008 98.0342 179.877 98.042 cv
178.371 98.0449 176.842 97.9063 175.346 97.707 cv
176.42 97.2227 177.344 96.6475 178.063 95.9619 cv
178.586 95.4639 li
178.07 94.957 li
cp
152.284 112.552 mo
152.276 112.592 152.276 112.635 152.268 112.675 cv
152.236 112.652 152.208 112.628 152.177 112.604 cv
151.972 112.454 151.771 112.302 151.578 112.145 cv
151.533 112.109 151.486 112.076 151.443 112.041 cv
151.284 111.909 151.142 111.767 150.993 111.628 cv
150.885 111.526 150.767 111.432 150.664 111.326 cv
149.778 110.417 li
149.186 109.808 li
148.795 111.892 li
148.727 112.257 148.631 112.621 148.522 112.984 cv
148.433 113.282 148.335 113.58 148.225 113.879 cv
147.695 113.406 147.205 112.919 146.787 112.396 cv
145.49 110.775 li
145.637 110.9 145.77 111.031 145.926 111.152 cv
146.59 111.666 li
146.977 110.921 li
147.536 109.84 147.936 108.677 148.214 107.551 cv
148.332 107.071 148.429 106.604 148.498 106.15 cv
148.558 105.759 148.612 105.371 148.637 105.014 cv
148.917 105.3 149.195 105.604 149.469 105.918 cv
149.792 106.29 150.104 106.685 150.401 107.106 cv
151.166 108.193 151.815 109.461 152.188 111.024 cv
152.188 111.029 152.188 111.032 152.19 111.037 cv
152.295 111.477 152.344 111.813 152.344 112.111 cv
152.344 112.268 152.313 112.409 152.284 112.552 cv
cp
144.873 112.774 mo
144.682 113.427 144.414 114.063 144.107 114.698 cv
143.627 114.177 143.188 113.644 142.822 113.081 cv
142.211 112.137 li
142.672 111.444 li
143.16 110.709 143.543 109.969 143.883 109.218 cv
144.363 109.755 144.891 110.265 145.465 110.754 cv
144.873 112.774 li
cp
141.951 109.792 mo
141.414 109.198 140.861 108.614 140.453 107.964 cv
139.768 106.871 li
139.225 108.042 li
138.854 108.845 138.369 109.599 137.822 110.34 cv
137.273 109.595 136.791 108.839 136.424 108.04 cv
135.883 106.863 li
135.195 107.96 li
134.789 108.605 134.234 109.191 133.695 109.786 cv
133.297 109.09 132.883 108.398 132.629 107.679 cv
132.195 106.457 li
131.412 107.488 li
130.885 108.179 130.262 108.802 129.578 109.402 cv
128.852 107.761 128.414 106.142 128.414 104.514 cv
128.414 104.062 128.441 103.608 128.498 103.152 cv
128.66 101.813 130.104 98.7627 130.721 97.4609 cv
131.027 96.8018 li
131.154 96.5195 li
131.416 95.9482 131.504 95.7207 132.004 93.8174 cv
132.094 93.4756 li
131.871 93.2002 li
130.959 92.0693 129.063 90.8398 125.203 91.4092 cv
124.842 91.4629 124.521 91.5518 124.23 91.6709 cv
124.26 91.6387 124.285 91.6045 124.318 91.5732 cv
125.082 90.8564 127.035 90.1045 132.01 90.5947 cv
132.107 89.5986 li
127.754 89.1699 124.982 89.5762 123.635 90.8447 cv
123.471 90.998 123.344 91.1582 123.232 91.3203 cv
123.205 91.1182 123.184 90.9189 123.184 90.7324 cv
123.184 90.1787 123.291 89.6846 123.506 89.2549 cv
124.35 87.5615 126.754 86.9492 128.51 86.502 cv
128.895 86.4043 li
129.047 86.1572 li
129.104 86.0654 130.486 83.9219 135.311 83.9219 cv
141.871 83.9219 142.627 86.7617 143.582 90.3574 cv
143.707 90.8193 li
144.949 95.6455 li
145.211 96.6885 li
145.211 96.6904 146.072 99.5615 146.072 99.5615 cv
147.176 103.256 li
147.24 103.507 147.273 103.851 147.273 104.263 cv
147.273 105.57 146.904 107.557 146.096 109.442 cv
145.402 108.835 144.77 108.202 144.24 107.5 cv
143.459 106.466 li
143.021 107.686 li
142.764 108.409 142.35 109.098 141.951 109.792 cv
cp
140.879 113.269 mo
140.625 113.898 140.299 114.507 139.93 115.108 cv
139.502 114.54 139.117 113.967 138.813 113.374 cv
138.193 112.166 li
138.357 111.969 li
138.986 111.218 139.488 110.44 139.939 109.643 cv
140.426 110.295 140.953 110.927 141.578 111.534 cv
140.879 113.269 li
cp
136.859 113.367 mo
136.543 113.974 136.156 114.548 135.732 115.108 cv
135.363 114.504 135.037 113.896 134.791 113.271 cv
134.092 111.503 li
134.707 110.902 135.227 110.28 135.705 109.641 cv
136.152 110.436 136.654 111.211 137.283 111.967 cv
137.473 112.195 li
136.859 113.367 li
cp
132.848 113.073 mo
132.473 113.646 132.033 114.178 131.557 114.695 cv
131.248 114.055 130.98 113.418 130.797 112.775 cv
130.215 110.741 li
128.885 112.387 li
128.451 112.922 127.961 113.409 127.439 113.876 cv
127.353 113.64 127.28 113.405 127.206 113.17 cv
127.07 112.743 126.95 112.316 126.871 111.889 cv
126.488 109.808 li
125.965 110.34 li
125.006 111.316 li
124.907 111.417 124.797 111.506 124.693 111.602 cv
124.536 111.748 124.383 111.899 124.217 112.037 cv
124.201 112.05 124.184 112.062 124.168 112.075 cv
123.957 112.249 123.735 112.415 123.512 112.579 cv
123.475 112.606 123.439 112.636 123.402 112.663 cv
123.392 112.615 123.395 112.564 123.385 112.518 cv
123.348 112.316 123.313 112.12 123.313 111.9 cv
123.313 111.642 123.338 111.357 123.391 111.019 cv
123.394 111 123.399 110.983 123.402 110.965 cv
123.643 109.494 124.346 108.181 125.178 107.06 cv
125.49 106.64 125.815 106.248 126.146 105.885 cv
126.449 105.554 126.752 105.239 127.041 104.96 cv
127.055 105.351 127.101 105.74 127.15 106.129 cv
127.228 106.737 127.336 107.345 127.503 107.953 cv
127.772 108.932 128.158 109.913 128.67 110.903 cv
129.055 111.649 li
129.721 111.136 li
130.496 110.535 131.152 109.886 131.764 109.207 cv
132.1 109.957 132.482 110.698 132.975 111.438 cv
133.439 112.139 li
133.496 112.083 li
132.848 113.073 li
cp
121.381 109.881 mo
119.904 109.056 li
118.791 108.371 117.977 107.786 117.322 107.211 cv
116.445 106.436 115.865 105.67 115.549 104.87 cv
115.453 104.626 115.387 104.372 115.334 104.109 cv
115.318 104.03 115.309 103.947 115.297 103.865 cv
115.268 103.671 115.25 103.469 115.244 103.261 cv
115.242 103.171 115.24 103.081 115.242 102.988 cv
115.246 102.675 115.268 102.352 115.32 102.001 cv
115.32 102 115.447 101.33 115.479 101.161 cv
115.486 101.122 li
115.539 100.896 115.578 100.673 115.607 100.454 cv
115.621 100.351 115.627 100.25 115.635 100.149 cv
115.645 100.042 115.652 99.9346 115.656 99.8301 cv
115.658 99.7715 115.666 99.7109 115.666 99.6533 cv
115.666 99.5986 115.654 99.5479 115.654 99.4941 cv
115.648 99.3301 115.635 99.1699 115.613 99.0117 cv
115.605 98.9463 115.609 98.877 115.598 98.8125 cv
115.676 98.8008 li
115.391 98.0039 li
115.195 97.459 li
115.141 97.4678 li
113.223 93.7334 106.525 93.4346 103.586 93.3076 cv
103.236 93.292 li
103.238 93.291 li
89.2598 92.6807 li
85.6152 92.5244 li
85.6152 92.5225 li
84.9238 92.4951 li
84.2148 92.4648 li
84.2148 92.4668 li
76.3428 92.1563 li
63.8398 91.6621 li
63.8428 91.6631 li
63.7764 91.6602 li
63.7725 91.6611 li
59.2012 91.5293 li
56.0684 91.4668 51.7412 91.0352 47.332 90.3457 cv
43.8779 89.8047 40.8076 89.1709 38.2559 88.5068 cv
44.6719 89.3701 53.1943 89.7959 59.2813 89.7617 cv
64.459 89.7227 li
77.0811 89.6201 100.574 89.4277 106.881 90.2764 cv
107.982 90.3936 li
110.746 90.6621 117.219 91.291 119.102 94.0508 cv
119.445 94.5537 119.617 95.1064 119.617 95.7197 cv
119.617 96.0713 119.561 96.4434 119.449 96.8379 cv
118.994 98.4385 118.635 100.023 118.635 101.405 cv
118.635 103.082 119.164 104.462 120.697 105.21 cv
121.625 105.663 122.386 106.011 123.056 106.292 cv
122.329 107.369 121.711 108.576 121.381 109.881 cv
cp
120.133 120.166 mo
119.678 120.731 119.212 121.239 118.738 121.673 cv
118.25 122.118 117.756 122.493 117.258 122.794 cv
117.186 122.522 117.105 122.261 117.045 121.976 cv
117.047 121.974 li
116.988 121.706 li
116.934 121.272 116.906 120.813 116.906 120.335 cv
116.906 119.956 116.934 119.556 116.969 119.153 cv
118.505 117.847 120.037 116.086 121.435 114.045 cv
120.38 116.246 119.939 118.33 120.133 120.166 cv
cp
115.197 130.88 mo
115.148 130.729 115.088 130.542 115.08 130.519 cv
115.078 130.509 li
114.979 130.099 114.912 129.661 114.867 129.204 cv
114.854 129.062 114.854 128.907 114.844 128.761 cv
114.824 128.413 114.811 128.06 114.818 127.688 cv
114.822 127.601 114.824 127.513 114.828 127.423 cv
114.848 126.974 114.891 126.507 114.953 126.026 cv
114.973 125.874 114.998 125.72 115.021 125.565 cv
115.088 125.134 115.168 124.692 115.268 124.235 cv
115.273 124.208 115.277 124.183 115.283 124.155 cv
115.305 124.128 115.336 124.089 115.373 124.044 cv
115.584 123.782 li
115.68 123.665 115.787 123.53 115.916 123.374 cv
115.992 123.64 116.068 123.909 116.166 124.151 cv
116.438 124.821 li
117.1 124.528 li
117.453 124.37 117.791 124.177 118.121 123.97 cv
118.217 123.909 118.313 123.851 118.406 123.786 cv
118.67 123.606 118.926 123.415 119.172 123.208 cv
119.644 122.819 120.085 122.386 120.504 121.926 cv
120.766 122.876 li
121.01 122.695 li
119.584 126.25 117.565 129.388 115.197 130.88 cv
cp
114.105 123.39 mo
112.742 124.907 111.371 126.017 110.029 126.687 cv
110.027 126.687 109.383 126.987 109.383 126.987 cv
109.383 126.987 109.369 126.991 109.359 126.993 cv
109.342 126.999 109.318 127.007 109.297 127.015 cv
109.271 126.767 109.223 126.536 109.223 126.274 cv
109.223 126.034 109.232 125.786 109.252 125.534 cv
109.395 123.771 110.025 121.724 111.119 119.491 cv
111.127 119.483 111.139 119.474 111.148 119.466 cv
111.162 119.452 111.176 119.44 111.191 119.427 cv
111.189 119.499 111.191 119.569 111.191 119.642 cv
111.189 119.663 111.186 119.687 111.186 119.708 cv
111.186 119.858 111.197 120.001 111.203 120.147 cv
111.209 120.239 111.209 120.335 111.215 120.425 cv
111.238 120.696 111.27 120.962 111.316 121.218 cv
111.449 121.927 li
112.154 121.772 li
112.436 121.712 112.721 121.624 113.006 121.519 cv
113.828 121.241 114.664 120.831 115.51 120.265 cv
115.508 120.288 115.506 120.312 115.506 120.335 cv
115.506 120.763 115.541 121.165 115.58 121.563 cv
114.172 123.306 li
114.131 123.356 114.105 123.39 114.105 123.39 cv
cp
110.756 132.882 mo
110.629 132.313 110.543 131.716 110.543 131.052 cv
110.543 130.071 110.695 128.97 110.969 127.759 cv
111.832 127.29 112.697 126.665 113.559 125.896 cv
113.498 126.392 113.459 126.87 113.436 127.339 cv
113.43 127.472 113.424 127.606 113.42 127.737 cv
113.418 127.841 113.408 127.948 113.408 128.05 cv
113.408 128.261 113.434 128.452 113.445 128.651 cv
113.473 129.28 113.539 129.878 113.652 130.44 cv
112.695 131.577 111.734 132.349 110.756 132.882 cv
cp
108.135 123.681 mo
108.125 123.726 108.117 123.771 108.107 123.815 cv
108.041 124.136 107.984 124.456 107.941 124.778 cv
107.918 124.942 107.902 125.104 107.887 125.269 cv
107.863 125.503 107.85 125.735 107.842 125.97 cv
107.84 126.075 107.822 126.181 107.822 126.286 cv
107.822 126.419 107.836 126.55 107.842 126.681 cv
107.846 126.788 107.85 126.894 107.857 126.999 cv
107.885 127.368 107.928 127.733 108.006 128.091 cv
108.025 128.181 li
106.898 129.157 105.816 129.812 104.758 130.185 cv
104.748 130.026 104.717 129.88 104.717 129.716 cv
104.717 128.003 105.289 125.985 106.438 123.597 cv
108.643 121.479 li
108.713 121.411 108.781 121.347 108.828 121.3 cv
108.551 122.063 108.313 122.862 108.135 123.681 cv
cp
98.7461 126.438 mo
98.9102 124.778 99.6621 122.919 101.09 120.765 cv
101.582 120.458 102.082 120.128 102.594 119.776 cv
102.363 120.489 102.203 121.183 102.135 121.847 cv
102.096 122.142 102.07 122.433 102.07 122.716 cv
102.07 122.722 102.07 122.753 102.07 122.794 cv
102.07 122.796 102.07 122.8 102.07 122.804 cv
102.078 123.526 li
102.801 123.495 li
103.434 123.468 104.09 123.353 104.764 123.165 cv
102.514 125.038 100.529 126.112 98.7461 126.438 cv
cp
93.2109 122.272 mo
93.6484 120.589 94.793 118.774 96.6758 116.78 cv
96.6523 116.878 96.625 116.976 96.6055 117.073 cv
96.4707 117.784 li
97.1836 117.896 li
97.5391 117.952 97.8984 117.974 98.2598 117.983 cv
98.375 117.985 98.4883 117.983 98.6035 117.981 cv
98.8535 117.978 99.1016 117.964 99.3516 117.94 cv
99.4883 117.929 99.623 117.921 99.7598 117.903 cv
99.9688 117.876 100.176 117.837 100.385 117.798 cv
101.646 117.569 102.885 117.155 104.025 116.661 cv
103.904 116.864 103.771 117.071 103.664 117.272 cv
102.471 118.177 101.307 118.989 100.205 119.673 cv
97.4492 121.38 95.1543 122.226 93.2109 122.272 cv
cp
87.3301 117.05 mo
87.6797 116.265 88.1602 115.481 88.8594 114.687 cv
91.7266 114.295 95.2227 113.25 99.75 111.432 cv
99.1543 112.104 98.6406 112.779 98.2012 113.454 cv
98.1855 113.478 98.1719 113.502 98.1563 113.525 cv
98.0176 113.742 97.8633 113.96 97.7402 114.177 cv
97.5059 114.297 96.834 114.64 96.834 114.64 cv
92.7441 116.646 89.7148 117.384 87.3301 117.05 cv
cp
83.7109 113.059 mo
84.0234 112.586 84.3848 112.116 84.8516 111.657 cv
85.1016 111.411 85.377 111.168 85.6719 110.928 cv
87.6797 109.298 90.7773 107.783 95.1113 106.248 cv
94.0039 107.208 93.1445 108.211 92.5352 109.234 cv
92.5254 109.249 92.5156 109.263 92.5078 109.277 cv
92.3047 109.621 92.123 109.967 91.9805 110.314 cv
91.7051 110.983 li
92.3828 111.236 li
93.1191 111.51 93.9336 111.677 94.8145 111.75 cv
92.9629 112.365 91.3047 112.825 89.832 113.111 cv
89.8281 113.112 89.8242 113.113 89.8223 113.113 cv
89.3242 113.21 88.8477 113.286 88.3926 113.343 cv
86.5059 113.574 84.9883 113.454 83.7109 113.059 cv
cp
77.4492 110.425 mo
78.1133 109.448 79.0273 108.522 80.3418 107.644 cv
82.5527 107.978 85.2793 107.888 88.7813 107.34 cv
86.7617 108.354 85.2109 109.396 84.0488 110.499 cv
81.2871 111.022 79.1387 110.974 77.4492 110.425 cv
cp
77.749 105.418 mo
78.7793 104.28 80.291 103.306 82.4082 102.479 cv
82.418 102.476 li
84.2324 101.767 86.4922 101.157 89.3281 100.612 cv
89.3281 100.612 89.9883 100.509 90.8457 100.374 cv
89.6543 101.181 88.7207 102.079 88.0605 103.066 cv
87.6582 103.668 li
88.2715 104.05 li
88.5762 104.238 88.8965 104.399 89.2246 104.545 cv
89.4102 104.629 89.6035 104.698 89.7949 104.771 cv
89.9121 104.813 90.0273 104.857 90.1465 104.896 cv
90.7148 105.085 91.2988 105.236 91.8984 105.34 cv
88.0137 106.144 84.9688 106.502 82.5352 106.433 cv
82.5273 106.433 82.5215 106.433 82.5137 106.433 cv
82.1367 106.422 81.7773 106.398 81.4297 106.366 cv
81.3691 106.361 81.3086 106.354 81.248 106.349 cv
80.9102 106.313 80.582 106.272 80.2715 106.219 cv
79.5107 106.067 li
79.5098 106.067 li
79.5098 106.066 li
79.1924 105.989 78.8984 105.896 78.6172 105.791 cv
78.3125 105.678 78.0234 105.553 77.749 105.418 cv
cp
76.2598 106.212 mo
76.4219 106.318 76.5957 106.416 76.7715 106.513 cv
69.4463 107.81 64.7764 107.716 61.9834 106.233 cv
62.8965 105.296 64.1016 104.467 65.8105 103.779 cv
65.8906 103.773 66.002 103.764 66.1328 103.753 cv
66.2383 103.744 66.3574 103.734 66.4971 103.724 cv
66.5752 103.717 66.6553 103.71 66.7393 103.703 cv
66.8535 103.694 66.9746 103.684 67.0957 103.674 cv
67.8105 103.615 68.5605 103.554 68.748 103.538 cv
69.2783 103.566 69.8428 103.577 70.4268 103.579 cv
70.6084 103.579 70.792 103.579 70.9795 103.577 cv
71.1914 103.575 71.4063 103.571 71.626 103.566 cv
71.8271 103.561 72.0361 103.553 72.2451 103.544 cv
73.2148 103.507 74.2646 103.438 75.4004 103.338 cv
75.4326 103.335 75.4639 103.332 75.4961 103.329 cv
76.3828 103.25 77.3193 103.153 78.3223 103.035 cv
77.3887 103.693 76.6406 104.419 76.0732 105.223 cv
75.6553 105.814 li
76.2598 106.212 li
cp
50.0498 100.393 mo
51.2783 99.4043 52.9932 98.665 55.3145 98.1709 cv
57.5635 98.4004 60.1719 98.5576 63.2354 98.6494 cv
62.4561 99.1553 61.7988 99.7158 61.2734 100.347 cv
60.8115 100.902 li
61.3809 101.346 li
61.9775 101.811 62.6602 102.195 63.4336 102.51 cv
56.6934 102.814 52.501 102.122 50.0498 100.393 cv
cp
70.9951 95.8613 mo
70.4658 96.3535 li
70.9746 96.8662 li
71.3408 97.2363 71.7686 97.5654 72.2275 97.876 cv
69.7666 97.8066 67.6768 97.6533 65.9277 97.4082 cv
65.2949 97.3154 li
65.2314 97.3057 li
63.0254 96.9482 61.2969 96.4033 59.9717 95.6729 cv
59.5293 95.4297 59.1318 95.166 58.7773 94.8818 cv
59.085 94.665 59.4199 94.4648 59.7832 94.2813 cv
60.0918 94.125 60.4326 93.9863 60.7842 93.8525 cv
60.8457 93.8301 60.8965 93.8008 60.959 93.7783 cv
61.8027 93.4756 62.7695 93.2373 63.873 93.0645 cv
63.9824 93.0684 li
64.7695 93.1006 69.9482 93.3047 75.1807 93.5107 cv
75.543 93.5254 li
73.6045 94.0488 72.1172 94.8184 70.9951 95.8613 cv
cp
83.5996 100.582 mo
83.0352 100.761 82.5 100.946 81.998 101.139 cv
75.998 102.002 71.9131 102.312 68.7686 102.138 cv
66.2539 102 64.3682 101.511 62.9727 100.692 cv
63.7324 99.9834 64.6777 99.3506 65.9502 98.8232 cv
68.4072 99.1533 71.4521 99.3174 75.252 99.3223 cv
77.3711 100.02 80.0996 100.431 83.5996 100.582 cv
cp
105.027 97.6045 mo
104.66 97.5449 104.297 97.4795 103.947 97.4043 cv
103.334 97.2588 li
101.637 96.8311 100.348 96.1836 99.3203 95.4102 cv
99.7109 95.1152 100.145 94.8359 100.645 94.5801 cv
103.525 94.7061 li
105.84 94.8066 111.588 95.082 113.551 97.6299 cv
110.602 97.9883 107.598 98.0068 105.027 97.6045 cv
cp
114.244 100.014 mo
114.24 100.07 114.24 100.124 114.234 100.181 cv
114.209 100.381 114.174 100.588 114.123 100.802 cv
114.104 100.908 li
114.096 100.944 114.088 100.985 114.08 101.035 cv
114.027 101.313 li
111.088 102.12 108.152 102.536 105.609 102.48 cv
105.246 102.473 104.889 102.455 104.543 102.428 cv
102.842 102.293 101.492 101.881 100.365 101.313 cv
101.227 100.388 102.367 99.54 103.92 98.8223 cv
106.928 99.4316 110.605 99.5 114.164 99.0205 cv
114.205 99.2158 114.258 99.4063 114.264 99.6162 cv
114.266 99.7451 114.256 99.8789 114.244 100.014 cv
cp
110.551 110.685 mo
110.547 110.686 110.545 110.687 110.543 110.688 cv
109.977 110.938 109.42 111.157 108.881 111.339 cv
108.875 111.341 li
107.66 111.748 106.549 111.966 105.539 112.016 cv
105.201 112.032 104.875 112.029 104.559 112.01 cv
104.93 110.96 105.51 109.877 106.445 108.755 cv
106.652 108.515 li
106.672 108.492 106.691 108.47 106.711 108.447 cv
109.688 108.038 112.52 106.981 114.566 106.051 cv
114.865 106.599 115.262 107.129 115.764 107.648 cv
114.031 108.887 112.242 109.933 110.551 110.685 cv
cp
102.807 110.381 mo
103.178 110.246 103.551 110.096 103.926 109.944 cv
103.604 110.51 103.344 111.07 103.152 111.625 cv
103.051 111.907 102.959 112.188 102.896 112.468 cv
102.736 113.173 li
103.447 113.309 li
103.801 113.376 104.172 113.409 104.553 113.426 cv
104.75 113.437 104.957 113.434 105.162 113.431 cv
105.299 113.428 105.436 113.422 105.574 113.413 cv
106.176 113.382 106.797 113.308 107.451 113.17 cv
106.871 113.533 li
106.301 113.891 105.682 114.279 105.682 114.279 cv
102.842 115.88 100.281 116.653 98.1992 116.573 cv
98.3574 116.085 98.5547 115.583 98.8457 115.046 cv
99.6797 113.505 101.02 111.936 102.807 110.381 cv
cp
113.854 103.412 mo
113.873 103.874 113.936 104.315 114.045 104.734 cv
111.348 105.966 108.604 106.813 106.264 107.102 cv
104.568 107.311 103.131 107.214 101.91 106.883 cv
102.537 105.841 103.434 104.818 104.725 103.839 cv
107.438 104.014 110.627 103.657 113.842 102.83 cv
113.84 102.876 113.844 102.918 113.844 102.963 cv
113.84 103.008 113.834 103.055 113.834 103.097 cv
113.834 103.205 113.844 103.309 113.854 103.412 cv
cp
98.9473 105.239 mo
99.8027 105.104 100.676 104.93 101.551 104.72 cv
101.605 104.707 101.66 104.697 101.715 104.684 cv
101.627 104.783 101.555 104.886 101.471 104.986 cv
101.262 105.238 101.066 105.491 100.891 105.748 cv
100.838 105.825 100.787 105.902 100.738 105.98 cv
100.52 106.319 100.326 106.66 100.17 107.007 cv
99.873 107.667 li
100.541 107.942 li
100.832 108.062 101.145 108.154 101.467 108.236 cv
102.086 108.409 102.752 108.525 103.471 108.577 cv
103.041 108.756 102.613 108.969 102.186 109.121 cv
100.246 109.729 li
98.9531 110.08 97.748 110.285 96.6484 110.35 cv
95.5469 110.414 94.5508 110.34 93.6758 110.131 cv
93.7949 109.917 93.9277 109.704 94.0723 109.491 cv
95.0801 108.012 96.7168 106.563 98.9473 105.239 cv
cp
98.7734 102.105 mo
99.0586 102.297 99.3711 102.464 99.6973 102.621 cv
99.9961 102.771 100.318 102.9 100.65 103.023 cv
100.686 103.035 100.717 103.05 100.752 103.062 cv
100.984 103.145 101.213 103.23 101.459 103.301 cv
100.49 103.539 99.5234 103.738 98.5801 103.883 cv
98.5781 103.884 97.9336 103.969 97.6914 104.001 cv
97.5938 104.014 li
96.998 104.083 96.4316 104.123 95.877 104.149 cv
93.3848 104.266 91.3066 103.95 89.75 103.227 cv
90.9434 101.833 92.8574 100.595 95.4355 99.6387 cv
95.4395 99.6377 li
95.9922 99.4395 li
97.5234 99.4355 99.0977 99.3184 100.619 99.1162 cv
99.793 99.7305 99.1152 100.396 98.5977 101.115 cv
98.1738 101.701 li
98.7734 102.105 li
cp
104.676 121.72 mo
104.303 121.833 103.939 121.919 103.582 121.979 cv
103.707 120.782 104.07 119.493 104.811 118.083 cv
105.26 117.226 105.846 116.321 106.527 115.399 cv
106.564 115.376 106.67 115.31 106.787 115.235 cv
106.852 115.194 106.924 115.149 106.998 115.104 cv
106.793 115.853 106.674 116.577 106.66 117.267 cv
106.646 117.989 li
107.369 117.981 li
107.701 117.976 108.043 117.942 108.391 117.884 cv
109.398 117.741 110.457 117.429 111.568 116.917 cv
111.471 117.286 li
110.09 118.536 li
108.236 119.942 li
108.236 119.94 li
106.98 120.792 105.793 121.378 104.676 121.72 cv
cp
119.691 110.539 mo
120.115 110.776 120.628 111.063 121.146 111.353 cv
121.13 111.547 121.124 111.735 121.125 111.914 cv
119.731 114.175 118.167 116.168 116.58 117.636 cv
116.334 117.862 116.088 118.079 115.842 118.28 cv
114.729 119.192 113.656 119.755 112.621 120.114 cv
112.613 119.976 112.584 119.853 112.584 119.708 cv
112.584 119.114 112.648 118.478 112.777 117.8 cv
112.777 117.8 113.129 116.491 113.256 116.015 cv
115.391 114.729 117.648 112.807 119.691 110.539 cv
cp
113.848 113.953 mo
113.818 113.975 113.789 113.993 113.758 114.015 cv
113.535 114.174 113.311 114.328 113.088 114.473 cv
112.824 114.645 112.563 114.808 112.303 114.958 cv
110.809 115.827 109.449 116.261 108.188 116.431 cv
108.313 115.579 108.545 114.686 108.988 113.723 cv
108.988 113.723 109.229 113.27 109.43 112.887 cv
109.6 112.564 li
112.453 111.557 115.029 109.937 116.832 108.624 cv
117.307 109.008 117.844 109.396 118.457 109.797 cv
116.977 111.412 115.396 112.842 113.848 113.953 cv
cp
97.6758 95.9619 mo
98.3945 96.6475 99.3184 97.2227 100.395 97.707 cv
98.8984 97.9063 97.3672 98.0449 95.8633 98.042 cv
91.7324 98.0342 88.4746 97.2012 86.4336 95.749 cv
87.1699 95.1611 88.0352 94.627 89.1387 94.2051 cv
89.4648 94.0908 li
89.5332 94.0938 90.1563 94.1211 91.0625 94.1611 cv
98.2129 94.4736 li
98.0195 94.6309 97.8379 94.791 97.668 94.957 cv
97.1543 95.4639 li
97.6758 95.9619 li
cp
84.7832 96.3086 mo
85.1035 96.6016 85.4551 96.8613 85.8203 97.1025 cv
85.8789 97.1416 85.9355 97.1836 85.9961 97.2207 cv
86.3262 97.4297 86.6758 97.6152 87.0352 97.7881 cv
87.1582 97.8467 87.2793 97.9053 87.4043 97.9609 cv
87.7207 98.0977 88.043 98.2256 88.3711 98.3389 cv
88.5801 98.4121 88.791 98.4785 89.0039 98.543 cv
89.1348 98.582 89.2656 98.6162 89.3984 98.6523 cv
89.8457 98.7754 90.2949 98.8818 90.75 98.9707 cv
90.752 98.9717 90.752 98.9717 90.7539 98.9717 cv
89.7871 99.123 li
89.498 99.1689 89.2656 99.2051 89.1797 99.2188 cv
89.1406 99.2246 li
88.7305 99.2344 88.3516 99.2354 87.957 99.2402 cv
87.6035 99.2441 87.2344 99.2529 86.8945 99.2529 cv
86.5879 99.2539 86.3066 99.2461 86.0098 99.2432 cv
85.6055 99.2393 85.1895 99.2393 84.8027 99.2295 cv
84.6289 99.2246 84.4707 99.2148 84.3008 99.21 cv
83.8184 99.1943 83.334 99.1787 82.8809 99.1533 cv
82.8535 99.1514 82.8281 99.1484 82.7988 99.1475 cv
79.7861 98.9727 77.4268 98.583 75.5811 97.96 cv
74.3652 97.5498 73.4463 97.0166 72.666 96.4092 cv
74.9727 94.75 78.8389 93.9785 84.875 94.085 cv
86.1973 94.1396 li
85.6543 94.498 85.1641 94.8828 84.7539 95.3037 cv
84.25 95.8213 li
84.7832 96.3086 li
cp
43.6045 93.083 mo
44.5762 92.4824 45.7402 92.0156 47.2559 91.75 cv
50.5693 92.2637 53.834 92.6348 56.5928 92.8145 cv
56.8506 92.8311 57.0918 92.8428 57.3398 92.8555 cv
57.5342 92.8662 57.7383 92.8799 57.9268 92.8887 cv
58.3594 92.9082 58.7764 92.9219 59.1738 92.9297 cv
59.1738 92.9297 59.2158 92.9307 59.2715 92.9326 cv
59.3135 92.9336 li
58.4854 93.3271 57.7686 93.792 57.1689 94.3389 cv
56.6348 94.8262 li
57.1387 95.3447 li
57.8027 96.0283 58.6221 96.6055 59.6025 97.0957 cv
58.0469 97.0088 56.625 96.9004 55.333 96.7666 cv
49.4365 96.1543 45.6816 94.9717 43.6045 93.083 cv
cp
231.674 91.2061 mo
236.346 90.3428 243.668 88.6914 245.568 86.543 cv
244.734 85.4512 li
241.098 87.2393 226.918 88.4199 216.467 88.3613 cv
211.291 88.3232 li
198.635 88.2197 175.076 88.0273 168.672 88.8896 cv
167.621 89.001 li
164.412 89.3125 157.734 89.9609 155.48 93.2617 cv
154.703 94.4004 154.521 95.7324 154.943 97.2197 cv
156.361 102.223 155.533 103.412 154.428 103.952 cv
153.298 104.503 152.431 104.893 151.681 105.191 cv
150.632 103.839 149.488 102.745 148.57 101.872 cv
148.084 101.405 li
147.41 99.1484 li
146.568 96.3467 li
146.309 95.3066 li
145.059 90.4561 li
144.936 89.998 li
143.957 86.3223 142.947 82.5215 135.311 82.5215 cv
130.537 82.5215 128.588 84.4746 128.035 85.1807 cv
126.133 85.667 123.359 86.4102 122.252 88.6299 cv
121.939 89.2559 121.783 89.9561 121.783 90.7275 cv
121.783 91.7002 122.033 92.7842 122.529 93.9727 cv
123.25 95.6924 li
123.84 93.9238 li
124.061 93.2617 124.516 92.9258 125.363 92.8008 cv
127.799 92.4414 129.516 92.8105 130.545 93.8555 cv
130.164 95.291 130.076 95.5098 129.881 95.9375 cv
129.746 96.2354 li
129.455 96.8613 li
128.66 98.54 127.902 100.219 127.465 101.548 cv
127.152 101.834 li
126.378 102.522 125.095 103.664 123.91 105.135 cv
123.194 104.844 122.364 104.466 121.311 103.952 cv
120.205 103.412 119.377 102.223 120.797 97.2197 cv
121.217 95.7324 121.037 94.4004 120.258 93.2617 cv
118.004 89.9609 111.328 89.3125 108.119 89.001 cv
107.068 88.8896 li
100.662 88.0273 77.1045 88.2197 64.4482 88.3232 cv
59.2734 88.3613 li
48.8223 88.4199 34.6426 87.2393 31.0049 85.4512 cv
30.1719 86.543 li
32.0713 88.6914 39.3945 90.3428 44.0664 91.2061 cv
43.2969 91.5313 42.6133 91.9189 42.0254 92.3867 cv
41.4609 92.8369 li
41.9287 93.3877 li
43.7471 95.5273 46.8848 96.9043 51.8994 97.7246 cv
50.4316 98.3125 49.2676 99.0557 48.3857 99.9727 cv
47.8857 100.493 li
48.4219 100.978 li
50.9551 103.265 55.2344 104.193 62.4512 103.958 cv
61.5596 104.557 60.8164 105.213 60.2539 105.953 cv
59.8174 106.528 li
60.4053 106.947 li
63.5518 109.186 68.8281 109.436 77.8789 107.744 cv
76.916 108.598 76.1934 109.5 75.6943 110.472 cv
75.3643 111.114 li
76.0176 111.424 li
77.7334 112.236 79.9131 112.466 82.623 112.137 cv
82.3926 112.472 82.1836 112.81 82.0156 113.151 cv
81.6992 113.802 li
82.3594 114.098 li
83.6328 114.67 85.1465 114.913 86.9375 114.854 cv
86.3418 115.7 85.9023 116.546 85.6387 117.417 cv
85.4277 118.11 li
86.127 118.296 li
88.332 118.886 91.002 118.546 94.3711 117.247 cv
92.7715 119.228 91.8555 121.083 91.6152 122.86 cv
91.5195 123.577 li
92.2383 123.651 li
94.1055 123.841 96.2227 123.339 98.6602 122.134 cv
97.6953 124.021 97.2363 125.728 97.2773 127.308 cv
97.2969 128.028 li
98.0176 127.987 li
99.8984 127.878 101.92 127.04 104.146 125.444 cv
103.369 127.657 103.139 129.573 103.455 131.251 cv
103.59 131.96 li
104.295 131.804 li
105.957 131.435 107.613 130.481 109.336 128.901 cv
109.08 130.609 109.116 132.096 109.434 133.401 cv
112.392 132.665 115.272 131.647 118.049 130.355 cv
119.487 128.829 120.726 126.823 121.728 124.63 cv
121.688 125.936 121.741 127.037 121.906 127.599 cv
122.097 128.245 li
123.488 127.432 124.848 126.547 126.171 125.592 cv
125.994 123.769 li
124.365 125.28 li
124.25 125.388 124.072 125.489 123.916 125.593 cv
123.916 125.558 123.914 125.536 123.914 125.499 cv
123.914 124.81 123.955 123.937 124.029 123.017 cv
124.139 123.368 li
124.143 123.382 124.145 123.392 124.148 123.403 cv
124.191 123.54 li
125.402 122.788 li
125.975 122.433 126.41 122.065 126.779 121.702 cv
126.922 122.253 127.115 122.825 127.479 123.433 cv
127.957 124.232 li
129.521 122.994 131.03 121.656 132.475 120.216 cv
132.4 120.052 132.313 119.889 132.25 119.724 cv
131.547 117.894 li
130.352 119.448 li
129.922 120.007 129.42 120.526 128.877 121.03 cv
128.809 120.753 128.748 120.476 128.697 120.187 cv
128.014 116.933 li
126.6 118.614 li
125.979 119.319 li
125.816 119.509 125.652 119.681 125.49 119.856 cv
125.4 119.319 125.326 118.751 125.279 118.138 cv
125.059 115.335 li
124.286 116.317 li
122.625 118.429 li
122.547 118.517 122.449 118.604 122.365 118.692 cv
122.449 117.677 122.766 116.565 123.289 115.384 cv
123.352 115.349 li
123.926 115.012 124.449 114.646 124.951 114.265 cv
125.024 114.208 125.104 114.155 125.176 114.099 cv
125.396 114.777 125.664 115.456 125.996 116.149 cv
126.568 117.335 li
127.635 116.562 li
128.248 116.114 128.805 115.64 129.326 115.14 cv
129.611 115.79 129.943 116.438 130.344 117.097 cv
131.029 118.224 li
132.016 117.349 li
132.584 116.841 133.09 116.315 133.557 115.771 cv
133.904 116.392 134.297 117.005 134.758 117.618 cv
134.861 117.755 li
134.876 117.774 134.897 117.803 134.915 117.826 cv
135.694 117.269 136.445 117.065 137.035 117.02 cv
137.316 116.678 137.584 116.333 137.83 115.981 cv
138.137 116.421 138.482 116.855 138.853 117.288 cv
139.344 117.479 139.868 117.8 140.392 118.293 cv
140.896 117.622 li
141.357 117.011 141.754 116.396 142.104 115.772 cv
142.566 116.312 143.072 116.837 143.645 117.351 cv
144.629 118.231 li
145.316 117.104 li
145.715 116.452 146.049 115.8 146.336 115.144 cv
146.848 115.636 147.402 116.108 148.021 116.563 cv
149.088 117.347 li
149.664 116.155 li
149.996 115.466 150.264 114.786 150.486 114.106 cv
150.596 114.192 150.714 114.273 150.826 114.357 cv
151.29 114.703 151.773 115.038 152.307 115.353 cv
152.307 115.353 152.32 115.362 152.334 115.37 cv
152.352 115.38 li
152.775 116.601 153.066 117.778 153.203 118.751 cv
153.162 118.706 153.119 118.675 153.078 118.628 cv
151.476 116.428 li
150.605 115.233 li
150.352 118.181 li
150.316 118.765 150.254 119.243 150.162 119.739 cv
149.658 119.249 149.137 118.743 149.137 118.743 cv
147.533 117.007 li
147.135 119.169 li
147.021 119.79 146.875 120.37 146.684 120.983 cv
146.156 120.485 145.674 119.978 145.27 119.438 cv
144.09 117.868 li
143.367 119.694 li
143.22 120.064 143.044 120.426 142.853 120.783 cv
143.397 121.311 143.947 121.83 144.509 122.329 cv
144.557 122.244 144.611 122.16 144.658 122.075 cv
145.207 122.646 145.805 123.2 146.496 123.735 cv
147.627 124.612 li
148.184 123.296 li
148.469 122.618 148.662 122.052 148.828 121.507 cv
149.443 122.104 151.389 123.995 151.389 123.995 cv
151.389 123.995 151.51 123.501 151.629 123.013 cv
151.703 123.927 151.742 124.788 151.742 125.474 cv
151.742 125.491 151.74 125.503 151.74 125.521 cv
151.506 125.39 149.693 124.368 149.693 124.368 cv
149.455 126.054 li
149.453 126.102 149.449 126.143 149.447 126.189 cv
150.733 127.079 152.051 127.905 153.398 128.661 cv
153.748 127.599 li
153.922 127.007 153.973 125.818 153.922 124.423 cv
155.123 127.105 156.676 129.525 158.515 131.15 cv
159.516 131.567 160.526 131.956 161.551 132.303 cv
161.577 132.221 161.604 132.139 161.631 132.052 cv
161.777 132.207 161.926 132.339 162.073 132.483 cv
163.444 132.93 164.836 133.306 166.242 133.626 cv
166.616 132.269 166.674 130.709 166.402 128.901 cv
168.127 130.481 169.783 131.435 171.445 131.804 cv
172.15 131.96 li
172.283 131.251 li
172.6 129.573 172.369 127.657 171.592 125.444 cv
173.82 127.04 175.842 127.878 177.723 127.987 cv
178.443 128.028 li
178.463 127.308 li
178.504 125.728 178.043 124.021 177.08 122.134 cv
179.516 123.339 181.635 123.841 183.502 123.651 cv
184.221 123.577 li
184.123 122.86 li
183.885 121.083 182.967 119.228 181.367 117.247 cv
184.736 118.546 187.408 118.886 189.611 118.296 cv
190.311 118.11 li
190.102 117.417 li
189.838 116.546 189.398 115.7 188.803 114.854 cv
190.592 114.913 192.105 114.67 193.381 114.098 cv
194.041 113.802 li
193.723 113.151 li
193.557 112.81 193.348 112.472 193.115 112.137 cv
195.826 112.466 198.006 112.236 199.723 111.424 cv
200.375 111.114 li
200.045 110.472 li
199.547 109.5 198.824 108.598 197.861 107.744 cv
206.912 109.436 212.188 109.186 215.334 106.947 cv
215.922 106.528 li
215.486 105.953 li
214.924 105.213 214.18 104.557 213.289 103.958 cv
220.506 104.193 224.785 103.265 227.318 100.978 cv
227.854 100.493 li
227.354 99.9727 li
226.473 99.0557 225.309 98.3125 223.84 97.7246 cv
225.806 97.4033 227.474 96.9927 228.896 96.4873 cv
228.735 96.084 228.561 95.6479 228.366 95.167 cv
226.325 95.8926 223.713 96.4233 220.406 96.7666 cv
219.115 96.9004 217.693 97.0088 216.137 97.0957 cv
217.117 96.6055 217.938 96.0283 218.602 95.3447 cv
219.105 94.8262 li
218.57 94.3389 li
217.971 93.792 217.254 93.3271 216.426 92.9336 cv
216.469 92.9326 li
216.523 92.9307 216.566 92.9297 216.566 92.9297 cv
216.963 92.9219 217.381 92.9082 217.813 92.8887 cv
218.002 92.8799 218.205 92.8662 218.4 92.8555 cv
218.648 92.8428 218.889 92.8311 219.146 92.8145 cv
221.906 92.6348 225.17 92.2637 228.484 91.75 cv
230 92.0156 231.164 92.4824 232.135 93.083 cv
231.413 93.7393 230.475 94.3047 229.328 94.7964 cv
229.63 95.4302 li
229.745 95.6748 229.855 95.8887 229.969 96.0723 cv
231.633 95.354 232.892 94.4688 233.811 93.3877 cv
234.279 92.8369 li
233.715 92.3867 li
233.127 91.9189 232.443 91.5313 231.674 91.2061 cv
cp
f
257.167 97.2227 mo
254.742 90.54 li
254.213 89.0825 253.812 87.8604 253.332 86.3047 cv
253.142 86.1323 252.442 86.3057 252.37 86.5732 cv
252.502 87.1689 li
253.001 89.3613 252.466 89.6362 248.575 91.0483 cv
235.106 95.9365 li
231.669 97.1846 230.76 97.3604 229.969 96.0723 cv
229.63 96.2183 229.269 96.355 228.896 96.4873 cv
229.334 97.5859 229.675 98.4707 230.049 99.502 cv
231.21 102.701 li
232.358 105.865 233.469 109.042 234.555 112.268 cv
235.733 112.363 238.937 112.207 240.336 111.98 cv
240.621 111.716 240.553 111.177 240.275 110.997 cv
237.994 110.778 236.337 110.294 235.73 109.79 cv
235.035 109.157 234.512 108.181 233.518 105.444 cv
232.383 102.316 232.523 101.42 232.817 100.831 cv
233.247 100.031 234.48 99.4624 236.463 98.7427 cv
241.738 96.8281 li
242.711 96.4751 242.787 96.5684 243.175 97.6348 cv
243.923 99.6963 li
244.426 101.083 244.698 101.949 244.729 102.501 cv
244.8 103.28 244.329 103.732 243.707 104.119 cv
242.364 104.968 li
242.204 105.228 242.424 105.832 242.737 105.879 cv
243.561 105.58 244.931 104.922 246.277 104.433 cv
247.699 103.917 249.21 103.53 250.107 103.204 cv
250.317 102.967 250.099 102.362 249.81 102.266 cv
248.173 102.539 li
247.173 102.7 246.857 102.533 246.554 102.161 cv
246.249 101.789 245.774 100.714 245.232 99.2207 cv
244.484 97.1592 li
244.097 96.0928 244.059 95.9863 245.105 95.606 cv
252.589 92.8901 li
254.01 92.374 254.085 92.3472 254.472 93.4136 cv
255.401 95.9727 li
255.969 97.5366 256.344 98.688 256.428 99.502 cv
256.612 101.527 255.419 102.322 253.854 103.494 cv
253.694 103.753 253.976 104.294 254.251 104.355 cv
255.846 103.615 258.462 102.424 259.021 101.98 cv
258.754 101.595 257.993 99.4976 257.167 97.2227 cv
cp
f
229.63 95.4302 mo
229.328 94.7964 li
229.026 94.9258 228.7 95.0479 228.366 95.167 cv
228.561 95.6479 228.735 96.084 228.896 96.4873 cv
229.269 96.355 229.63 96.2183 229.969 96.0723 cv
229.855 95.8887 229.745 95.6748 229.63 95.4302 cv
cp
f
137.373 128.496 mo
148.376 138.659 162.345 144.271 176.813 144.271 cv
178.32 144.271 179.647 144.191 180.9 144.097 cv
174.593 175.359 158.394 205.721 137.373 225.657 cv
116.369 205.731 100.174 175.371 93.855 144.097 cv
95.1035 144.191 96.4268 144.271 97.9365 144.271 cv
112.406 144.271 126.374 138.659 137.373 128.496 cv
cp
136.858 126.961 mo
126.064 137.157 112.241 142.771 97.9365 142.771 cv
96.0806 142.771 94.4551 142.655 92.9746 142.53 cv
91.9844 142.446 li
92.1748 143.421 li
98.4609 175.59 115.166 206.93 136.86 227.255 cv
137.373 227.735 li
137.886 227.255 li
159.597 206.918 176.305 175.578 182.58 143.421 cv
182.77 142.446 li
181.78 142.53 li
180.295 142.655 178.664 142.771 176.813 142.771 cv
162.51 142.771 148.686 137.157 137.888 126.961 cv
137.373 126.475 li
136.858 126.961 li
cp
f
141.431 196.021 mo
137.835 190.917 li
134.238 196.021 li
137.199 200.216 li
137.199 213.239 li
138.362 213.243 li
138.362 200.372 li
141.431 196.021 li
cp
f
152.623 199.907 mo
151.4 193.789 li
146.046 196.997 li
147.055 202.036 li
141.782 213.942 li
142.845 214.419 li
148.053 202.649 li
152.623 199.907 li
cp
f
123.031 199.907 mo
124.255 193.789 li
129.608 196.997 li
128.601 202.036 li
133.872 213.942 li
132.811 214.419 li
127.602 202.649 li
123.031 199.907 li
cp
f
116.391 164.523 mo
116.391 160.342 116.324 159.671 114.345 159.474 cv
113.507 159.395 li
113.306 159.237 113.373 158.527 113.574 158.408 cv
115.25 158.487 116.391 158.527 117.799 158.527 cv
119.141 158.527 120.281 158.487 121.958 158.408 cv
122.159 158.527 122.226 159.237 122.024 159.395 cv
121.186 159.474 li
119.208 159.671 119.141 160.342 119.141 164.523 cv
119.141 178.568 li
119.141 182.75 119.208 183.302 121.186 183.578 cv
122.024 183.696 li
122.226 183.854 122.159 184.564 121.958 184.683 cv
120.281 184.604 119.141 184.564 117.799 184.564 cv
116.391 184.564 115.25 184.604 113.574 184.683 cv
113.373 184.564 113.306 183.934 113.507 183.696 cv
114.345 183.578 li
116.324 183.302 116.391 182.75 116.391 178.568 cv
116.391 164.523 li
cp
f
149.657 183.696 mo
148.853 183.578 li
146.907 183.302 146.841 182.789 146.841 178.646 cv
146.841 164.444 li
146.841 160.303 146.907 159.711 148.853 159.474 cv
149.557 159.395 li
149.758 159.237 149.691 158.527 149.49 158.408 cv
147.98 158.487 146.841 158.527 145.533 158.527 cv
144.158 158.527 143.018 158.487 141.475 158.408 cv
141.273 158.527 141.207 159.237 141.408 159.395 cv
142.045 159.474 li
144.023 159.711 144.091 160.303 144.091 164.444 cv
144.091 168.981 li
144.091 170.204 144.023 170.244 142.414 170.244 cv
139.666 170.244 li
139.666 146.806 li
148.014 146.806 li
148.014 143.55 li
139.666 143.55 li
139.666 134.316 li
136.079 134.303 li
136.079 143.55 li
127.659 143.55 li
127.659 146.806 li
136.079 146.806 li
136.079 170.244 li
132.823 170.244 li
131.213 170.244 131.146 170.204 131.146 168.981 cv
131.146 164.444 li
131.146 160.303 131.213 159.711 133.158 159.474 cv
133.795 159.395 li
133.997 159.237 133.93 158.527 133.729 158.408 cv
132.287 158.487 131.146 158.527 129.838 158.527 cv
128.396 158.527 127.256 158.448 125.613 158.408 cv
125.412 158.527 125.345 159.237 125.546 159.395 cv
126.418 159.474 li
128.162 159.632 128.396 160.303 128.396 164.444 cv
128.396 178.646 li
128.396 182.789 128.329 183.184 126.451 183.578 cv
125.881 183.696 li
125.68 183.934 125.747 184.564 125.948 184.683 cv
127.256 184.644 128.396 184.564 129.838 184.564 cv
131.146 184.564 132.287 184.604 134.097 184.683 cv
134.298 184.564 134.366 183.854 134.165 183.696 cv
133.192 183.578 li
131.314 183.342 131.146 182.789 131.146 178.646 cv
131.146 173.084 li
131.146 171.9 131.213 171.822 132.823 171.822 cv
142.414 171.822 li
144.023 171.822 144.091 171.9 144.091 173.084 cv
144.091 178.646 li
144.023 182.789 144.091 183.263 142.045 183.578 cv
141.408 183.696 li
141.207 183.934 141.273 184.564 141.475 184.683 cv
142.95 184.604 144.158 184.564 145.533 184.564 cv
146.841 184.564 147.98 184.604 149.591 184.683 cv
149.792 184.564 149.858 183.854 149.657 183.696 cv
cp
f
157.304 185.195 mo
154.487 185.195 152.71 184.17 152.072 183.736 cv
151.67 182.868 151.234 180.067 151.167 178.213 cv
151.335 177.937 151.838 177.857 151.972 178.095 cv
152.475 180.106 153.85 183.973 157.74 183.973 cv
160.557 183.973 161.932 181.803 161.932 179.436 cv
161.932 177.7 161.63 175.767 159.182 173.913 cv
155.996 171.467 li
154.319 170.165 152.374 167.916 152.374 164.682 cv
152.374 160.934 154.855 157.896 159.215 157.896 cv
160.255 157.896 161.462 158.093 162.334 158.408 cv
162.771 158.527 163.239 158.646 163.508 158.646 cv
163.81 159.592 164.111 161.802 164.111 163.458 cv
163.978 163.695 163.44 163.813 163.273 163.577 cv
162.837 161.683 161.932 159.119 158.712 159.119 cv
155.426 159.119 154.722 161.683 154.722 163.498 cv
154.722 165.786 156.331 167.403 157.572 168.351 cv
160.255 170.323 li
162.367 171.861 164.447 174.149 164.447 177.897 cv
164.447 182.237 161.663 185.195 157.304 185.195 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Santa Clara University) ()%%Title: (SCU Seal_Outlined_201.eps)%%CreationDate: 9/15/08 4:54 PM%AI9_DataStream%Gb"-6l]NO&FWgSbq%!(Q&Y`d52j$Ab_U%1sWp3?_eg$"p8o$L.)iE%I7EqiFL,#3\<r;OH\H3"==ac]Ug9fY+A5Cf+,VB<,k76F.%0+RG8^&.NJ]C-6us6j#N(X$\go.G]A2pZC:if!j,k1A3LXNOkY>\5O3iOs;/3aC`+"aFUk-u"_2hW=XdTAEnhqtTi>pTLcMpu2#I%k5C&W^)F`<s*Xh%o&f(\H2ljjX,jl50d=h9^H6ghF7\cP5J@$oonT_o_$:,?hpHecrSc:Nf3dq/D[-7>h<UP+hd1e\oBQ#A[m,?M%?iPX`Uu0SWhct[/#eg0;qJ(=sr:InIpMZlQ]:XMbs5e0JoujDl1qMN59.5#^`P;D9.J))-gpu6c&O$&\b*a(4n=VdeIeI]p^AdQF%%j+$KqY94O]DqgUGPX8MDnj&4p$nKTkf7p&msLPnGPbT:!eM9@e&<$@$3)%+#]ind7@Hm+V*#s?EVY@UlT`.prl\BT?bC^`k2")P%5Q$WUq":-.N;<F-O5IVGIt5`+-N'L0^]&=rrSb6ShL#I=cu]tNm2,6+]tX;W2q<,=RobErO\k*!hiZfaJ+oF6+25Ad#itRUjqEdP%X'He./""qTYPrj-LnD2.?[[G&mPjV7(\RJj8O,gqhF/P=qSN=tg_@UX(UokX[5O(-TM02AgN?a]<eV9&$RrpQHjt2eWt0-_Hh6YU%2Ze[gH2Q]X2r?OY8CK3_0,heu2ZFTlT=YIUs7l-\h,iAYOR)EQXe'OFpr,2I^i02X'`@CLRi@m09`JbhblPoEh;t\uY@.:'pL3e\%Y5dtYnCN^l[Nk]pO2#2Chkf9"j&)M#&<FTr>OV)dn+k^L_706B(pR&!p^,;Ln2HYjEETZo;QrhD=JikE^0M)3.KrK(?hbR5*KO=f%Gf2P%8,VLo`%oMfh_%Q\q"D#OpWLGBE0%QEg`LEr^Vr/)Hgc_Cn2HZM1#[%%Kk&Pnnom&;r/G9,7/._AXdJ$jED6-H5N.Ff2qGol%igOjTp`%85rur/tKP`J&\U?#_j20\UAm#\Bo7K2=*&A?J9DG"6jH4NP\aS<4DB4),F/1,W#>=%Nn2Jq:1WZ?Rms)kA?S$okdhuc!%n@LYDr/I=fF?KTuRsU/,r/IOlI/'1DOf=$(b3`\s8d!^eV&u6amN5pZ9/59;00F:C4nbEC`U.]j3aZ,YJ$9?A:+6iHLMud_q-+g\%rl.i0h`*g>$,;D5YmcY1pd-E6f+);N>@?_s)HL$=C;ZW!V(aLb]$NHK]Q<NYleF,Q%=>66U1<5t@ju8cCZkHfHiDuqo?(TYjuI)0%E"*3R0`AH1cL20Kk\=rb9C^MFT;c&Z^<n%:h.T>\HCJKbEgm=#O^\s\DV3=MC4EWsY*\$fDPSBPQariST5!;'g;!P!!e5+fo$?e/%-mJ<4roKc:piH>!Ira\t3G[APIeJ-fVZ"\&LBE$Ds74M*`T8C5g;!Q,FiC!-^\fn=+6M`GGPIZjPs=R^rYNR5Kk$L:90Y)QhX+V%%Q[N+2La?EJJrfn84M^]*`)=YSEPG`[(C9q>>[RUc7sHOro7'pA$ic!tjiSWFih#J(%kqdGC`0t)Q3,YBhg;GQ5B=NeLje=PTP^eM%+P7p;B9mkJ+4-1:^iuK<Zs5YI-'$?\p:Bo)CBA1(H:Akhok)5#?pClEGKFf;>=MhETb2r&IKR""3!ip\Rk\?0n1VE^]h!sen]:CQ%nc^`U[:CfjGSY[Jh-:&H5N'VeD1Mesmk]t6ra'E%pC?J_RAkF];E-FF4"D;;bW_AA#fUk%oQO+_V9%;?pUPJmY!cqL8H/b"KB&[i%cju)7NI$HR)*[#*7F$hK`/6#/".&X_8&YY^MDJD>a4Oah-Z"-4\F2jiJ2*&YRGKo$lPX?(h^A?mCuB\.?,"gn$c]Fe*!s*<7d@[o%Eg5E)[?LYjZa?#BNEJcOFV^%qqoF$LgZEJUIV[hNk-eGhYf@.qqDr$/8EVGmLoC!^QrT#tp1U=gC8apT*"1aIl+H#GkSnlJ]`AHJ%=Ge5V7;#8*VuR&`mM5%KlSMt/bL-Y4`Vi!ZR-O%s.No_h=_[Qs1JorhTBP]V8f[TT:S]ihl^h9H9HKMCBb<rd63X`rYa=!,WfQX:%D=<`6H!OeqkT,^Sf1k3:\1Y1=MpU0tBqoSu:-u"k.c;oT;4J<eTm!cG1D,__GZJP0E\V]WYG<P6HR6<.l*ASnr?X&cM?Z\r=<mHn%\-(aoBoV#3<BttAISP;po\3KT^(QfrO$kQ/;q*nf'uro]Zr1jd]rZp\o2.X!\b&D^V7g1RAJ2`5;<EUQK31cD0YooJT&[RUhp'$4%la#(Z)<]`J\?m,TY(H7,c)kUfT<RI7>)qI`@Drkf?3Ed@mIgkN(SBE)cujsc2;G*CRF9g&S30`_EX-KAk*+BGZ-jr#qbVVkd`Ka#%EAQ8JfLj`B.fN=6>*nprIMP%RqbCqFEDm1/$&c6nouJO;923tJ=;D^8Tu*Z#>\BNji[I0,L;#`MC=nTY`Y^@_V!Bii]WuTaV+sN]%BnN>qh^5r,g:+bJ&arNfNW*;%%upmjTQ!;((T[iari+/\e5<Ie)IMY+!nK,*Tt=4ff,c_,<?=\PPOreQThAU"7qu27+js1XY@>5`%pc]I""3U6)m3^^m,AMJ"QA%sOI9W8AC3tR$^q'sG0j^\!Z$^(F@pf$[;Q9.<T!:o:F/SIX9tNa[:46aN%SD;j*E9IM8Zm;J\KJ5/%P*fgW,Ip4rSgdruQQRBUF_K*')TkT+p0;n0d1]5#dD09ul&5U*Gib+/4jPWo4i2E+RINqJq?59b,4_MX7?BU<eYHG821hUIDOX)_%'l/\:iLZ5S;qJH`B8T'<**$1hR[*\d>fR^BTktB[AJsceDRC"+,uJGJjIH%[;*r/+pQ,!58seE(mBEs;GbS*c6=`O3-o1O%3ApQ$%l)Dg#/gn;hqpo`'r*2&jQ4qFG<t:t$Pt!WI8J"DSZ:'=^I9F-=e-8lIg48f8^)+K(brU/QJKjE>c9l`RFAn2n4?oj+f-D5:+I,k!%8aohn)Qkpa\`c_F@XolHCEHO<j)_:_P3RqM2^qmBV<E634;%6^qG\<pbWg@%N9@Y3#R=@f20D!P.?t*"_ai,08_Qn_%>:KZ\XumY%!^@KHNI!YU:)nu>2Q0]6ASe3N9$tf5lFQ^aGH71&EgYYK"!6@hKl]9be`6C!kb76\6FENX!aZNsA&;TR[(T`0=s6&a/)?C'01pr=%U:LG*8pqpCXbo+qc0NGSSZK`1d\'/^PU.eLRf!_RZ#:Ilh1N?qJ7k.H'ar"O14rSYMDW0fRoqOJ9h$[3Z"0WWc]>C.8V6AglD]A4%=m*/\YrBTo75$pN9g1"l7,pUMkitt6f^\.YpMTpYLTA"=p@-4$&)"M5[e215/&`jTR][R;oo!`L26U/Yq4hlXUqICTd-R0K>@U+'%6+2S!s1;H6Y0&6Y0ubM-/i9RI=k@.GnSA7s?CIa+Aln2tf:%tGkdh@d4Gmq`U4^[)%5:gnbeu69r?%E)i[UfH"Y%'eAOusi;r=?^%ku$2E;jAj.AAoPT>WUhZQFb^AAL)aE)d<Dt?":QOHd6Wcg_[$/@a3&NR*s-7YDdhYmR`S?g^dFh1_-_=W`C3gWS!*.\nS*b=LiD2%Wi@imh4`m&C]UM0[ZG\CA58GZfnWJu+m\Hf(6>bQ.d^>tMWIiqC2:V4O1^XNPZ7"&d*\h&5>B\l&poKeO-LcL-B"lecK:^7D<8o6%heXHm%*d?!P>SQ#@@IsZP"^GI4j,2#^rRun^#cb*C6eh@;EleVc]HI^/NP[9O3*"t1U^8DT<SLns+L$`s73Wi]@ctBhPQkZ?:QjH%?Kn<7^$6fd8m`:qkj_S)P%)3):\L(L>Q8?'crt*/R.h2P\@!#dH7&Ym9&9@DZn8+?drq[]>XRsh_<L;B2c3@Q;6&]cfs<9_O%edQ%RsU`^Ap#olEE)9BAA4hqEET!lkj(o$c!Qj=(HUgIZ=V:_fA9V4RZ0^=.W9#BL-W1Njo7i5jiihukIQ,q,,Y%X^668ffB-=N#^HKT%_;jD)(E'p5N=XRF3[^_/7aV7IIZ]HppO^(9ifiNP-!oUm9(k7i[*^JONES1hHW;"T]<:u5JsAmZULs&SN3NVN=37`Dm?ge?9r".`%WErb6h`R[Ap?(rP:%Mf^IA?c$5$!#(lY\:1"g,/W+tI?QHjd4!J*C]5X.*Z*A"DkVAOc>>YkLCFA8:X,%7Ej"CG+.\NP-CY;NK^9%+,d5>TJJ!9,FNan^Wf!k\b_pp-eaV,.mh.U=oh+Dpr^&o?4op(:'\2HE>J'V%nVo7`Fm5$_mXind0J+,'dND:9H<dV*JCa7S8Y[Q%]ri)T)n]og;f4coR:W^:EK)h/Y^$&1!s_3D_6-r7OZ1%-C8s>\4OV@_;1fmkPiP"NcL!/QZ$mmBNB-DMQ8;1KV/b'W)OJa.GjCX4%7@E1p\<+HAf'RSa`NgW?Lt2JJMc!PUWk&FN^81;(?\e=(Asl]b>$1@dMJ[,<3+\@:CrPC]1I#'/9(bi@l\&](@AHbC8R<.uo<A32%rgTm=4a?>jD6g#6P5/tFB!"d)B@b.tU[Z@e_`lXR61\`&SBtYMi\7AQ+YHY,581G[-$=A"qNSFoGW$Ag%$+;AE$h8tV(up1ekT35%#'md1B4/8<1UaK9#iV)SHBYBG'ZY%f6oaqb;j!ENhiP+f<7:\6lm]pDnXRITPMZm^,e`T5p9b%LJPrVO<7XDD@jXh6\4Tke;JMP$%%;J$lh-%doQ9f>O3btgk=Zb.YcVZ-RM0fn[`O1>_WY@n._]t%UG'(,lr^O<:XCm[Q12FIal&D@`6g_GS#%90JqHIKrKe(]Z`c&e_%AbdI?;9gK@mn)tZ)2e>>$3q;a^;T*3?E\Fj)@1W07)gr%$W`2LX(5FBr/kV'eoGMKUM:iMT?=g,FoJUfQ7&bbb5*S;a+Sb[diX5m%*(ro"GEjBE8`E=l>JlUtA/qdSPkH$YjAD8d<Q'3r;Q_FXX>WW4hp8C-9E08W7K&*Y'j@S.1UX0qdC;#G&#a>>F?]8#<\:PS7;$2@%dYb.-a3E?%;)/TLf#Kr]eL4O'2,:sdWf$CZOZ64eb11FK.i_&/<cZ_7f`%1!N_nsep\^+c;<+]n'cm#uJ].t+9P'3=n9g?\GI0Ok%Egj,t?`MY)'[3pTNH1#iq?$Oi)=Pf$FS-F>Q"dUiW?8,4=S2'Z0;F7rOX\D`&a@LO&MJ"#oFX79lE0@#`9=)@P[i6%U</p&rl@9D%XBY@=*bPaI4Om[PF'J-PN'UZTBWSPcnPH)E)*.4$[dOqq.Pi$i/E1:Tau4EinVoW0c)`g%eM7qi><Foc;/=/rcYU1qd$7d3\^@JA%kDMr0es41R%:!OO"Z6[?V%8N&'L*90ON3f44jHaUX7`YN%aAL'U2NuK"*ekmML"H%a2<$GTnUEg$t[4**6I=:d*M-u8(h>fg6]M8%3Z5-pn3mW5J$`2R)"B<FgB_fPa9:'R3DNO*)V3(WHY05ucG8t,UMq">`sWAVdqg(+f)@LDb$%W$EZ*'6^+K.Ql7LOeR84c_T?MJB%nedQiIaV8Kb!,O:+r1nD/cQ'O?T-:h`6fe)=%Cf0)m=(*6Y2`r%J3G[h9_t-ne98%d@<,&5hP\cX9%j)Vn,WTB#i!X<"Gm*D_0jk%&\jZ9O#:iOm%!@U<?5GuR',?G)e4f6/3mN-=n+e"T%,&h[>jI,`G@ol]u5]b)`B_E^IX<Zl?\mh'<5tLiKn0$0'n!FRL\MS<*Q`]%feqd!ccV[*mj",uk\F'fgp/PI/=cLG`#6LS/1&<uERC.-B9TR_]hrP)4"Qkck;)Go)QEAhR;8dg[Uhi!f[TcJ&h2@d-X'/RBu%68%ia%b(8mM1>WZJ7M$W3^`*"uTu*%_qbWjb[R\FN8:F;Y0R"3OGF3(d6CrtaPuMs+MN4T_@'HX<C3er=:b0b7="^"V'XS`Ciuk'3t1%Si.q2>b??\!mC+Si6Tq880"hP@O;";o$$S3C&ck\jX?YoFK;Q8rX5uo.=,&Y"Dm<C<B$n^Co'S_/PR.Opm+CpV.Vi(Xde]4k'Tk!%p_QS/j:i;j*CY1QI#IO<3GGS^&WJ8qaJ)I2Dnjp1RXJ=Q7AU#X9BlUJa1+&jEpAjh3Kc\9BSjuJ<*rZqVl-TGSQf.?dF:4)+_shq%aJHcVdkGKACd$9S/@nFhM-$]H`qFq>nEiZ:QPb2%K?4n11"rJO'=C[o-^SO63K/?pf=54J7Ma*A0J\+-ZM6nV,".0GFbZ5p!NO)t%GM'+7;'bi?i[SZ4*;WpJ:so<cdEJcIf$..>r`#0Y7pXS4D+E.MGYBut+ni3u"'6sMSgN=<A0O#c3_(\4gTD;qp%)9L/$j*^hn1$L%2\:C@]gA")Eg@7%BoNa`_ueRaAbjHBOZoZ\UG^3u=%UYn_tDN\G92)OYKX!9Ub:pEC,O0AX][tbC3.D-d5UZ:Z+;s='!^H/oaph%%V"n)]"B.AESeoL(5p&$p9.b8Y]H5=6W`I)AqjOA2lnZ[j?P\VYmTV;2eZq]r*I'I\D01"SRoks.0hES2L2/Rk3];>Bp6Ol@*7@qG%kJ(_+NN+J+%$`V%9jUohYV^.c=A1frO"L4#e1*4pY;mr@Z@mfeJ)R&G-)gDa4r++]=&bbfA(P<^6YN(]<kE[DNr,-9_U>:2/6'/Z%)n%0(@>W;G['\jt9\e8dQ*V&Lc.]@(6#g%9ZLOA`N_`qBWkkpS`NK'[(X'*@#uc8q2@l^-3CTqC"Bc+/8o'lr?/=dI'H4'@*m-X8%IG1e8U%Vl<Lld!q/;r(jo\8NiX*.1];!FfsPK>0OE"f,dK5UO?R13G1KMdmgiWg.A;EP3/rp)^=<V+`lX1<Q*STpHPjOU9%3\.&k%m$_$Mmd\Pie2l#9Rj':PE_&+RfX+Dn3<)XA.HpaGp1(M3O-XocBgQl"_pQWq7V/l3Q*RH>G%`I3NsU):dSf\gAB*8?L&A>j)9<kc%=t=A0RV10FLk;8GE`Nn3eG=tO'R_#@G7dVA0cWsUje^ppHlQ9H&CkgS$f67mCel#s1L&J"82JMm*/.:s>.X(0ASO1"=mF$[)BIl5%&C-YRE@bj=2OW3-Sg.l)s2:I.lY1aKiO$mRrDr$qU3i;#[H9)AqPn0pncP5ULJ$Whr$=HYCdFD9e(Jj9.mL3YijN08GCf2P3/Rk3%/_4Jr]Lm)d.1`_]%ubSS<tUF4WH-Fi1WnJ/=22E;F69'#EYT)8[d&0EHFd69-E4H0U=);T>0Wr0]G!0[Z"?m8q((p49W>R$d^n+U%UNp)R2g_q:2"JDj^<lOF(/!sSVQ?qdARKhH)aD^%gemcYaU5)\s%N?8Z(i'AjS_KD0A*::.s"\(eC\&r60?oF#dl3G:G&nB4I?NP%%Fose3)X#Qr$b*('QWDJNp]]kQ"HkHaYkAYOUR;Gk_kG,[(fhp]4lq0hfRqVT>b]o(X4!n,5-$Q.VU0F7:$a^;]34+rZW#NptDLq%?f\>O[he5_deL9@G7pLt,HUhGl$l^bKruZR=hu**:iL,YMe9GMbnJS]+m5aeMH<WK+>rIL<k_$E*j[&U)NRKn(7W@eH,NosH(OU,%=IM*No-$W'iNdLCV0u6)^%uO]gEWO:`A$!lXBUj),(3M;En#?tU,J@+bKRPlC/Tp*ftFsf[YA'hQf=@1Gc=g"/+0M<,5jHD9U2W9%nM<Ul1XS:*dgX@lDVlj[&(O$J,L`c%(`d;"WnLS"<>OGS9ta2`7<KEaU_6Ytqg%XhYHih*NbZ57=sl]Grj_ED<hn[[c"7ae2H;iQ%UMctJ3_R,uaI_M)GE$*dS?nDYC@.5)LcDkt0du\/=)BVEgfdu`9>u_RK+ni$Bc.5O1ZaM=Ksct1pD%uH<3!u9,NJ-eiZ3CsM*ZBg%lU3#*fLCY9X$mA=g!404d6CnkHei1oea(&#%^k.>",<ct7GYeU]7cET*-?r1>Mr21AZ7DJC?95Qbt9,nbVc])2R*%:CQ5,mXEH3<%pMG,:/%Q4$Q&$.mFe9pn:l$(=7nq4EH7`UNV5c[n3UkapbWFmj7b67^a-(K#(Qk4M<u!MKY32gM.ahPqdC#MX<8LP#8o@m/em2s<%%H\eEf7E%P>&-G:\]#Ym%RYYS%[sF,/M&uL]%>Y*./%Ko?a2=NnH:K[hmHDic+5I+J+(@&h`$E95Ot)9^UCbqn3Vtmo\+lYVt0g\%XnfJFGmGChY&!f)U&u%a'^L0Ne71TY>EU[141c9i_2U*Wah!7c>+/"UQDu#D:BU-I)?gn7RQX)6cDl(gm9H[?o*U<eGn:k(W:Ztn%e#<&7m(BcB/K+P;WUI*FU:mP[`n^E-jaMUgj^HT"=KX&/G."])Xiic/>^'@T*(m$-m+GUSQA!.Uaq+stYP\Q*HO.kCRS)T?/U+*^%<%i"iCGAZ=-X#P%C?tGhZ/C?1m[(UIAO?/(@SOQ!f&EWD94P._MhLc:2W$'ZUm7e$[G=J[25[BHT\`?moUm1VI0dD;8+Y7Hfq6g)%Or*#OS:XX%8UJ@ofW#]9.Zl=2GqXG;Wj\gPc^5)\?$N57M`>qH[`UJYRDc/dFbFV]4rV)$k]>M%,^uD$5orag2G:c+Fo+>j+#>rH%+4XnJUK(Ll@c8/ONJ?aK0pHON7^_)gN]GOiS0kSH'cTX(pqkLL:!G$iGh%2\7Q<$[cY,>s=JDA7U0,jOa;/2iLQZZ&')5Q[cUKmc%*2@f0;0P<F^4pQ499+8dc?to7G]F8Ff:SDI),nIbZV&(,R5s!YH)qX=oT31>D`>oNg?,?`OtWX?@:kO"$IN,/?>/JOq"@CaRcZg2%MRVC8*,7@:V;`K8'3a:ZbK.:"Rgd`M8SQ0Wqbu%^"Zl3J^L(6Zq\B_%j1gWChr;2'5Ni]-?[m<MoDUiNY5V/QHuo8Ve+\7H+FX7F%0Af.]2t-5A^u:XP:&`u#2kT$/J,Jg8e+Z(VpP8L\ch?81s8DWYlW52.\3&JN^\d_[06[KXO#qdmTJ,4#q3k_.YMO[,jfS4SjoZ[n%ptb@>^]-OMY<TnI!bd(3oBFN?lan\Dju&`FpgJCAnEG]mmXFd,rCuZds&JH`J-h+pIi<0O9eX0VeN:eCBhM?3h9u;?a.HTe;#5PI%nE!HVp>`3CRlB5QGkM"Whn7f\@,q.<&qBY+`g3)q+0OAqoMPY%#?h'!mI/ri]_UN'UIG@]qUL@^DdM=+J+M865$l";]=,oK5J7$c%etA"q=7?-9IImGbe&_rBp$USj5JR'arG>Qp2#ZCX]5M,3d!BSCI/ine4HXj^bo^;@InebtprA(\IWH#T^3TD>eV>0]CR)tiJ:<'A%odkr.[F4kp^_eZhHh$)2T'3'-iLTfD+$[F7p'n7\YBE,lgq7t3VuO4&k<HhnG/"7NX.(bt:$BmiTUKeSIiJB9!"OIc>_;Bb=S>Bj%nreOtcV%C<1+dAER<s(!Fa8,B3aD'Ub#Q/J=7L%>$<R4A\oLlF2-aHn?="[+&"!1:Eg_^+F;Zapb5c:s"==rkr8Z>tnp!8<0P5[U%a)m9\q&#.k3$$fe`;&<VE-XDa%Yt"V*:b6niaG$(K0N$7G8Q,6ZG5+#Ji#RUpE6+!54.BZhM8f%:[$F[9=ZO=j[dG/Q'+cAWAW]:%-=n[0J;'Aonmt#I6O'YHk96`Co:/2AH-.al85E=O1*+geJOtuE8h$VtL#g^I*+]Ue`QNLbLWK</W,$C5+o4/e(WTrjk,T@fm<k;q%F.)WijuC\.R/K.lD?d4%>QmqX_BJ85#s"dm_[P85%o[FUoS^KTQi?1ZId`3@K24]-fa%!EjIIBjA\+<_VrMldp/@CMPbpFb;jdJ>%9l:m*ii_(541YNkbI[&'Mf*^SGrIbH`aOOW*+:J>_[$Me@E`uinH_jMnFegOs"KDD07J-?!&QFu7QD*+`d\!bc1&^@<m\_p_cREZ%"pi`+QS`Y0Hap/QXq\KB`)gl\5J4T'G'EW2CEQs\$0q+SZp9*<bc<+_4DEitlXt`TAb4TII1E_L""]hOT$)IFn2"<thTp61):!a)%n7Mdu)Xu?W56&SOKI-Ef"#1j.4,rK,Q3.QYrqp@^%*,XnbB0!9!956:_jj5B%s&iR5K&*W@7&%iO:a2t6=to;#T8f'F(?;s-"9Qh%RZKNQHU7pZ+=;eY$5lhbLg)1b=NIg\i`gtYQRDbi&J)dOOWQmAPrtE(*;LJ&a6Bq6:T7,J:GP`4T"-udr=_(1J**/:Itl@!p9XQN%CkFtPk=I0L_?Q8lT=FEebpT-/5iN=LCZF+*qAddF6iHWOT]bn$1S"Kf4:gAU_df,,qI_bk4mqLJ=G9/qTPpR5kt0>l4VP6I9F<,H%Q`OGdC5IfoX-K!_X$Tt>agEo"&63c)ip-]OolQM%?]&<<W'!4CT"`=oLCKPe(qT5.=S_cpg`/?M@+b:4RGX3lYP@ms`Q$5CnU#9F%iIm%PP'd5i3OWF5i9uY_dr?'";&*)r>1S1'7qNd1Q0^o)@iWR;SB6FP,LVc!M5DO^,8l^R)3n9F`;>Zjb6+0!BOHFK#u;`q'CF"h%!)jPj9f+fVi,h@N$^mQ!G[Ah/rs(;Df`4GS'TGpG6eN#>;\Y3g1.MST8D,=QdK/uRQ_J'6[OGCXCnJ"elA.V?)Y#,Mc6)70HSeaE%=<5=dAW)gi<j>i]DIq!kD-+/PfmXYD<btmG@LiP[ZLEL4XP0shbuT0l/_XgcW`:PVB!Z:YA)&tJZPp>Cj0Uj[@ni7L&UPEGJ$L&/%D=1GWfBAdMipCR=U%5%fft2+r<mu7T[=$*i*I?b44X'[N#e`fE(&4jUYWfla#:h+%ZEQBBC/,V35].93XqYuT34"]gn[)l&$cX``%DOjIR/<`rD0)Yk1jj>`A[PHRJBWL,HLegJV724'AW!d&Ks%HW+Hh#Ok[1L8X")D><Ku!\VbL;.FX'iB:JC%r\5cO`%n_ahqM5+sY%lGsS68*UU4e;ptd32QS)8DcINHFHZ4fK$4D:2MSEf;CBLgVM@LGh*q-k2R?IE:VfDk1QF#%8(ipd;tFC_#(W.S.a]%'M#g5BeGNc%K8LJ/MplRd(NFVtH?UG&'"WoPT_p(e>.Ip\(UMHZ/qsa!Yc7?I;UsSK%]Hc"eCJgSEBF-qeXLctJ,bigL\_h:(9<Mg$2gOK/NQ"J%?duYULSsX">.<_b'RiokG_W-cMqUTU4G@.l/sp)7(WF@6!I1#_!_sHO7m:0dI(Es8Hkkfo9Mb6g:K>ecL&(8bDuq`[o'_@!ds0VS%I$`H0DgfQ>\+/X-MreTp7sp*@p<;Rl)>'!XR;R<Jf`uXC;2J&?q3G[:>u[@a_\peJH/FbZO4ls%4KsJV=@3-*;1MXdJ7VselWCsP%F21C1Y`p#-9*,l-JCPWij]hlQ=[6pf&E"USdL<c;!KS_GWt#4cX\3&.$^d:kR$e2V2?S"n^uPhV])sb#9432VYQ5!Qci[4:JN5&b%Op+gE")uLXi1:<-5`hnk&&;4Y@'>F81A8M(O2-(FnDF^_`=oK:!3A3?]j&:PpV=(q^q-]L%jS=L$$^arhB%6gBAiH0ZltIFr3$)<%,7&pYDSVYp5n4#$ArdosE*NGr06jW,#S[f$AHi1!5gU4XX:$<"-.)5berKoij9H5j1Pht4U8iab3e6G*"KGcnM0'lg4G^E`6sKdj%=$Yge5kJ=`ARjkb!tEe5Cn*d\-BOJrAEI;#iHYaj]n!uc5cB!dpI'nr'O"$tUA]cOFs7ioM(CDB!hj1o>N7G_pi@N8n`5)\5D%Gb%a%2Q;LsV_Rh]6VspRDQJh&>0tpp7-m2A'r4B6`nr[n/,qL:[dToGNV^k;+/kbl2=KT6,eJ.36?8qIIoJX[8K.a-]Y,f$j+*o4cBo%)BNBPD-9ZPA'Ci&lY1U&q6X]r%?E69`mQYROCABd#Pe!*8hCOV*hA,.5>0HDcDb!>X(`%+<3=Ks["`Y%f&pdO_`:`_F#C)YS>p_@%VT#"RW>N?Bdbh%%goV[SV4tBE&D6LLNTY9$F$0I2o#Ki4cda%3[B,+h-J)P>UGG,%rG0")3>Gi<M!lk>T2[CfK];V8UNuIA9inuW%:6p0[gWf;Es#eYi\'Kp<T?C%kpM=EOQtNq0^n&fK+7)Q>CHn70m"tXKG8k0*2]jork"357Wa6-1jdfHFC3V5s[&R3F;gG9@]c*Kb%40@eun5S7YF\WH`pg+Zt;]j1#a+T!\FBHFFTI^6ULtLM<4,S$j-H4XPE@#@^Cb!$('\>,VC^M'heC<im7'uXB<f642k*\gEC(Tm9%-%`8^[Sg'8%p$86(t91^7F5nJ\/sgRMgX1j[[LD-4X;fUc,]/9S)*&RLY^:+roMLVKW=rk*rk,2*e-i)s81b(>gh1u)P4elD=+.X%.9t<P:)]_@-#N%Fi@/$[ekR,IcQu:GT1cZNiW<WHCHcTC^b4]30,G`:UR#(LM)bn/[&+)6SPS^'\Gh9mL]>.NlL'Rr\T/7)U00!p%cALb,NN8#@5+=&3)u1u!E_*0Tb$?\L:P\=C0UVA7XZ`82gahZ,oBW"H,_&aA&mYFe=)r%6CcOD^Hkj]Yoe:JoL+TmNW?5O0=f,i_%B93h`.,-Bfd@*7q55Y0rj>kfSZ9Ef"JQ"O&TNJO3>F4')Y>:6mY#"+k+SsY:f;H]rYKrn+a80&lk=V=WW+"t'nhqc$0'Q01&*5dB%qFg8Fg,SD73-?9YrS0Vf^DXDnJ$=AH3^9,@d%:cih\D%k[_hOCm,-IPZ!fP!%!V'X\77H#YLen;&^m^@6KYjsFg^Z'b#G:r;O<t-%3*p'6OG0NhBj[3e//MG2\gk@sFJaL5peo5'G$Zm\.fh0JqF[KE(d>9RAGXC@&!UaS8I:1\Z2]qG_))^;#Ef0Fm12jS]3%TFTL;&5%^f'-KZ8>%6%4iMr5+mQo)8SpS*[jBr:U5SK`?f)A0-i>UC7sAOPZp8.oLP3f>Y'UR'L=a2P2p@#Jf9J)9dEV5W3BAi_1JBbKaWeT%'JN&"HcG\\+?M)cBg(eYeePC1r_))+FsS(OGZ+`0b$+L]gKWWaj=L2c;Va&>.go:QVJT(N%u'AFW4V)#LYP`#<*WJtH8++8FGE;a%/392IF6gM\T`ldNdB,!Bk;L_iG?p;piWM:82*GNR+e!;d;s#!mdPX-uXs&tNn<CJ<Lrk4U:NkQrg$ii=<`@6i5PkkXC4?/me!5<Y%8,@,Lpmk1T]:Am3aCl.$bXhp(B581+"u8(X'AaU-S!*,Z)G\un6*4Ts_jT;Sq^(B@]"RRAZfuQjlBuK]_o>Fop*Wk$P49tYY>XsB%WFr4+QC<"hbe@aQ9^6,&?D`A.Y%.2P\E[pGr[.1q%4D=i/IASkU=JjWGfY>e@C7O3#XdA'Oe@Ym=dq0*].9R9XI70bRo;esXNk_-%Z254$hAij`BBZEl]1%Jq=DaO&gSdL+ctq9AVKa5O?O#2tco-jK`Z='%`$][`K5TYqmGl8FFg#4!I0<jrLkSI&dB6Wso1=)29<;@8%Ai\_aRgii_-8F?Z1RPjb9OPFTVX5:3:BM9$mN0hO1:g=PG*;)r1A*u4-URQmaW?n^^J+Bhl&H\<CW=:c"?c20Za@bBpY"a71u3h^%)pr8knK=(alc(d;S-I;9q2QrAat2k'[IJnKm-@U2amoETntP*V4M&"=Q5sj/(6Uk]$<>'`0YOKg%u*AWf&p/-efFWdb`g;8d(H8N%Ce[Qp83`_<2h.XtAGA:e.JZat4Xe4&$fuORl?P#iq,)k[8'87fp!f=Kl:iFOb"s*.CR7Z^;mfr^hQP?i/*'nP`48e%/&oER>V+.A%U2H:ZB2q`cpf[lA\#@2u>V=Rk_JY\_LV4tT`SZUNjX;I_R`At;%W(J]"nb*h-!f;TO9:?hF#!@nKu)@anOMZiSApWAl,=1SVqFhC%))d_NHY:iE-.EA%a*ZsuFFLIn3Q\RP^aAI'Z>>sj7(_VA6oa2G\+.=RS:kuW&WUZ/RfW;;0j-%]oCm=;!"oVc[X!514//59HkBYu%:P;Y=;LKD4NH6LMA=i:_&_N=9<6I]1jec%'T>E^"i0Vr,MR$_FbWA$pJ@agdG],,*O>+[mhn=C0pA3P"G67V]3!DJ6oR#HZpUnuD%#r8"<TAfF@$@e!T2lmpFhOu!'TDq"g52F=(:KQ)]=,#5En[uj4H&LkW(=2.qT$LV'T2)M5N:-<KPh53Do01KU4O<meTD*X1"=efU%kP7'Kcgrr9(>\N9\&(4ef"LIl`^`5mXqgq+R"s!jWIM6WWR&2#T6K`fTsFJ"Fnd-ZOT1KUG;g_1O88T+]nVSpI_)i]&aIKhX8h\%%+8\Qb<]j7/id!c^o7$'+I/C1j/U"m'fmV8S40qYd]=)AH7F1DLjuq)cg8NgDrQi)[H_"EGF+,@q!29)r[O7@8@uG@*`$G>W.f<-i%rnh+;5GA\N\\`i_$9oosoe+k?4D]:U:4f!O#L3(_f/sm7:%QkNV8"p49lnsgP@.>5K@pRNqnSN_]i"gS>do3JlGYdK`\16,*2VLj%@dHAZ*;8U#:WMV<?;\(SUodW1A[+n"/GXPCbL;VcdFWG"TY#t!4tUR$e,:=D\UHMiROOSK:ECY'TtM`KGp14^X1>SO<t1C8bpg%l%d^'<ALbuU78BK[hS7,(YU60K5-cragPW+V*jDgigE_a3jj@:\_Ia.,d8+J*7MVYpAJ9E44P*:RS8b1a@-ftp"EJih"9&t9?jF&M@%W6<;o#P(;(-#&\ZGHWuO<t]aJnkhD04i,[MIa.Fj?g;l^L#Zl^7d%>7Ft9(=l>P"5fZ9"r82eDSIC'O,MR_b.`u<5ZLFp:.MEM@q%c<Hb?@2Xaki#3^*RRIX-;lOX_Xd_mD-D>\sRMjMXM<`cZ$jjg#ACKc$(08iO't$+lBqOTSBd>3X6(<'BD<.r1K,qe+/45iFbfTP#%23`#!)W)Zpm2<q[lfa_VE6:=W9D"*oOB8utON'[\a$bH;%)PNC3/Nj4-H\u5lq3,"SQLUj/7jq1-B5&C^2h(pHLBd(\'6H7c/MR1%9WG^I8pu#'dl<BL3gXI#06Na\kL4S9RC^F_:KTcuR>*fkSDCo%p<;@!HN3@.q:oA*J&P'o(hLioGPMmD%Pt(C=)T\a-rXj6ZBQ[m%P\PO<K9`BJs4OaYm+Hm^T?_r[*.WJJ5X,LHT**Hd!U/\HoT/-prolIjT@U3uD/abqT>'p-=17]650rKB%t&hhg!7q.e'I:-cfrnC%OUD+5[#4$pUsJp/TD+I3mj#MogZKfRkC'.uj[;>h8,@V[bO\"Q:E?FFO$iM9Od[Yun<$E)1!JYY(&f'Jo(erFVtp-aIF-0P4],DP%dj6G-IJWSsOQ-6"C$8?X,6*IhK<Ubc&A"pMl4k31C5d<ZL:mr3gjgQVW4hplm^j=[FVh;EmQYnS>M'lHlqJ8o,o.Wu#4K-m/'OP!%Pg%79![Kgu2p5(3H[-+oML_J_jFFftE&s?@(8*Sj3'#JpDoE"Tnc6BfJ?uqP>U.$#$-6ZZKA7iIG7#>_SDBW:Zd]ou`d+YPPj!Dh%171)c1XM9(S-UL^ds]K=HPfSg"`_j+;;5[s),e@%P^@.;SJkFBF/h$pL6YKpen;:kO(=LiYGik*Wc9?IeR0r0An.g*Q+@'#O55Ag%:/[s@j?cFue%i*qR\-K5CirX1orL:.Zs?,PLO7:%cH!AEgR5R(bf6WEgRG`h6e@^:SZs+<A+,`_?sGJqTpiZ0ppNP0ogi>-b7*`M%dGsdTZXW=Tk^=D`GGFnN(_=ZkEcTepMmI]i\##2tX(.A5D-6)mX5)(8+d&fh06F-QjJNmV9;Rql%G+k3_oXY<Z5IBiW)?AsAW?#5%[PS]0SBifnI,HPGlVs*9gk-U-mY*MZ50f]mY=/qD^Co\OXS,JOGMa&uB'u1DHH^^MVAe`>mp9*Z1B"I!qn>U%jCLLPr@%5hAB@Zo%JBoEY@Qb$H(89^374];"@B[&OJAkd-174P4=>8GZ=6tVkp9Ks,d0fc&lP1ppabmc>V-U650343.<V4*'F+/WEKjE1C0\kD!E0&?R%3Wk-%%="7)i5+B=LB_.d;dd,5<rcolZi6OQkO3XU4DiC$ING(=k:^*N:Rgq\9%!Un0eAs_.^//cW>X'+XWQk/!3/0tZfH8VVa8m^%^[cO7T=K]U"pQug@2_mY@B0&UD-k)d^4rW%KF,0+Ye_HJRLjqY_'R[!0_O3F%BE^#bWSYlQqNfm1Xu$<hL*cE7@>BlSK7<V'm+([%2Q;4]n>("7k4m7rp?NP/Sie&<Qt#Qm:MB&_@phIX-#."t0,'rW]saU&/GU^cc)3/b%A7lgX^%_H(WUW!a0a$"Gki_t!$g"Z/t?0a%EOEQEHRq_`hUdZ8&kVS\UoRfIe#nigQcTesYd_a(qd]oj(A:@gr_f/-Xc-iJ'+s.n+fm2&ic;NP+IC8*5Dc3&"Bq8fJsjX2O0iP1%:]"km,r;T;AshQ@75N/2oW"<WYF7JbD!(B$RH#D>M5hf`/t?'O3R]UNg%Q<.%.2'&b%$+6(qu`57:dcg,F.(WAbT?9%-2D,;moOg%dZoTQZJ:%_gNtQB[bS0O]1l;C8n#GN;q4i!WVL)fA[SFjHRR,jAE^VL<9`Hf'&H/JmSu0Nen3Lu7ZqZ(AZ3G`AG/\;LQrb4G$-_%%3*1f:c*+Rb;K""`2XqpEU%VrQ<Fa5ia3>m!FiP./a:mDiK9S'+`.]:uRQd8.V7TNDqCTPBiJuZ)egAd*5^X1g?I.fFRq=9uLYGD#%qDqT'20@7*H^`@4MU&,#oO).KgLg*>W>U-P;AoIZR$7M8aYFCM%slSlV[#W%m[(lL57`c#4Zr(@mb#/OF4[fYB6FO8\Ncb=pMf6Q%hE,^lZ[roX38gnkh(:4&QK7Agq50C@a'e=A$(I:/gnX52['<>4HFWq=pi^GG]f]WiI+u4prb*sG+64b-^;'&lY)g=DXupN+*`!)T%j8H-B^YQ!G0^OO/ff`[es'KEReCF.Jo$>q/hfH9TR8$(R5L7s&5@5Z8I#\'q2=f)Fa?O#Vs*Th(erIN.CZO*nrO*;T@d*V+q<)PS%T<FB,^./+t)YrQ3jI`W<^X\VLI#\&RnS@4S\jQJm!r8J,"nK:<($*GAOQ/,SgsMq)[A5_.E9A.n32bX\PMXk'gffS>96(,C*DM]T%'=#1#D3M6MrJ>-50K+4qN1&N2ok(3_@m0N(XiXj/OA$:VIFnsr1t0,Un'-5u#(/5cbt302N,OGu1Zb)\hotn.co7.pN;>gsdg)nK%@8eIpgFDGfVij53+mmcV:*;c$8%4c2?55W+<Dh:6LCH\Z=$sGs;"[HRqBlI=XnoT)H>][P)]EA>2@$!nXqXT-1=uA6Y?CQ;-.)-X%<QQ=QL\tBdnk91(Gj)l!]-;43I1HarDZjsfmstN6NPH"t4YYg.k629?@)15@I<V48o"!Ek[r*(4OL!IgI@m_*SRt7E;n]g;Bo0`U%Q+9!L\+PT6cf+Q3l1"QG0G"]&T4d8X1#Kl]Z1D2^I(4m(J'P-F-<%Zjk(g;+^jP"oLZ)ZS_5qh"S]nj'h]KG%jOWocL.@l5[YfSE%:N`7t3eiEf4&Lu;k@#).HdnHu(^1lH#_Usn2!J"(Q8qb;q083tkj^274`U1%cBj<VTCM-_jut:QpE:mahCEI;a3!i4Y]BV$%Ifsd%aW+*J<R/iSs-tG"S>PhHT#Z#C'a/;]=="KK-5gZk,^5]b<5[_5/b/B.KYTO,AA2DQq`_:N(8p<NH]&3Hfe'rd)h,ET^7gJ,R@V'E%f`69ML$&rH/Us`-db,YTh>Z7s;Icl@/NCe7A=.gYDp*Vjg!r0+RsN\5oidAKbAV*_/T"FX8S8o74MSl%>?JUnhHP*8`R%hV]S=:Y%FjPIkn%"tL4g-W52fkV5nM;#SO8=4c/dL)iGoiI^I?oj37Qq*d<!'*/<[f!k+&5[Q4u`=;`:ZH74$OWOh-^<7A[V1jf^3=]7XD!0%D>r\CqgMV_1J[1/-i@hXIM<Ur7d/dKo6s?#ZQY&tQi$13DKEAki-2q`s6f1`Dr,nioBs4,08qR@IPLckHi1nT2da>rq!n3u]<?BB%g],#a+0Kh&L(Z^u3HUm:'/\%Mjt+9?\"Djs,j=>"VK_bfJ#/5+'E7no!;t"mm!c5:\,SVZ^*WQhr#5QKot8gN<8gLF<,6BDW5-UE%4oFr4.f;0aMtb'ik6jZes&AkPC7j9MRWj745Jj?N][]dY5(S-:p^LX_3s&;Io[dl+*Bq`e0d)j-K%>[Qn3bDr#nW?8OePlGIpk'K%LB(;K^=53!jaPPd<b0T*WnDR)p3,7pJa!QMT_=Xc0R_aoG_Zt/V(]6n?!lhtmAh?+^:$&'Dee<T#l7<#r?+4`I<QWU<0V)Y"CQ&+%VRs7I+$*SPX.OK7l(r:I%3aa<Y2lFn-hL!n<F9Js?AUt;+oo<Y0=Ce%4g)^gT6+sdO)'O&rRG!BNIDZ,&"VElN;`6-bYSiBV:N2[%]9OGInCVro&R0Z^)fP](Q[6ebFH:j2c+N4>NuL.QV,g]Fga;!^IaZoG=m6.IBJZ9R9=[FAPCBKD6P<@oP(Y_^!;`NF[DH41.nS)8%S`&5^g>R1([C_\iF;*'*G!!]mp`3tF#Pq?a>h@e(&mT\J]A&WKlUeN9_X`t`3;WlO%8$2-8XjI.f9]\@[)]p%Y#nMPA/-i0.6*Bl%hS0$^LRVB&?%^oh+*ORg,S0p'QE\<:hpT89#Kf309)ir(LQd3j,lWZhi`m[B%\R@,el>9*)CLVtJ(g!D=Q<Ua;6@Ad<nmWV<?LFl%6dN>KRcpg\WnIJG"+[dKq8h*?G`f;(<hHaQp1A*\nNhkhO&a^$)Vppn0aFH19o:.j'J>ONmBTtjW7Xf\3BOF:@!]ZIU<+.+K:[Ed%)T)`;UAs.)Eq1]/&<JNkOc-'_!IaNaEYi3dMBf*tY])lQ7Vsc]5J`.A+4fugJsGB:"@RSk:ZHin0j]e><#oF`!\,"#S7(=rN"\[h%rZ(iiT-H:gTQDp61%(_/&XRA7&QSsHrer$)KaTS$4S0hKBlNVt_u!l*:(\m8hJsPf@K],ErG`%KNJ^dAPm[ijaA/WE5'rV`r<tN&%7$aHq"JB[",5P/0"+(m$J?H<1c_eMcP<Qf&FFDZbG#T2'"/"]`2p_KqZU(/!'Y@13G+caFHuAPN+Itj_WWRnDoWt6C$55aoie9$o%55B"dXhpGBiL_fXI.GYrZbhsb-Wp498LL.TMQ&:4;G[VNRe+X6ZQ^,093.rlf!BgI6jdeq2eF6"@7'Za9gh%t'q%JjnkZU]$Mf3P%j)PB@JS!%7kPESJ9gP%1+GUCFT.SAcQs^6S"QOkjq.qck@6>Dm*AQVonr[OJ.6q<(it86o9`K/0fhbCs&S4h-KQd1fZQ[U$')E%n%+9\e%ok1l@.SSDb5Xl5^FRn+d22,&%0j_dIQda9HM'u'K]hGT7"o0Q/A1g+[F-Sf_&IO<8!B9UTDh<EPQrs;,j$e(:BB!q=S'Y@N%d7o^B6*3@=h*?nhNl$<bNtW"9*0GNL5/J^hArJ5KoGAB`FEgi;T2.\()WsS-V8>]8/R\n,Pg]E':DZr1NiauGg(F[a)43dMe&gdP%!-;&cUG*gi'Y3rAjk9JdOJ!DeUG.f#0uLSn-Wo[_;qIXS:fARQ;do+2:J`\e.u!1^4su`s3%LF(j?Y<<4.Y0B912!"#H@Vd)9BKK%]pnbGH+2OXr:oRMT2=.G+$h;QLQUdIjS#4BoP#Uiol&b40=f9l&!$NOS%l'Da=NGlhbsC#"jOj$l8X9HW^*B,7!RW3?lL5S-M[b+%S:S.E5lf<F'5M_Ijf$$`-\82`jH[h[Ac)dI-.7g$Q-;muH`nr`f+Y7-JLJD;6A%$W>e$aoPn3rg'Kdc_BRC"J#&cbl=Cu#/G+dEO%&Eo%O'q_i_G#'7H/2P_F'F.scg)u^?%ocGq@>K"k?L<&P#.&G#qObh7`pQ54%X`m$#==&F5:hkOdLab/.uo@J'UsWlP!dX#WR^jF%+sfua(IA*ESnaKkrHqHmVS>PYTk4U]SWfCD5L#k0r2G2*c:t*Xa<Z&I;j_UB8Y6YgrK6<:?mird,Y8@5Qa7*\@.L9X^Lfb?eQ-$&%.cOV^6.I:g,2J@t9jcYrep^)WW@3RNb9%]ZR6V0;9P>E%NJl&^JNkG56NCjghjVJXUHPE61Y8F@9j-bN=NkMQ#`lB8m8rVf)H2j;%M94>3RR6E"g\)5dNo5bTQSFYD_i&Tu5DA;e8b*;J[ApFP-QTRA"R-(6C00:CXj5?W45=.NoU+6(5MN\'*OFX8,S?C8`89BP!%c;2%,n#n("P?!CJVK8*OfHQ!U'JGP([VD&+OqpoTG3tE7Q8";PCm!fj:=")e/1QKBC]fhcP$NGfRW-X$$]]X.(cbg"ouK7@1T!M$)rO1%EVpXG+[UO4^R-[u$aS-%p$ubR\J$bOIYhZ2/$)CA2TB*F8+]g9:Wr'[+,FFDYQ^D+d`!RL6Lr6L*lpb.66_Bn1!;s1++uFXE2nB5%Xk'uC,O7D`'5BnQ_"gu+@&_l3DV(cIHgR]C?$gu1G0ZfpOJN"N!"kGF:C7Tq[QH?V+o.oUfMb'_.g'g?.r0haPDRP2W'j7)EpRdG%^4nA<+YR.d-<YYsl_7g5]`Jd.M[VM<p]D3[ABi%AeKn3$BCb:E0>]\oZfL11r6#J=,"[ff%SKsNo-JPT7SqO!5bo@sC@0qBjH9$h%j2*2)1L6(#EDg1.PE<,EF*;X./Am#+2,bk3MEV*V_Q)\!ctWus7W"//Y'\Ks.ck[G19kb9G*Vg@.R)_S-P2]%!)V(iINkBKX,&'N%-B9eXltUfY`.oT)N8,Z;<0K?i`<OjUYr8Ol@jfE0/g`gOl9^?Mfn,l<d]'/V=3Zpk:%W^g3%=5j$2_5c`UmrdLo[`FkGlF##fs,)%;:AbP#T/U3qtd5[EGf-uf)Fq"h$EF7H_L)=-_H*Kd&Luj(ICoF5lR)G\i5%?d9j/3Ui-H9D^.Pb<PIkX/GCI,0Qf4n+,-Z?Anb4H%3\lB91ck9.^4Uo9.`)]_?<Vg+RMp6DC?2h"]]n%]k6JEYaj(F$/7^MfW/86#2"KOIH5PZ/Mr)t;Ad>j<N%O@RcIV;T`R:i:hnQh(%qA.U0XYlk[0cH<KO.BH2MH48PU=AKsd'$1l&lkGPF&e`E3t1(#kc;.EpZCCJ`P?j"4]Q)ufB1j8BP1[d[8kdPk\[EU[G%'4X=]:.%gqDnI3]Db-1,:^)OZI\!FY-F\Q)CCk1TKd\<?f"LQEE[@CaEdNJlFgS_RfoBTd^*JZ?\ns5/JRVp/k;H$q_Ab<>LQCJA*nh*1)JI%OaIr3@.\+EBc0`3;`8d^B5'm/>(L,Ir3"TOfUc^(NdMThUUhP6C&R3U<o_TThq'gZNutO.hsGmalM!6hYA`9Ir8X-].>X(@cB'_^%k>:iogu06iEbqMe+#!F#q!TMW<W<n3>X=c_j-Ah9rFN!A`':iBA,AX-q?,Dhq?B!5(lk2X+ON:BQ[&rR:qdRE'QhB*l=<nP[DLWm%D:qlNg$6rO,b:mY[&+ch\6SES@=dL]dT38pR,,R=95SgOX\Pp*[^N^$4bb#c^/85S)[b:@;ht:M,(Eejf&EFi_9&KCBf9_,;r:]A%DktdZD8m;o3^go5:3RDba1ff98C:m0.am@Wd=u?bF_7@<BlE?mAk+Z2ejaLnlj$R\W(ZR(koBrPUS'Vj4c#sRC@84k:$\DhGC/;_%XQZ#&J(_rAh)Bh/p$q\sG7N9Q-CBr1aQFA$2.C[cZZq[G.qhqA[B<i\=QhuO\J>"=k^Eo^@c/+m2_p*f`E>?5J>-rar<kFYa78UT%qGg0d_aBR^oj9qrHMci/b_`EN'%5EI.\E+9fs3]<*pTJ#BKi!3nu*TmF@`.L6Z&mK/.\cI/Ye&#'_m+*[<^4.hGcOs,5?6Ojr_7q%nkZBGS+QiqeSf3pSGkTi1@QPY+XR<ka^XA=3n$St>pqOMcOjM[ed/KCckcZ2NUH_s2ph%*o(_nN\%?QBIX(HI-NBGDBY6;sBph2H%5kob.eY*IIb%Z@A[kDO-<F5$K.r$Rf2H*YX8+h]R:lg)L!kp[UJ-Y6TBE%&_iR8<ee9X/V"KZ=mmG\(pq9/8AkW686,!sY7"A1[f%J[+S2A2X.?nr<^/QIT)L"+JpU5naZ7atpP-EX(;KGt6]feURs98@99W#@`S7q_t";%RkJ2JnCKbpaaQ6]atT-H;9%-.?3qZJK]@@%AloiNFKoN$32YLD/&8r@U'g%)iVZf^/=;GH"Q4GZr)KJ(+C65P#`(#HqJqi"L&s75oG:egYc8R#@XajV!]]?)aGpA*P5i8rnF?(o%l]5u@^O,Y4YIgt<oJ;Q-B63TMmf#;NKm2GAIWd^;?bcU4p=Jat^;?UOmf".>r;Y])4F<^Q4L))!&NS5]3^hs]:k^99EniN;$*AYA%%c@i`Y(%JCd,MFn"T;dd:5G^jaZ83E/I6MV4UP44=;qZjV<g*qnG9+<7XRE-eehhn'?ga:,)/gt3CdPtdO5TgJX!6'^c@#o6n"[9%SFc(M]fA(r8"aL"7fhsiIXd7oT*.$d*Qme_?gdpTT5bMMR`60759hW%(F<Ud$-[QAN2)UiEZf[hR"[EH,"QAUVSp:'"^6WuN.!p:%#*q!=[tVXS#$Ip/=Ktgk`alE=)<h$(";mji5D:Mh:Olmu5YO:[o<`$$"1!;`i*8n0FZ_)RdEZ9r,8cnF@,C&q8h3*r]BLLTVZW*r%lR6'I8n&[CJdgdc9[n=(:]Y\q1]&WJR^9Ygh?>1CEHDV40%.?3UbP]"KNA:'*\RNrAM5dfK>;*_M#&"la%-=<UP4R3((o;X@?as;%mml<R1enlcR"UKnCmYJQZ7<C`TFqf*d+Al>%Y,26E5U-n9N&<('VDX3#r%O4'8uq*1ZK?D7'S[*dV2&-Pc+i^)Uf?n*>?^)i?9^:%h\N21P:F12V3o%2M+dndQpei&)DMtmW!p]hEshh_ApSRIr$dcV6Ja!OD:1Z9/48BuM4qm_:5VqM%?k[;q#TNrrFIa5=M<,`=:fb@%cGjR?bYS>1R*Xb;7F479"[6m8ilKfkMdVZFrd:#=K#El((l9VgHRUA`ZQ`pg9es3b76?Yk<YfSL"2Oa!4G0OlEITE9,r3iB,E@<t%&7u-$(c*BAV[<`t3\[9mN\pst^+@26^OF>RLXAV#,9VrfDKEH\6B6+T>tKN#Fs8K4<,cOB`:Nt/^k(+_lo?>sM=uE>c;)dLA8ZJu%V$6@c4Q>!I5`UtrQQgD4"+cqpVo1oR"X(P8jqrakMPn^RP=tQj*qa6*Df6joa5M84ZY(nJZp3#s9B[)O"bW"?S.HG6<Okb]?KTb^%;9K/A'keMDgMP5"@q`H@4_\OOZ,M`7E/L%f:>?HDC33\hV#<+r!Kr)"J0^DZ:G\lc&P_7hKaDJucGJohWckplXXD2!Jf9g`A-nE=%_>f;u6Kt.2&^Xfg0WK_`'.^GR:+4,F&tp;6R0$/4?BI5]j+;05=nr8$$Trap/s?>4;DfE>'dU.77F`5Jig-5o+l]k1\+*ci"ctL*%`o%Y.s'&@-"/^+$&ej<(1BC*]'&C\d7u^&5,egKnLb-<@7"F,.k@??PQ]>)S%R%.o6/>.ZJ5,82Xa2:7J\(`7qc&"BkOrn3<5.%D%F$5O3k@r"6;_!H/_!?f#SJ%d;Gmmlm'SIlS&$bUajJ8R\iiX4@*fsQoMND!Am/AXU6\9G.A!eWT&19hl$-;nR:P7D-Z8J=>cWb&q%UR\\P8@=hA28bMJ@J)LpkaD=q@UksG#(cq<4t7cI33eWC0L,Q5JAK%B$mq9_$ZK)H,8c&eXF)99juc5g&NsU!kMYLmD4O3Zp1U!F%k:AY+NaLFF8u1E4D^dF?G#9$fEk"p`*1B=5i'?K&o7ka&o*.#+"Q$s<O_(aV7[?nDK0D:?q7GMo,LP=,HZf_:03O&XN8s:c)J8F(%-X'*g(`5DhHWUrLD-l#JLA?["X4`IgY9U(A[Es&9A=12;[H!W2:5U9jCCFd`M%"")-Tq1#JC@&$,d,LN=WLNTK</YJEKS88-[Po=%^B5fOmQ`Eg%iFLk<>dXuk*<Fp=P#dVR.*/\3iANpm@Uu0=$t@m^+ntK"DoB)'CjgU[)&AQ@:1JL:AGgb*PhWE`[%\6c3%+g*4(9=%U4#rL=R-;A$g.5g"nMu'Z,rnfp$US[UN\@]hrf@_a<21p`]0s[QQu735t84,Z]HcPFUFhOW\8;2B1O^*H.L*k>O##nN^sK*1gF?G%)J4Hcjf38X\jEH$4,ru27M5`-_&V#`RY%F4e%YD>W!DAqo/*;iS>QLkd<h#_61t<m!jdTnXH:XV_Rt!uBl@k5(`!er-899jgKCFM%+L#>6($Q$9!(.9R,JaN8'k92!b_ZGGK-kc`,kRa??KE;*]gI5R63t'n$#iRKc_VhTLUkjOln0%FrCs#!WNeU\'IF\%I0(!P@bee(%@@$nF(*u-f#=LCh[4%URnXb]^48DOr7E^jZ0ft:<BN@b1H8m'\GsNd\\<i#0=.o<K8HN9P,ujPIMK<<'QkFTT;mIY@Hff]emPYJO%j?t&[-kEO-"NBkZNoUe(-$"QLa,&/'',-!?eiAPIVMT?hFH219+a[c7PI$4i?[Bug:-5'R_[_*"YE^*[,8+UrNJX%T<2F0fr2uqO%5gUp8-SXkg3$0E/#_m]Z\-"JLq^]O1]hOPHYU[7<:pTrfKMXrOL`(%XF`%XH8k#_0cDhVYcBu^A5m0QT=;FWbN`8knYX?!s<<0)6%eS#\DWtooS<Ko@4?&4J@;)7+mSW6`JMP,l0M%p?u_olhQ7A6""*,ZIK67S4k?r92ql?Y;j>;#DmX.E_Z<.4Cu@PKVlqtYnSO`/Q/%_1I5n40q"pSMBeNSCdCjk63/5H@j,TJMb^c/0KJ=reb(qbT7EbY_]AK=>9q?j4;G"?5"li#bD69-l.Zac+?[OI(`7@-No?IOZ\=T%_;^2:Ao391@r8EsC\/GM3FT$%dg;6,knS_$k0h^/<f/ruMI%OPSaYf#<hlFP/&7l0DG@8N?t4@ha;*5ZT2R%;ZrfsnCN>,X$7dmm%$:)6pWi&nu(>SYgU=Yc_608oqUAlY;\>!'/9?5/Xkqrf:Fp&2=SlhA7@\HX9[9li`p4`056a8W&SpFcm(2ts=_4RE'!./f@Fqfj0%*qhu@MM56W.,bM#YrFBVZS3)O4c!%iD3EiCD9=safd''AX@]iKLGL3F>(_fHP@OEtU07+'-K9!!B!JF1\Yn-ARQ*5_M[nghoP&!I%<#4/C(-TAdYA#nS/6+a"Kpea=*D3Y7Lg3_+RS?PfOeGnpOnq*WblX!Pj&j]FMUeP2BX[E]T8mLsL'#neC,Ci=X>o?^NFihtrQ%[<%d4DiPL!(F(70dlbo87-gJKP\L1lL2s+3U*b&KI8E^bguE@W/`L=UYkcP?ZLP)V#^ABJtj?"h[EZYI@*pP\.bSbS$j.1lF(Nk&Q2g%F)/#-CrW75FIb@Zbp2?GFsNP3D1Q^8%*;tT.b-,m!hp],2FFds.SOAVOfS]If//ue<4gf3/-\^/qp1[B$`J'O?dgRu.>VcId;0kL%6[_J2)##LDYA#m"cL1(52?V7CTPlZVe!aOH)f]'G"<!H^=a3I`=(o7:lEC8b;[>F!`G,%p[%c-WdNO<J;(!6Z't*&F`42Pm6CHSD%@RUNEnLJ(f'-sH?:8#P7-<:0)4N=amH[_R)p8<]mND7[]#/O"ITf8`B+Cb6.Od#YQP0>`ROc+<L'!)hPWn"K[Mhk=^B!Ee@)a-8H%l%:9,mKjN!j%P;l`?bUDR['<:*f!JZ9*)(JO=7O:Kd7Inm(p446VnF.!et)cji/1hC0+fFFt-gm/SnB`dE+suo2mhh?o;3_]d;Bg%Wga!o0@ff?g7fdI:'Mln7NP"\'Fp8K['390!fl9%b1Po/0nh(J;T72%EAfp:`/C=?ED6qlJK\-jMl5L"18,>>8f3LrA!eJ&:;iHo%$K6U1e5hSE\IG9uiUQn/9p<@\%`bZHV/,j6l`^r&6Yl?EKW(X'KWgIW'd./V+KKT&;)neq^#V'o7]Vh;!+CZrmSC/+AK-iI$!(4R%Mi-c=/,lF*PeP!sT-I4/-'J:NYlSQo8kTp[DZq>YWJ]%ZCC.>AO8\X8\iAi(mu3.S163=lR5r@g@'#fRnY1%uGUe53@\P8pX1?95%K?1pbe<-%m4e`4mc(BYu-SRmSnEEnT6XQ5/k.U_@2iTjd[F4cM1ChQPi^JB!DEN:ed8Hd._53MkXhrPSB0<#%o!^1>D.\kq4)g<4%E1U-?j6q%I*BOFGa.PM'1?PR@NQBKe9K5qY,B'>H?h&=II]67%#17rM2ic),SGRp10A2iN,jMatS?Ku2(5$SFBb+NTcDT]!3B*d"%,JbTG6pZUE744K1+X\p.TOlYUSLiY3W(pQ=UVu]Pp-g+e`.5R#QmikS6VW3Gm#`UTLr0S=I^Zag6aR=g[4J8UjK("p,TRKQi_XsR%N8^;%+jG'lQ`s]AL*WX5&_DY&*.!ZS+5P#<@bb><R6Y7orA=#R3S`RfRN-lcp>?5tIm-gI-'au$[n>Lo"@0cT(jT6kKtS5jaItd[%(/4;;aIQ#RKKf5e9cVXlTMU[`oqG0*P*?B>Q"C%pKM9QM%\3>kPDB:2gHr[nZn%4X<#1+F*8eWN.Rp;a)&Xm.[t"s(=>4"2nMsb%%2'PWsqMF%<[_M*O-!*'.'ccARj/:C@:?k$0SMe_$*UJg2$M=7ip!#*r4Iq&H@OTSrcq"jo$46:/`a^LFJE!l%LWeY6Z+?PGcq=G'%QCSE*+?\4lT!`CoR%hWSc:Q1\(FWg%GZRhS;<;=CiZ0+?aCPa+kl<j:_)VqrNm'$/D!Hr&)^\`)$I[quFCWRuQ;h:h]K_<'2KP5o%NtV)Jd0X>?dTfJ66d&`CAm>%m%t1u#nAN<[oN4HtjF&3^LI]X!#)-*Oi0hp\?m+ZkOb&`$c"0`]-T0GLpR&ogXP(7XP.bU-RbDX;%>IA^!hn"4u2\6E"##YT4bqGFVRR,mmGf8g7*9FbWbeKNu8hp3r1KFK3WG#Uo+3>cr(s6hN$>VV!@ruIIe$RigaekRPSr_GX0[`),%S4TB(1>c2*`WLqa/Ll\$!h0d*`=#9>JTX+3JY93<X">;FVn(4M<sL"?>e;+&!-]WR;,ccX3+h:h0%>OdZsQ:*_KEme<##QI!5Y5>%>S]BbM_*$cA*hSS-I-PYr_?shq&(KDJ[2Q&NlNph;(l?73">RKIoY5tW-F<NR_TiaJA9&9=C=M>1F5nDO5*A6(\I>[#/MR)ckhpS%lOsGcF[>q.["Fe6.m+7jE2Gc(9@#XLSkO]+kH_lT=_TSf,2qBn/h9KE5/`l,Dm!7Q#nm](V._Ih/Jem?ih;Z,dp%C7--q3;>fGAq%AdndHIin1l==.F9=n#jZ#K)T9*l#];1'+pr*O(r?9P0_MEf-pXc_:ok-BE[XJ0apL.FCH@lBLZ+B@0U&7hRbKUh8GX7SCZb\PRcn%?A=RQH=OX`\1$mfJ1bc2Y95SIX0WIjP-BL,14$BNr1^cq&;idZ^7&/q6;gFa5%iR/!d`\8>6AA+-VGiH5lf&Cnk:q[.eg3Q3fRdJ%=t9lG,'uCFd<VmAB*,![h"9Tme8Qb\-GLdCT9[e^KnD]t]Ed@o$i)S=9=%,7NR3Su?.NjY*qLb:W-4@DFoRG'3QSg&03o'_)Z+Tg%d'OWN6mN/E9cK\`R\IaZ5j7b3W6E<J;TP"pA1EMK8e%PM1"&=7W9H7.00'ADn/,>hid<1@lG_B-ZF9_.e+Pbt)Z?`^D`GU1*sZfL%+:Tq`iiW`],0.pI,<m[k=]5V]OZlWqDO;1d1_7,;`/r+^4DqT(Ot3,sM14S.8/"mZ3lrr`ChY+Je`6`LZs[8S7fanCW8tq8XjSKJ%#LmNA)d1uAk##X$d:Cpl,FQ`4`^mCcHt`lYC<Y.XCIS+Cg(,^AIMN_SSY/J8M)7IM.KYO>5fp/skEFL\&P1]?(--[5OJ'JT<.-W3%j@`g:`hHo<N)kfO/MUm-n&1?b%.[QMfoTE31?imCZhj36.VlH%dY\CXecX^!,p*!k*?ACebcg"Qf;o%1\0-l">*=H0at''3.=AeX%3#$]=fb4teZp/+=0'fYgZj9(Y`re>Zk"KD6B0;J)4..tV+^Er-K]I^jDOp6ZE+UP%AD\9QV2r#bMSJ[^!nkTA!AikBE*4=33(Y0C%Cdl3.,sCG6j.XV<<#S\XW-dnK#"q@3`+3"cd8VqTXPCK4!0p?%.VN1%p>*sG-4H$.-;MpdojSD5Pf1:uQRNtH4_bIM,HlhRA@\+^%Z,;N\/5dkUAecqV7q4P^AohCUg!S*s@TESr*Ad.%+Y`.R#_XKcB?A"!A'ptNZ)6H+?K"BH#mn>R$R7aK;4^2d3DI"";)`M>6#b5>%%1LP?Q;FKs^e'j!mPq9#kKk'>PiPs,+k]l)+d<.*?e/=54P0]5KHQj@C5fDo#Ab`3b]7MAV(u#0H3>;L-WuR7U9FW^b]*3YU7[%\%_R-W%Vtm)@a9PN];eY=c'/&TqUCJkjP3#r"Gc/s-^bc4c[>@<dLfAL$!\d3+"ct(rQ\pQT_\O*F#14i?JJ[83fVLc,D>AL7$C9N5%o>M\K6Z,O%S^WT*C`;iP!WiT"GUW`i9+9=dKEp<[p5dp:-jMmI8+u:4^ZgG)7UIE*[Rk=pW[7%[dkafl'fL37I/NdP^7t/h_dOAJ%&Z7u*3.Mqo1`7rkj-YBla:WL@&/`*m"d=-ba\k(.le)f*2S0bhmk%ouq+h)61SC>7Ii9=!f^8[a^rrGThXr^H@NVR_F<s2<m>!Aa%:*aKVc]YPXdoV.s5e'2WB"RK#iV.!Y%DP0c3r[oY:Gnb7i@#h"U:+?rd^AF)4*t&(_M]-?V)JLscGf0;Vs'Hii0IH!m@B29X+%WG%"V*P;5.`fE;'C%hghKe:2l#HWQr3\'R`NbL_/AsrZgO_1Q6%29#Mc"8V79,9UGsuNUI*Aq5,INL+:(UMlN).gh!4^8eu'J0D/8Kl%)"451NPDS2-O-D:+Y.XDM&-IM)GW;@5o*[D6.=8$e+V$XNW3>.#PV5/p4!AZfBm6hR`.-]OB-:;RBCu?2J[`PnXMU_E"fEnHbA>Z%'/Xu@DYN\_H7U_YM=0L!id//W8QLP14g)TC9Nr;]+\m5#\%_!e[p-O.TpV2$.!YRV[C/lYgf=UTqU'q7Esli%dEH41:IRl6CZ]X4%1HRO>3lAkB#2*;0[UYum>cBP7k0?9!-E,EW)A5-sO0e308Jl?m(`(gTCsq<_(5_FB=br-[0_p%oNKXLs9TJPm_W*oIdWAYN/MN;>%#>)q+AM5qg#YJ.UbiT2EO(i&ZC]!Wg;Aern!dR"o6]0'di`k($TWa:F$qF<T2?eS&\g1Ef0B=AYMKWC)-h:p\;blU/2$oe;A"$r,%0oYBDVdqdhR`&VsPB2mC7V5Eo6f:(iNJg!SXR<iCe?,0ePcAgu8lA*HUC?FoUn;@e$#W![OtGsI9`q>%,*4-\`oQ\+Zm1-g'F6q:%6(t3]OV7`PSu^n>N;eRQ88!:oBI`fIq1^sIT86jK/1H82geOg[Lf")oT!*&$b>5$P=AFU:GI"3ZCd9:5FUKkZ>$sn"JWK8U*.$""%0=&):VRH"!/DTUW:'M2t@oeZc>/Z*W'\u>$7Wc/dUa]=WVEju.;0*l7+ZX&gieCm-R)R(r$5,BlZ8`MTCu%[g6VK9&2+%gO?J-Pi%i?cbAdB'a-q6CoPO^'H5C+(=FN,HT[94Vp[;U(P#ljI80-athhqoDks1D-B[Xr]H5#\G%2EOAni!6rnRZtY/5AS?AOHB^ZZR=(C@%=pfHoIQO&?f+nS9@;?O_>>oKQ[^KdkP6T=[b9h(C;W0OQDGp5k3nQdjfdYUC][M^$DK:`+ap+a-/2Tl>b.9U$fJSk?/A!G`G54t#%.3"hhr(VahWJ7_Q2dtuEekjg2fOT!1)B5;1]`tQfHfC^?gJqI/YH_9]Hj6[;XF"!ak/`\A<m5q\\iNs/Q6SGX3>;G[$.t/Chsj^5%,]I%R^]ZKaoXLmY<=CrLM3U$bN#WrY90J<QnOC5/jN%Mh)\%n<38h?W3NgNEMi`1A_SgeQH_BPL$Eg%Ql`O1W>_c2),f_[@3uc[%%8`lKifhuCt1[?mGgR+ef=b;WCdBhjIW&TmG,#]9I<LdkTddtO@+AIGgON2&j?j?H_kn#1#T)e+$$*A__mKD+cJ.A+RROY=_6Dath%Hp+RIZ?[.8A+4L?$sc4L:%9Z\.<0N!m=C2E8_Lm.E@KIU19R5:W'Hr.U)_FB*=Hec@o8BS/2SI]W`GeN>k@3"`knNu>oYY3liF:5%"mQYPIG1uD/]_l7R/&_M%Z(i@_pQ7Q:V_8\+p'.2mAM`]&0W$"#+uL<Po[ObSt_\+#>$'q$Q%,US&,K9R.h>alWIs>5iE,co&(h]%eL]Gc$@>]n@!SK^N%Kt@+1dH1f%PY_!u>);lI@Co8*0($FWCZ59q^dV7@R0+G\o]%2-t?kql0,YHpfd&BH$!<U4]-9CjMP<3Nh5*%STUQ`TgT!i<82th_XSgC4t>*c)g"=p95Ek5aXKdHZ9aLo1TOBuOBf!E!9,3A<EW!Na_A^)/C<<5BSqf21SO7,1)q`B*NS4,(0ik*%W(0i*T%JA9nP9Oq]J``<@(7s!\R^7r!>5sCBsqiXRT#CX#&%S(9:G-Wj:,EATCoQCPtVBqV3h9BM2/olepiZqKYG;9.Vh&%1c)"o%bXLOLX<AgZ&R-5jkTtLY$V'EjQ.sdj$T"!n<h=hKY/'7X(mRgWbCI/8FbR2*PWN`83fEEMer1QZSji;[c2$aW?ME2XnCZs'eV_d'%9(UOq;X-Vl;d`[0&\r'gR$DrSb(+j%PN4;pjr&kE<N3d@A]m-[_<br[bjs=J(c;Q=FEZ0_/a]JTYettp=)>9:%:5M>?tR4E&KgsV%248&g[/ks_Nn^#c%A-\pGFtnM>VW+eHAicu<fGud`1.ZS0LjgP`d*OuggT+U4+]3B6mehe22iEG`E3@GN1!9W`\Q[F:9hhVG*Ol+%%*!6_,#oQ$%+&H7@hKXIPHPg-K4QcH>@O;7<K"NtHJE:?iOC1lcSIB4!-`HXHHq'3%@$jgj>E"74hPjYX0S*IX$i_Qb5a,\1Z67b%EN@Vl<kL4'^9i7+B+;B@ADDDSLBTO&NTUrjJ&:Ht8e3qcb-kGhntQ:F2MYmGEcu?11"jTT,Zk:fdLM*a9In4Uq_pUEV=/u#[iJR^%1Sq2B7_0qcZYV0u8USGWD_&&'SYi/$4TbR(iDf!]Ei+.iG3!K%:6Xpm:$XOlD"kY=U1uVm.b>C/:@Fo?7+4cs12ERtF'27(?6c_W%4KB$:@+?]Gmq5M">.%."ki&&I:/aUN(k&U<RYBMgh[Wc4q[.1D2/O?+/,`\ImnHOF32u#Ej>@Lg?<X!=_1B;6X^2-.d[fcV"h)_M%:`1&NeMsQG+CI(%.^fm.7i+82,&iRRoOSMY+O/M8.O`$;E@JRI=@5\/!J-*@G)^)H-?T*09j\0lN)*YYG)]\*[6R+<4]k_eeLJL7%f+%C\T$hA5-+ZBcAIg"^p.D]WS*9LXY[6E_GEqf3Rt4Xd7h;[o"Mo@7^&NU$itHSTpI^[Wm+dKIojHa9=K<L8>5>)`J`4""=SOZ1%5br2Wi*tCX7\9a<a>nrSYutA69mg'9&N'k*b041o&f++he=]eT?l!F/SHW*2R-5*rd(?ogYJm\N@lVmfQRA0+Sr\0$6C\T5;U#Jp%]*t][?l,q[&O"@r^F_LAdT^ZjAZ2_m8uM=6$*<D(Xi#E6SK^LE-1\+:>Wo<kB,3U5'%0r`k<kUXn7C*:l>""u5ZC;n'LsI<dV8KR%<TuHpktO6hpB:^42*#g?Zt9eq?nd*mj)[?n3ClJ1`(eLXqc'1;hKG%C,Y6YA<J"Q&TdT?i+_RgTP$[[1[n1QV)UC%)SQ=\!^-F"r%RMlC1X42j3o]D)dl`i,(8Ca*8>)n:q"MWgmPL[9E&)s2Uln4S?;/^?f$Z<!5Nu0DMAOg[UHm?B",E@*"5H_`#^0r('Np:'mjnO8E%HOEu6ADK;7.fY3_l_34'LJF?7:h`Ue``Uq,5>s`+Gt]D"j6ZD7ao]62$[>EeX?aIJ+>q=F<efmAEhUQOJgOsGi&3(4o2;N$bMrbu%@Rch)lfi4sRe8A.W;^/JoTldR<ud=@>uIE2cA:C,6s^Dr_..lc5f08*U>1+/1a^=ISTs]YDuR]MrhL3Xa7>,k)YmL:(UQ3EnKg;b%]N"/j6r(BU1EX/%(#W-@WJW!&gnpeb,g<>`F1n.FW"fW&hPZpVWi+"U1q<?m;Oq&&WC3D?lK4c<MYo[#($K3gPg8cM[dYQ/Ab!h-%1oHh'qVri:4TPt4]&tb=B"oBPm=!5_9'e'>TLO)iM$U@p5Vr:q*]o0C+8%N'c(+:0hI;-h!I*O;"Z)cUO)lH<Ea],mO\)?3a=esh%>b(JOO"om)>G)mjVkS/OO&smIM)=M:+b52JDG6-DC5bQVZR@f[qZ[>48Rdi[9[RRS\b6\4*;':b^m9W.Hp(GA!X=uk<MupA-3J5l%ciHs['(cH>a6jZg/^9s?P8<WrA0E0X<e2_ceMeq,:irDN'/Vt=+t(a1-Kim$$q);'TH!58/;tB$a5rnYYoY`F.Lf_-H#'B7,9nO5%X<+Dh-k^Eti(KHkPbkq%pT1#YF!\gQ-k\.;hG;l/"TmdFIk)o[SZM6W-R]V!q'>.q<C)c:\8b[I7Sk@h/k`FQ$AsKf=fdu?-k[Sk%.0c+N'FFSWNH9rL89B6UEYK*"Lb5;].jttq;H0u`"U.s]9ib(5N-(.f:gdpYdOIo,8J%pf"U-)8G4&L!J]K%S`!Qi@l^0_!Omq!/%hOJ-\"bJ2ZfEqrgb(crH.$+WY&'G<;Uml>)TO>nL]q>?NiHD>;,q)Y0GmB<@'FBhu9Nfj!=AYeMl,?@t:a!8IhBdat@4&g\HU.ZI%Z@110$IHSI[NZJhRJ!(k1FiWi74N1,-q;q-'fnW83p#0e:lMP<s/hpoE(P@ERL"dMZEge`."IJ]825]?Q(V$S#ms@meseh&TKjXU%e^b*8_uOMg<_so8:LgJXJq-iN=$_CFfd5;S"Ti6Q2F2n`FM&S<B*:XQ<K/e>VZa_^cO(#t_9<>@$46pZ-?LI\#d\i:P7!1eifd#:%Jc`cOB%R7*k`o\JTKk:%Z=98q+GsS.ecZ/?Q>1sp.$+jk_cf?gaSFk;-Rb/??<BLUnlQ][&JU(^Xm3hmU--e*:YF8SDGR'Zg^\EY%`MD_>_=LWp6V"s>S`NQ9MZla"0=U7r.G#9)aXsc9Gi".hmL:(Im\JBMW)U%i9*O2T.E#jG\*h8(A=ahdYJ/epnc#IP:L85?U^s%1%K@eA>"]H`5hGc2"76iDOe._PgD@&,Wd-_`FH9acZ$b.%P#7(]6Xc6Fg/[]Dr_.ch`"%j*2Jee(C"K]5X9k+hY?eKWsJ6["3KIL]A%:hr3[c0K5*h8li2UT2`*Z,!K@Dc^=Rm4L5"jPXHRc_[1/hb;l,=_#b-;/+28l?kFr2PB\-.p.@@:;D2'WG/H)ZYVZL5d%R*U6Y,M%TXCAck4LXPj>^R11eNd.2H8@^AXX/iLQ]7U9pB*Oc)\rVE!pEMZKa(s[9?t/r!i/?$=!nl2HH/pm?h$/FqCNe)m615"?!Bl0d`h%%OfKX)6^9f:V?nQ?-;N%s7:=:aW07aT[0CYFfr4e2ConIT-[u5GZN=4F[Z/f`?oqtdM]II"gP0KY4[I?YD2bUC%=YTneS0DAZ79kd%R9>!n65E'l[WT'9,dX!Alh`>2C:l]4e^b_mjO"&o7Di!lb9#FrLhGQ5@;4o?'46<rme&KJ20lCT<dM$]@st9p]p]C2%hC.4M.O+m%HQ_US6*IQ!i&##I5]ok-mTs=sAgFfA!^%Jl1:@f;#V!Plr<@R98I(b>GPij0OE9n*XSW=%d\9rgQdJp!cLadsFI,bfRV\ICaLJ>Y%OBNEa4naaXB'.dMJ/I+BY;bAb-gsO&BeC+'Re3n13M]],lG]=iGg=%)>c<\VSm;5N^e#c01fU"`c!G*qnULqf`JaD"Y7=)Oe/jPp%>Kf]L^=:e9&6KY,11&IG"?IrBcS:MKg,#ADe[I.rm=#/dO`LB2]$(7H9k:,AFp@_F(037H0Ic><.7_4V2(Y1XS^>'5-LJQ-D"6;^%i1s76<6kP-.hu;T"&CcV!;A7um1sdRZ#l8?3[h4%!p1EUd]t+dHHR;_$?ZQd>(E=?^at(6;[CU)SU%Ej)JCIkXZ6Es>_)ua+i%+)%^$4#O\Mq[V,)DU_pU,u<CO5"$:a)r<GGjZD/03)QMMm%GQ&n\9@nlQgK=m`Lo'(N*`Jj!I/JR'1l:II_Q:P&B$UlT'N5D2nDmRnF%?OP+da#h$1N*a11>YZ_:4'GCN`iI>Z:`6p2?$]4rdn+AUHJ92%B4QKAhTN(r/9j?gPCP:9bI8dK7Y+g\`!8U$AZ'k!KW,^bE(-41%QRq-E*)8pM*RjY4_dg"[]I8.O?UW`d8$H)K)f8F*BZ%8Rd;ZLF\LGi0oOCf41S[$(-gaqD]&ELAHDYmL06#od0%grge"n#1Z.DAU%UL814bXEH!]]6kc5MRi1i[@Wu?D6T-(g<5qL%S?)0rhc2).o7:k,8'ijQ-Z3@<)t\VFgTfK#&.2gd5@L0HO<8#ug%+pQM/cIL>G[%G2Pqe&>KdaPArZ\&,X[:56Yd*NXl4^dZV43nBtJM39SZJ\JAk)JA.Qk=1q>.&*(2Z.YXYS$AqR.GXkhYbhCa<GPc"0/q(/no%<4(%%BRZS0klLbSf8d:%DNO#<+$.tb(Tnom&]@bA$(=`$]D>tULM$4`LbglgG1H2SG=]HSV%-,H@[M_[:B#GQ=nW-9Cc<u'uR;&jpj0t%coN`2S"/T%9L1tcX!J-=3P/7A'eep]ZXr[*e4Fsd%g`a2G87jfHBXhe9S-J*G&a.3/TA^Ca>I9jDEf5o@!hKt>Xr`7+Wm?hNnX+C%E,GVU2jo'rAS8X!KWO#;eU%DH<6HI8)S"#S_<0ST0,kX%+OTeGC?o;u!Gen<d*##A_+Aj[3n5bbqQ`GQr/?10$osRJ(9lu,^H?6"%%%(6]k9<@N5ZDrLB]:dr])p`9S1uZ+==SU,?2%W(J<Hn]P7^VHW@f@Y;!=cTC=\#J`)iY^60dL/2hfM6PgcYYDc(qarU3MJs3J"M%dj)!pFCP1r[f3b^N^7Rlk_\hYLZ//%%YV4V5hH'd[KGIp7LtCFSc4C9OsGk>YP\nL(0"e^M/oc.9QWOmeRmetE"Yrno06WCP2tPb%"2]sB!*XJZ-4W*[U>@<@p.`mNDW\Xu%>[Mgcd'$Bk1H=WmfR_uN\,,)#J(;kX*m?\!Y&8F%r%P8AZJT-'han2$'9$M?25R][!GDm%ofpe<L/,@GjXs()Y5AfY=n+^QQ<2Ei1s$6S_)D<\8UXaK#ME/j$_MUr!<n6opB*dZWM&drWas\:5AJ%!s(CcUQ>B-1/&<kus);:T%7ZHYoIWpk;-Sg$p9N&=KVJ9fj)]PQ7ac]cNas*`c7>cRZ)o,X-a,Z^5+ceT<RA<FphZs`'^VGDSKcKN=!!4tgI]NJl,H<_`=YJ*&%TmIn)c=+/W*Lkaia-@\O#k'nf>MJX*jKRfP.'M!C92uc2DmXg/It1aS"X;]PJI/$c8QXCpV-)rmnI!ei5g;Plkc<mfW%_Hfa*h03%5n%4JLTf$(l&Aa!dCfp^f]De5BGG/Ya.;_l(%u2tJt""'R5Isg"i6(`-lKaK7T]e_$\A]_E)N]C_916"MUkq_D:4+KJmqKO9rhM'%&moib[?$/:%,lgui3sZUXp40DR#KB6,Ff;Kh?MZ.?64$aT7<Z=S8O;5)8ji8Vde+ULhl.$^O()27/#`6dKf#>:j5P1(qr!^_B.7f%OEd[#'GPp..B]o9N)_%)]:_dQg(IS1d]*I(BSXQ,9<(;e?8T0S(o`Ah/./BSfe$#\lb7i]lXN/7(eucB9lD(mK`atC-Maogb`<ug%0-jRbo/l$L=J]-'H*fYAhC,]sWhhm5#"PDolLktWi6a,*KQMl\/XUV6k4X,,A/#]o&ZP#7FF7lg"+(')@;/d=4:(o@KT_QfguKf"%UrHGZf!0_Do-ZMGg0LeG&`*L!Qg/,bj:0OBS'\ib1$<9tVbei7:'>E9aL2R8-A1`WQ*U,nL4<!i>\)YE:$Tfu<3WiC[5O_AZ(kAI%#+WLWiM\bmb<fHqIjY_E\,hK9PKSZrE(UhYi-'[I\@q9;qODje>.t9-_jCcZDT6C?Ibei]`#spf_d=O>\e:VqZ>dg"$WK$`%Ui^l%Xbp:pI00XG#N4_0#)'i)<%@Pe$^=p&I9\=1BQ#sAqI[DBc;m7tF89[X#,C#1Nr&;>m#UK?Bn*cGA3>$h4:lG6OH4A`qsN=*j.SDC%pQ,5BH;iD)N5QZEp?JE3%ul<_KQu4qGO`bu`u^WRibG1F7in(RibJ,J+);L:]2to.a'P>4fW4U/$mcFs3[Xh:T?qf=S$B\_@u(kY%mi4^dZ"%IKO7b[Ye"]k`+A+i/=)#N#r207Y]h72?'&#0l5F9abc.Vs`=F>l:q8W5pmN\:+&7:$`1S:D>DU@g6<aOg?-$>-g<gnJa%r-$XQ@FbKEr;@ZO4rCT<`fF\CDm<n58Fn8_D7:7*.pO0c@B.YjDS:@J!a\RtcHO"\22Be:f8.%\lp5`"<nS81LIkVBQp35YD514g%W$_4,m;9o+$!;skB/ZH:_+"qcXV%>k,m*rGgk0&i*$\=:1"jJHVe@?Ch16Ar(AnZj.)j5WmZahj5!_EGAD[k1TmK&_GBjjjBEt-%%EbmaG<$LbB_c]#Jf7nXOj6lFKEcPIU1_G_uXRbGb_4F#h;)7T*+F9dLNr>r)"8M+/jE5+U'NJTDG4^o(U3<%>n'[\Mq8Ib_qB%Zg%POuY<Pp`BW/.YQWgHr^A6F^I3r"W\s62Z*BO6$NrYB[;ccZ-'4!#>#66fZ5GZCPU:h$Xbn2Bc@WQ:NCA>\C6`3(Ria@Wu$+,*up]%EAthm0GHBUj_?2]i]Hc),9!u%eJ<)q[^\f/R`ddA6eLdPVS:oDGEZgSK00pADB.Cj]cfRFK`:bId3HQegI#_*W[UpI<)Y1Li\L4g%`i"-3emn6l.(\^C(<^Ai^KX1VamMoi;2A!pd+4W*ipU:n`K.O?SUq5PB!E!te;/GspP_hVD(d7cG9RV?7m$0B6C;8ES(%AF4=>R3%$^I9\hX-aZU$f-\:dF^`Lrl?Eb&H+l^#G]B?!`qSS-$]+KU&*@Degl21[!RSZO-@^kp1GD,`/gkr;]4rlBn'&4]!6R\SW<cERq;6%q;'BY<TkAa[iN0>Sb=F>*,768F7*OrLO!fHDCi!/IBlOA@TkK:;Sp?.ffH?A7OKpmW"k&.fNZPpP0^S)7!-Sb*HsJMc"?Jd41@pd%LW^@'2bS1;hT]YRc7SX#ZVNs$fs8dm9^^!SqM"EYq*ek1Wt]L*#p6d/7Dh<[D"MQnKK[(%gp$]P_X/klb3Q.BEu)gp6TOZL7Y*L`%m5+1>RMFm,E<DBgKp;/</"M?BXkKRbT1N!#G;\=iZrkN9?FTj,ZJ>NtBPmIdijRt:#hnUA)Re%pmW[B%UCa&V+BEEnQYa)@L[HY*%(d@,[&&]j5kFA(;=<.%]otA)U*kEDjYBT!^n<qt)0os:$_e6Y+\bC)+3;dF[r:\q\$LoQNoZeHOO#MdH+((qnqG(-b8JX`&QRjC[%W^`)UVd[3$JH,W7a,0uAkRKus5Lf+47<[d2<4e<NZtUT=bob!SOdCY6RD8nVhQYcTN7']q,oq`,HPWgq;dK8i_mD/i#hFDY5BA"t%8#gVg!!`j(3\72U\XchcTdkc_5ZV]LT&@8[8W"K$#tgEFIESLd7[0euqEgiGk4"LIKD!5$4O"]4KeVR,@f:HR+%`[rA`\9DS:oPf%4b-%4.sjR@b<WhTl"L#<#=Z0@J)AXpr4%2S9]ISt=NCAf=4WJ@:J89C(=?84iCs&/%2g73^R/:(EF.CY"sC@XYP:Rg:*!suj#Sh7%c_*4/g\mpq3-3uEjUYG2_mT*U3d\4\+0OH*oC'r'H9\+,'E@;Zro`rnq(*WRRt&ZBA,WAcBu0Xf(-R+09*TWEmnABn`.%:D)XUMO%C;)G*Q^<QBrQjB8.oOu#i.CY#miOc?$Zl)A57q1%GrF9D+_\I6(TXMh\s3J/l-,E0G!Z%R-Up_X1N*kK%sgTjS)[[[R.eZ*V9i`B%l&i7o!LnF']K]<b+;2e2*f3[RN3R^s/<:JV":"Ad0f[Ok=7gr+)(:fCIs7[O:S$C(C'K+dq7XrLr*F?QWV(`r1%-Bc=hVt%RFRWA%I<o!4`N49n4jh7FOAGAV;+H?o&/+pgZeb@0`,@7C-@LSKfi`kq)a<AYc(.8cmtgd$NE5O#nSS7tMO(HX=C;ZXil^pl!ud(Q!6SfV%bk<IC(h<&;XGc$3o1n:lDs-krH"BrJHd+()-k%rkitohE,W4[.nUAZ$NL\%=n$U`sk`Yf0<jlWe@o[r2G^;*U"JSR%2FA<-X1nXC%;D&fc:WL\'<GU8gaaFi!PLDgNh:P)u*I+m^SF(aCi$hc'7FJCIHH$rbdQJ[.=TQZ`l5Al)b4>`@p&UtR(;pmu/#Wt3*FR4)_%bC'%=9M471"-Of'e9pe)<,'>P(bb'mQM4d$,!flWl.!4nN^-*36^UWNs%6:_l*k9^mf$?l8q^;G^c`IGu2d,-9g$R(NNTu.NAN4M/L1N%Y\cUdRk36s"/-Ec0K_L!bNB0g>l2"9\[,Tc#"uR_B$>>H1V*'F#Z$KOnC]]+)!;PHcksl2><oS+[]M0plN%4$*BlK:Jp0(*qQ?5X%.aA2*Y%c>X?t1E9&n.cTD$#K;eV_C=3GG8Q^%J.EOA1RV)CA[0CX#k&'6^%AMD8h5YRNoE0k3ninEC9gLD@16Wg)GpCBr3BiJ$p@%(@"A=V&6:mh;ZN%&0i;F4$,EX7G(0qm6hg.]h^g@AnS>P(@/"oaVsW0FYUBs/Ze<^&2";I5g;:i#9imV+=phhNY7C[2out_HIs[j%i2.eQ1$l$HEk$o1_`]T&>??Ir0@qV+--iO;[`;jINDEB$qRua]Yb'SnSb,7s"uJ/Od)n]dqo-rgHRU4s3;L6$FJms\"a?s;8,.og%.P.c-f<!>shk=7d:'+N"jC-MqKZq:iJ\)ui+$Og"B!:cr*?1Ukc$F78a7?cPDEY^>,6Y^N2'i$g+)$)8SY/`AmMrq_nHd?F7-==Q%:VO/ul@.A#RlbDb/2l%aV9\9ORaIGckVlpCBi!F?er!a8i\qV@-GDIC9*-+1[0PTpp"\uM3?bN>iS02#ZSagPqBeU1C_9:1JL;r:%D_\cn^_%\MZV?TAGFfFnPI\).+YKu]-Ak7L6o@]/n*2KZYgT$i&pAQ[cgcj&82K#WN!@dh7[D<ln`Z=0G?1P+$c(i-d52NV`'TbU%e#T5PohCr<@l(g1d&VuXWQ"HSin#RLptbi[EFB=]CRKtiLD(QdVn9UB'VN_=s+k#DR>!b[pt?/Im-E](//\?%5W,)9To-m\"YYS2%%5CNl!DfM%DXM@08qkBU4(mW.=><Q<OUOp^7:uEonc[od>HA">VShmR)'D<R9!)dX_t8&L9&Y@L96q?Vn#S+r/VMCgbAEqn:Ko8#%121oR6HpZD[*g$"Q@7^0SNI>pZJEGL#H_2**F0LdOUL!al*MaL;NS8$E8AE[0UfqN22V<2+9=\jB_&!,_Zt5<D#"0gJ0)u_N!SqV%jb?STB*PoSLrC%`-,iN7J@9e/7I0FH2hQiTir<l*!]B&*d5pl%;$U!E(EdgOELl"DJV3r\1-j!3f[ae0YraA'21]Xk(H8FHAB&0\%h$X(H1H9[An2#\i=q9,Vd@HU28nGT(dSUSogRPI93?>[aR0$\Z,]d\)4JlL?9PO46HQ'o@RV&br1@_Na>jI)`'hV"#/.i4Q580&H%7,6$Bp@;4SeM19_q'.C31N!Mc5NAui[Li6Q8+S_,8gjZn`R^r=fSoM%$%sMf-J:4@gU1u-B3&n"#4^919(#6`n-mL[m4a]>V2,n-%R8$4q%gC?[s8?dV`m&D\VQb#U.J*"`\J:^aGk<^2QZBQDqh>X7o%J&%e'g3FZU>J3MEO_2FGLVU.J?<F0jed`T=ej_3(7FBW#%lb%jKZlm5UA:sW"K4iog[qLWJPqPCQT=Md24^<$_b[l`HS^f"'^p_bF(IF>8]LiPXqZMo9s8>QR%DgBiCEMo?(tJ/'A$\SDgVP"HH47%TQuEi9l;fn;sP-)5aWYW;<7u$i@'W6OX-s;G>sZd2(9o2pWG0?.lLN.b"OQ^7&gs=i`HGss#f7W>KdMdW%n[_ZQ>M[`@iM'*P<!>%Uf_Ih/FX>:V7#<uAsEET4ZNW,D<D60SSGQ/%/-N3@o^d-J=WMIcWcsh[l2UNb1r8qceX4M+mI5$[nJ:Y/@2QSY68ONo7HG#Rl51B%J<o[]i[h0Kg58,6l8e,XJLtZ""Hg.:',1H4U4u;nXqrBZUq`0`%d.4OG%T\t141K&Yk(sT:kY6%^5bOF8i+aS\X*8gJsuPsq_%RB%-t$1.-q?);G`Z8Sb>!Run-W:6Q`TC*RaA]:.+^Ydq-#_.$:^`@bd/pWh:ZV"MPNgKl#]7))C:qE0+kkJ[b1[);]7KQ$FB:KgWftO%o(amm%89<7f3su@R:*MW#6jC>Uk471PAN*$`c<+.6^(=X;@L9'-\\NtLfLJj9uGruDp,t*Ca=(gfBo0k=q`sD=8Y0<\fM)o&V?/9%flhn39(W$$YO!7\36L;$GRDUP2u[neV't\+fa>>g!Ql\//3oq!CqM/kB0oSCPSN+HO!]Bu'"$V33jN[M;GTR*QfSOp,)FGYS-?lH%/ho(lR280&H&GhpgT[>uPeag\8O1SrK/T.9I'&"LQBnYL/.,J!.c_'%G:?Ric4m?sEY8F8S4ccB(<eGZRKjkPDA>cm)&rY8XqlU*%&@!Ml5:^@H=-p35:]Y<haFn8k%!)iO(3:4Z&9i==`"`X-_5"a;*2jA*j)j%t::g^kI;u#S`k\nGV<.*E'i]sRHKj6%"bVP(Jn&)>%R19nD^c2Z$LOuV2b)T3I16L02d9pqV$&:eo/nVYG_`(.qH!B>;;Sne37aZr:!a^HhMCuDA`;JhY^[Gbr=Ee=64[Y_Pf+Yh96Ln.f%/6lHu+&4)"[nd4)N>87#94b#iLX<t`5b\qg_/BSFTZ*k+D!4ci@3lJ'=I7.L#=?%oaQ,,Vh$8iU%j$4s("1Lc2CP$&0Hru/b9357%7g1m$(tGs$.EnZPG<k-D+dcb70&D9bNoqH+NAm<_m*:Z.,r\MB%'S;L*anM@0+<hH19$pUDST$ET_Ohc(q3B'lj"!c_7:[1-Fnp*%fT%Y+AI+cg0:Rq'L'djEd2XQ:ZiQDJhh6cq*#>PTUK^d?8j"c_?(_F.eB0h@8.lB7I\!#>h$OO,8LZ"\TiqI]>4r+!i*%af:pEIG%-gP?%iJ&@T=shsZ.J(,(AFs2F6Jq,I@X<cd<A&l\`SF]*S"jIoQr?]kRM*K9T4[1'A&"&HUNLeV2OYh0NXO&0_6[9_B6^[L(([!=%;KrSH8?u2Q.KH$=9Lc!op]6K`C8DH6%q!Sjm::56lbcu[Mf*^%d6=X\II(:W:?IL/5Pr,nRNYXr']P*Rn5[+&?#RHre."bkA\T]^%3DNH,aBPb3c:jp\1-,85TQS-h.Q_SX8g11A`n`TC1:Fb2Gq8+7bAnSO!RP_,\"!tf5TPe/kq9m21X_D6JOn%eKA.K)3M`BQiF5jQ%&Ujf<CEbqnh]V[1D6!+FVFoh0!q5bMC"_am0t]XNq/:qKp$-^!g'SL9YK<jNH1SJ4!>suGYDeWX"D<C><LgC+3d3j^',,#e$-0'6%C[p?#k^K[!gq%Xo,/(N",,SDjfT_eW,JOWd$(6LXrV#7%1ORR!Rlk"6ZL8"0q<9,I>8;cWSDkaY#N&S5q@e<"2]uuBia)*$'T/l^%KPEU<pMFlEll]d+i<hn`X9ihFjfu(9\,lj8MJ[14JFUtN$L1K5gZ^jFKVNOJBIITP]fq\)0$qeV*G@br;7=$Q6e#Y!!@tPaD`\nJ%$Z7<b]PRndL.SASbl*M"dq_K;,4-&uN1M>S:GXP%/W`Kmo%%o;\&760_(U0BHU$K`\)D7qTdXfS6#Q^9$bfA](';krE^(ZsA\uC6%5VuuC[oGIKl%[5B&"aqI8UsNL-1ZA('*::igE1j]f17FbC;et05BbC3r@1g\G'fF'<p+d89Y?_Od$a5)"*''bOB2p_mZ90u%o^8n%he;g:96"\2%IdT&:"qT(ia"+)OM=S:q&&m.k]2*=gaD<WCYb1?$d56%Au)!`d]r35-G80.EOr1UhB$mqRcj8/erD:5]RB;3$kC*#%r]_H,]!";k#DrPt-CX_6'M]A[[bB0u6@Ld'EM]^(U[fb]a_G#@)J[-DD6XrV&f%3ucGL=J)Ct1=;2d9)c!RoJA&T-==+H[,#uSuP%m=ms\d<Y'pT/)C/p*YofFJ6=S$5RMngZ]9pR.a.]:N'1.2'_*MKT!j8nHsnm@a\De9&KiCV;AD.G$7Yb]$]g3%DE]eHJpm/[Y]I[%o"gKq$DE7'UtjXr?A9PtDJS3bP5M:<@9k^]1feN%P$c"_'6:NL<WbJiYfOb==9f9uL@B+j)BZqS[.MW.+_Dr^oC.T/S_:l@c5D'E%19I8fUZ)q$TFU/-:@)/FD2'_%"[mV)18I<sVI95)/%?=c`_pgpp[[(kA[<qk.dYE)UWmu!q$Yf5'fcO4P&7j,.L<.?61iGn"g,;0%Oh8-5D%_#.VNs+nn@dc1iC@Mb#0L^HJXs(;fKUW4!_nd;JM(jF__/L;?3WO>i9_C>Rf`_UN#7XdRgXj9Z?0nrV\;<ApW20DgauC0%dY+Id7]6V#"?*Vj3!curmWuDG@1o%`@k)#Y2BTX>0[[,!P34;eDbIqiOA/f&)ca?FFXM0;P0[CW%j575&!/Y.g?R>[&i3j1CdC,Q%YR9*c<a<=oX\]9AI3*,DRf[fQ-ue%?7r@#6i'Z6]FY3(DXG&KmLPqJkZaTd>iH:9/fT+6R<.HE2!=hEko:&MEJ8Sf<.eJY3ASPcT%L!Qsp64[UVfA];4neqM913+Tk4dJqQ.i([a4]iH"6saoi7dG\-l_CpM)04Wm.>Ns"P'cVN3#=tphb[hAoZl&R'HNLmBL6a(#g"T/%<q^RW@PIU/9Z66hqukuK.efcmWu%gCBXtp3Y?h*)?5"KI2_f.$R_1PKaFIc"NY2J[,>ou*cfCNt36C9ibfGscC-.r^hI1'rI^lYZ%TX`rC[?.eKDjB;u2o5[[F#cA^QD9-2g(;H4*D(ZKUMl9uQr3'p=iee#9PpJRO4#!s.Nl:JiRu^aRXSYl_MqKIPn@MSE-2uelEZAV%f(H9!P#B[Bdtk_AWV*u]=&*om^(#jtJ],j!*N6#XX@d,$>NaL:#K7&b"EZ+0F)@9&#"ip]LGBjcRl&&p*>h]6Q^b`s=j$4a<q6>h%Z!6WH!0C/@g\AI;4#Wo%6-t?fc5c!EYqH3ZC?\%IG>Y:W'`b!TF*9B($l<B(NV(0X*H:K,-mnb!Sb$'(^X!H]+%kNlL-neA+L?'.%`qn$hhV99o`WF)9TM3k-oOE^dB_,r*FtSgVpa'\6fNnR$6=($GJ?"n;#<kO1U"lF7dE+Bl>PBql/>PB[2FR)RZs>LqCS`g\!gfZ[%#`QKN3%I4'XTZm`ihG8I7!Oe<.f#*bl^\#o1-Oc?+F&<IL(*^A)3nE"j,$)NjkLj)2fZ:l\*Smc1tA/GADn"CDpT!OO6@Ls.>ZXX%9N)B3g%&?LmI[&F4gb/a-DGfI^I8=eBGhaZVqkMX+tY+gh*aC3r#>uKM1')MZ7#]d=;7F.r@h:V'd/gWjk#C7AiE\W?*GhILp]@H%?C4scPM]c-5m96s7)>!6`784O<[JPlLTsPYJ'7e!;98^GAO!k_*Ih#g0;YDK*)GrN!M['N`?nY*,JBE--)!U@)k^Pjn3l<E6?ocR%l`mS$l8YqT^\XVT/(2KJe,.#:AFbf'm"$S.2]\"9gl!`^'aP/MD:@Z-5qK,oc9Jq14`[Ih".q_X/eSn__i2+\-NBKanO%SJD-;[h%^MUd*'u7XRFRh6+gf?h^_>E:MN.i\e+?ZBaJmUVeZ0cTQ*3ndi'BWGX/kWsLd$"LgrtD+%m@!_8/gf4!_^Sg.SRpag&I.\"!h4p(%'BuHu0b`!0MNr>t.U\YO@^0\7c%If*m]B1T7EO3-!.Ms;TWXJkL^tR16Ge'*fUB0'-@@%4,3F>oJ*ALX%Nm?KpoKa8S(jcaX`56i%[n"BGS2a]JM\l+I:56#B\jZY$b3mjbn\ur*`l3n0C9[qZ=o>9QTpAP+[k%2k2]pdl:`G:#_!-VB=pP\]bl<h;"/(t)/e]:O8F1ld%TM=(?`n^h\mbRL"]BujE5&/kU;tj*gMW12?HUO\gTT6XZJN@P3R[Cc1FrsO(nWOUMC;^O9-VD<"Rq`-80Hn<9g4P$kb(\q'9)P2&%R;SYLKFN(F]6U=D+:GafXCuop=?KqknmYf_pgakgm$r"4hp9HIYKBn^cmHrqFt\%]+]B#LJ$@;\I5Zt>Md<q0H/2VK'88%"`OLpn%;ddK)5K@%qal$)ClOqf%kQ44qQ=hOeS'c$\oU$+_nhMA`?mZ5X:P;X+@i#*#`4q;=9hu"mA3q+IY/Jbq#eA+/S"/C[qZ5%Q7ma:B%61TAHB\s*P25+361:Ds:de]5='F%k)EH!;*YS*>L,*_*7.S(Fj!^"+G8?>lkYW`%=r*XK%b)5Y)d$bNYKGT6<%n_`3(jKa!&6)j\%XQ;E["e<tB?CiP)BFGaCq;jct-B#_t"K*Lr"psVL!-A`s#5EZ>m80=5E#jRb#BV"AOaIS0bAH90&aFnaO.'[=<%E5@j@jdU&qjd'%T_PrAUIB;<mHtSZg40]rIE!GL_L5UU+>JuIU-u'GDf`YOR`T'@J.6jm\F25]H;:f&#A`0-6)C[+NN3a*en\$<jJti5E@act"mUii%oCOuS3(cn)m0[H*\)KC"0sE_D^fc>^c+'>8DsE=@'dDA-CYYC?Yo%\UA]e%$YX[:GBCfre)CG,"G.btPbF;WJ,TTk"!h,-IW.W_B%,rAlc(PMgGAhk'fa&L_5%i:g!-9Y*fp;d`;+-0nrU=O0V6$X,PrJ6S@Pop`=^d\f,<DP,<#))^/=]lq<`%,'ILZ1D6ddpu)cS;8N%K,qnq'-@k1%l)=Ap^nc<\,+)eq@#Kr@^:9uG\p((9<UI(;E@-hmJo0P'_.8:R0j.6)X/i!Yu7\NSm0C,6UB!k#GORi\:!"^eY_NF%)a0#'mRU(*IM25[<D:$W1D^QT+Z1h@bCg-^kU'C6Y;Q9;?[tgcN<?Iq=1B#6lWeiW8h0$g5`?r1_jl:)H;-RA?Xq.5Lb"^"3H=2p%F_]eC6);.'^IG/%_j"7!BI%)EoG:uW_im4m]_MD,8YktLr"GCIEHhujbnu!&Tn$*>/jJ%b[G/NjI<Jsp+DsT;L[Q5h(E_DnQ2j+*%qPW[5i`>4km<-!lfK1(-F*RqJS1lD/nsi0+oa9.J&5uS\8RIimTR7!0_Gi[%Z;qeiFj`'E,^I7d*mF+bMhtoGS7tE7]X:0E`-'_W%a!Y/nmPCTjF*S5c%ub@TegT'!Dq#PaQ7pZ5_tPSHUV%6%W>+<1+q'5=HMAN^\E0,<D/>=Z?J6;MO:W%;fnS\bXl)5W*b1%3[d,G[%mtP*0A_5I6\-6Od*s(Mk`]L`T4kqJ39Dr;?<(Bj%;5\+]BR.su6j-DWT&W%ZVh"Q9k_^a3JH@hKkOHN3l."2BpY(W6;7&<rFboh@%A+7Ra2]L@S,R@*0]Z1fpU=j+^rX\-M6/qjumdY5]jn:T\B"$q6n.Dgt97Qd1.Sj%>#MD@L+U6.t4V&jC"8#Nb*'&\+%cASLpNP$^%"9m%_Od=1bhW6p1a"GmoH]l+s7sb1M@mM3^1jbZa%$4(Y,04ZuZKUG?Z#IXR6D"4^I*UR4NKLhY@57P'=l@A`*cD5aW=`>\q_@(P%,/gn[[`j'Z`"glnad`DID]PEKpYK1:Yas7n'@[l%G_MLpoYW@sAlNAT7Q[]Aqt";DcYg&^`F*-(pT!%T_hVMET-4D'd+m<KY"H,+%-K#*/aJX7b1:DuuF"c+_7gP#;FuB-7!HM,+Md*q$,L,eV8:Xaf"F!rD&d%eN)jiuI6sPR;V(9#9G"r_[#EHIE"(&p,LuBFD6#'TZ%A@I)5f5>k=rn'h2B^!`p9^H)E,KZ.RgT<($.).E?C``"H%REdKhA.Ak7qRdhTj1d]Z,LI5Jmr[\"McsMC`JsGZNZNPepibF3grKi%D&@hS\=@14hZ2"QM.edh_C\FgGAHm@RYEG_BWN<''p&o8s+hqBHIRRsjYB7W=0agG/&Y,H9GT=8&@dk`Au,;!#pn+b_-p]YG.q0l%>Ju4Q.LHiiq5JD%)i+iGr#b>hOb\4Lnd%A4)a-G53@d?\lX1R#,YZfEfQNq?a-:4jj3q]DC?g$MYhYA>8W=eN)^Cs1*9>d3e;u_@%0H,q$*KBYTlGMaH\7nfB%?Nq;3]OEhYbs`i1::/W>22*@8mImR=/2'::Rs7sXbt<l,:.?g&f3[FgcS\,YZFWnb0Hd/bAA=G5)HhK%$KZG!ku\lkHP%gV:tnpbfE<c\^8c/EaE't)ct5g4&7N73juIcoar[NPW3>SO(n?'?7Q2LV<ZQ@5L@E8dKJu9>J'V;!LOnFjI0[>[%3=h5?:jG9*X8uSIQ_E5`966jF:g`oH`(UP:Ef'9^:R?CM^dSF?)i#g4.NFs9N[):f].ko@Moi;0=c`I4OI=36UJ`u*C,kH'c-3:8%3%Orha^CGFOI`6d7M:4tEa=PA(0NV2o0lE0"%_=RB<.fr^e.`\`nO&X+rsFcCW61kB<a4-$lSJVf04&`N*N_^a4mSM90+*U:]kD*%bgoSom\f6g8iB=q\-N0MMVFRq#WO"'$Kmu_72BGDW?3+Vb5C7W>"fDQdb2e2,XRihH2>&eC*46_:eAm%U#\s?BQ'JkX"e+!B1<QU%73Kh8^LH\-[ssQdMUUkt^X&$Y%8oJT>6t\uoj+P#3+lj";5/CCOgBc&3enMVb*MYi!E:Y@qi,"i_WFN1]JQ\ZTHG5s$qEfFc].>3%!f`X141qnRC^=`e.SuA+%66]\1+j>5;77c`FTHuN!hd^qO!'KE9deo32MYk-jm`*Q\Th]#UR@g\``It3,CBlbR2Bf\@M0&cq(!`&%Da*.SV35>($Q(F%WnA5p+S<->N;g_D;/c'EG6G,1ShYM>0_J#=f>5Bj"UOVl>d_EgM#,cI69@6fR?\R)IHF3Mnd`$7?gu>F?0)2%%?;+OaR=_6^Hf2Hf]M*!CdK(b&&?k#kh%:Z1G!j1h_Hk^FPk8X-*.u.m,Fe)[DiY8t'!`PQ&BZr;Dh,6sURbe8bp0q1djUF"2)/'_%=il>:55MFr1$]P5%SSM%j`!(_"<#[61]duOn@XqEU^il8>U3j53\9TYA2(PJGsB+u[%'6M0uYQ9F4[J[^n6J,>-F^-7kIV#C)'.,%aDJ]ql/Y.VRh4_8m"ULFA6Y<30FKS=Fu.JN%Ba)O929XDI(*!OY]9%&iamFIe^=;-oKX*I&iS/5F+(B9*/E:J-:2X9$[hkRB69\D%UWMd[RZM*e%\9!ZVDG24"aEK<AHgQ-F5QDX:M9N7HKWDP.,mQ(T)(09#["_FR;Fq.qCnVl8+c%>V/kVWms0_d5^?&cYflf6`[612%+6;D0W_X.B+.gY!=u/C)3r$AjabdTr%I6/RY<jo"r!'W+3]Jmd;pBjcnsliJ(t.<uGco.Qpdm3oL;?n)&8;o[E?aUDYiln<.%tpu%GRZZ%.[6L@/(1sO$h>*V2.sBnSKMcqi)7MH^#^c.@:Ok7DAa#sSn(f(H6-q1)[%u9)]E7+fu'l\!>HcsVs=rR^JCpXf8sbl_EPV6%cMR-$#6sIj/gk!DbH&`ZLM*64C9i-r$5rNT2b;d:Nkr)RH%,Z/G,r%jQ1]11QIf:'KZuRHT^Z#aZJ^kg`cM%ldccIAB-_52%(/tp%WHdRp]W,`X3'"rhbB]iCDP53DYMdT*q@NKp%pWM_n9)*s?%Kgf,_9YM^`ss;a;\!d5&1Ocjm7B</D2a?P=.P'h6f"MklV>'Q,WQ@%eS4KC?>j!Z1C+6UXYWCY@>S_]Xmj;;oVn%fGTEUO8A2eO,SI?.01A?6HTk*D8lB=M<[g+-<!6kn5,,<I!VEG;E7Do^(Y&E$TDZ^0%\E)c,_7]:nB\SIco,6Oc#YNePpUXcX7]a&]o4-V&<n312`*pAqZi8sA38@G6*:u63j/Q?Z3.N),G6KW'ZVGZ,1@K<JC=o$u+'dUF%);7[(]2)&@)pMou@/bi!*@Z>/JjFlPTs_)63[S)QUD):(pNZD4HNp.ic5\A[d[dG?HH8L-^#uLLKTG@T!(I^n?qX;@oIU%1A.@(H%s#iO5f!@.?a.5S9'P&!)T!q;c;??(>mTqo90,R^M<EQ<b_E;X-Nlu7QXG8q]l*6nK4'ehK&G-<L21Lp<1i/aSK#sgDPn9.b2Fl#6%4sXj3ST1;2[LJ\"4e(QgK,5W;m[<W<EQ_43UR9/V+->&AZW'l<^7f>kE]1$9LsXq1;'D[><l1[<"@V@rf;eA2=,>gSe11s%1l5WG%]j':#h1%`F8?VWEgU-bnm'^!E`r3,d0<8DP<c2<43[/[g/CoutFqqnFWIp3/dY)AThp`WrfO>Q6e&mkaB1,ji:`+_!q7UFId7mNP%m&LI(C;&rKPP=E%bpl5BgS*[s=oipE)M#_+Tsm%Lq1YX2)H_!@/?ru+GW5aElo-)Y/]gO0hWPm3#+$L3I\aHE=Etkcj8Hks?r/2t%%Ta-uafp0`78U*1QjJl[Y7;N+\l>',agfSJ3A6qks&";E&mPdQ`4@6`4,Zpq]^EClZ,aiJT^mhbBuSlrR"5OMMj&_K-lt%qP,&ul%nXla&4&*FjdCDH$V%9kcm[%R+]L%"4J]$Od-Beldr"J$5>;>Rmf//tpa,a^pl?6.O#if"LL8sC9-Z4IH<=M2a26$XV_&_a>QQJHn%oR9mO6?@ebNo]G%6W_,iSIAtS5jD)Lhe"jG9!Nb&a8IjC#&.Bui>f[ETcE4@O-T4+<Lrufm"Y'P)F?@9.(^iANWgpk92Fd065F6u%djVFcN'O[sPG5,Xg&ZLD4%j"_hiuZH'Z*LeB^nAg3d&kHNbVrX@qIsX(8R02]h`RtGQ$Re4Jb]UZL:qp%"s(OGW#BYg&F$3hMWJg%+o]KmX2;8HO&`nuER+#LktH#F2Uf7ocsP,I!<D&+hd-0%8*T9uEbA:-Cb(3cpgf.Z69^<!ItEj(D$AqFcXJZaHk'3rWM^hr[1ZUq%-B8ml6QA]^b'8<Pl.u>l11l@k3M!1/=bbQ:b[l)FXqLa+q6@rKVn*H*h!XS&UJ:E+ptTX2cKsX!]N4#`bcZEop^Q*ZjB5a"rH<8\%c8B/p)9sPP.Y*9*2jJm-iH_ZAb58r!l^9-*('hLC*qul<L0/KQDqB=PcT4#@D\(FnHCmEI<V-Oh]?BrNh`[!3>SoZn2i2(4DeHlA%T@i6)\$+]NFR.#7lD'Q#Ie&Vs7^i6P?_'&HTH#,4l]\6.a1N__+<!*,@^`T')&d[F<j17$go+0-"]HsBbO(LH/YU(G9C`do0"VjX%:($aK]UjnQ>,UEm>4`oac7/Qd<Yb\s?oA>'XC9(,,a&>;;!)sC#6?<L)3j5Xb`+%F[jCoIQ&irQ[T-!Y''k9S^r\ui85StrTdQV^%M0/Ldp*795h#CY!kDCPQ=:B)277UXL(DDQjQ6u"dSti7HD&&3DaIDUMm'>kC))<AsZm+!C;mJT08?,?/N@(Bm5c;a%EdjL,ir7Dp%']`IM=f/As>Aten7!Ka4rFmkl!.#hPCD2&MA8,`%LrV7O?<P<AG*NSK?$SR"a+HU*-rg'+qk$(e@KGA''J<sEDYCqf7P^m/E3kBI%J&>1.B!9./#i[s*'0=?>XrVQ/e_ug9B;5Zs2]cWoM2o!Y-0b'[hffGE(qiWfl+`<kVDO$$P3QktFK<\7>l[i-I>bP[oOdE`$R.8^%FB6Pb9T6P_H.W?k4Kr>/IlLUbjpRL"oerJWULHIT54E^L:L+;Qf2PAJ2^Gk&DYr\Wqe>g'ZmG.<&f0SX>(&W[qgLSR5Ae-,$4d.1%dt,i`rH-u(%,Xjc=,)B6?KH#qmBN:dP^HE2gSPfs!o3?k>B9RSmCl<fI6VkZ]Jd7Em/-#l+eL$Wr1h$9+6ha1s*(!H>5iE1O6<X?%0$@S`1Lt4qI[^!/FSUAhIs<!pOSM_-XEWPt>p^FjfM=$ke*d*IoDQ&kIQCt''j$^gVo"A5rH.ja>%0_h\Z?*/^7W!h4![IOqrn2c%o7N\M=8>*.&5E.KqL893-uOg`cQ<M!JD$]>-]S)3DB%cIT8%U0IbK06*O25[hbX-`T+9aS>O892pJ]nS\CC3?]7gWji[3o='M/WM%p/@=N_tVW?rR;31b3$hE'K,3@FMmk%k5/l_rR=>&b33k1]o3a#dm):1*d8FIAHqUI^P@]g1.suoWn4SQkD`YL=8Pua>OnTQ^503<%&'Br3Z0bbCPjUV"GPZJSPh'?<!nPJAGGc^VK.M<]a\$.1P=\kEj\BIde0aojqn!/Rc+\'S^,Gh.'f'@LirCU5P:!OdKNg6YCf*g-%7m2Ofr"Hbjrc%Ha<^N%6o>]M6I1F-u.:"ermTG>a*;9f+-$+5T!'o0oP]lKGh#P*tQQ+iAp28!QUUEjB<=p=U\Lchjkfq4C6tk)*%_SEobieCc8<Qk#Bp?!7E1()!)cM0O8O@1\ll8%<J8mh#hIXV;er"!]3j4N?c$GiR&N^V$IZYO6tW2h+e1PD3JjKR4t$8N8N1`00d%35Z#Z>0G&c!0>`i]^$B/b`+S55r!KE%lfD%Mcn2W<HR$26/9TLFk-HWUBIl(.0ASX(<nhei>45rYXl-$iF6Z,P>Kg4_8@Cm&i!![%9Wq,FQ:!Q*_B92VLLGY6#7&W:LG$L'*1>FHj6I)$PKf_NgtgRDZ/iE<OtfquH:_B`_VH[T--'D^5kb[\\ZHoMEW@E7`X!(P8jMnP%hR%(-U'NC@[,O/R7%nDT2?TBONq4MA9r(%'5QUp/TrY8?)YB:%q6>0U">N?T33SB?"7)J8qmqWjSVELh+jlmJ=,;IF87`G-!+u<D%EOR5(1%+hGQ#E/GiKuB/WjZ!sLR7V_](6Re4#+s:h&)4d$",(Q(5)[(BdlV:Sg\tp#L#Rr.fdJf4:Bp7inp@':PnN`Q!"nDBlag*%KA_Q<==nOP9<e;Y@RJ_&(`>TUSnUbIUB[a6JbUEojMWSS/MW)X2<*/_F]Oid`j.'N<3,\3P?"^=PH[UEQ"lM:eW^B^OQAe=CN$:D%.1001j*.b$OQ5/NEd$_LPnug<b>[.ifI^=l-<*?m$@iO'e\SqgegTuiQHrYEcMK-Eneg<*2^)jSZqQaY#Kf=nG>YRMI[-T]bWkcp%m?,bJdeINqfF)P[6drM_gGXTHWHDs..UjG=20bE=[]:*<,]8sW`_@ag*470QmEW[(IQ-N$Cbp@KZlg'"4Uo0\(+<_<?K]eYSOA2M%WYm;[EKD==K\lmf5#UIg\0XMJY7FZ3e0o?*31)(h[6qS/Ol0/?f4Z<"`q0=l,sp\m?!iP/S=&?_7EpVuk[42FA-L.J5I(#LAe:6V%L9sU/'?\IWf5cFg<$kdT$!B)-k=4qJ(1QIu3KPPY#,JIIlD_1rP4@YI?JIl%@B]Foa\F1g*\]GQrB\/[='@J=(s41:qlAUg]pRr>%M;iEReA.1_Og1BFeW4K]MNRZe@S%#JZ/t5+\9ePH9f#Gr?M$_`+&XQlQJW"tPjCP#?RT)"`T^/b(sOF:p57DL$X<;3]nhi$R:C&q%)K:#1Wq3RbqF+Ygk6pO?aF$EFC=Dq"3h_/j[_@T;3I9F!.R0?]X=X`l1b[Z@SFQJOGT>gr!X?^>B2.%&22^C!?=6,dj1#+Uq('D)%-5ht>3uo;WhC,i2!.8nNAh[Dmbr#UaaF4bl;5%A"=Ej@J;YU:sb!9t((8,)"m,9J5]@jl0-c6P2L[C<M%XolE9j;p/\;a?>e,$J1%21`o7-9E4oq4oPO=6Z3q`s!MIb_^ZiCk`cBOUY1qke6'8EX4?Z^;8\+]=3he!IRgh%nB/Ph&E/O\Tp+6DA8e8'-cd:k!+]8M&od]%L'UY?me!=:`EK]OJG:sXpom7A^_c;>H->.t/kJs@ETpINkT-5@^pC6d#8`CJ5Y51MG2"50/.j5pYu%k\Ej(!F6#6)#N*o[,E0n\1%MEh*Cs4f2[WN!1G-h(6"njYdF[6-TZEps'-h*&]#8tI%j"j:4g/MTf,(B[pEQ5QioNL:%j`iRsR=645`l2!`[YVUqf_)!oWfETeO%qmHlI3XQTMX[Iu%iel=c32dY?C(WA(NI<W5G"u\,Oes[IgjRLbc:"\NWd,\SVb=d,]g5uKOt"\n]:k4s.!dC/C<!n7d,W2:`gJ"O%.W2&r%lWQfW"DNp%M9f<1Hip[D[,)Om!2[Jc&F?FTP"jFi<IQTP1NckG:S,HC(,8g(#.#ibuVg7gi@^p!aP4?F;fpu?DdS`\FQdY%GTo#NZ&,^'mor$Qj]N]3eVdT'?Cg!3`Et4i"rNnOV@X[NRo:aX/%K5JAJ%>J6-[OHC8IT*Vf(eQD(EA'VDSPd:5r^8Zh#RhHecXG%6^GDpX_9SYWsHi.H[1=<`aeA=)EODWVDK_[5V/[98O">!<:C`ab30C,m>20*pDk@7(pW?7eCuD$X\S$0j6Cj)P>E\_*kh\7cslY)%Y_X4Q<jU056a6s.PFR?:M:H\7F'cGXErs\I48T0PRtrgqRh5tVKrIiEcQsAhd4LKJRG3*Bc@4o5(iHqI??$Rgoi[E*3&:lIAJM!m%[5Y2-7`.3Tn*.L*#;?TqI_GilMrq?U(7$).[W[FqKc+Fa%MTi?qm2/A>FT1YQk170HnG@"0`;orCuoG:[M_TYKZGXk298MR3\u"1%Ag2cGfKArX$-Y5'Y#'>e#@*_!#Iegm69YqsgjuI5cgT0JgqCAQ/FG"VL2;7iZ)@J'Vu3\JYkm.!WW1$\C$:\?7T.W^O1*WW8HUTV%Y@4,:BpMCtcbd3U89Z<#&3"`mJs0T%&\gI=?7?:sKHQ_mlfBHddU^%Bb#<Uq8W_/:M<3S-763Oq<-)1ip$)Qm6L)7+pW9<uGa6g`%itOc?FdW;jP_H$dNFdI>3]OkeDu4RO3Tq.hYm#Qp^!1$\LDanT"@QP._=.^?A[#V21/_f)]?V\Z_esiKN+@?[?uAQn1V)[cH;,QV%+g;k@U0sA;I4"]X8KqlOY(.Qmca\KBB52N^<)cU><<8fT2"*)09F)Vj]%E7Meeje=<Po$N,@,k?:h]:bienOi9?5EPdp,sVZI0?4%EIPT9`!%>[A=XDA#$cj,VtSV`*df^mO7N&E9e?0A_]&js,elq^GN`B1olRr0a2*l8:]qp4@r!ZTe:;sQet0@pjHa/Kb*ATc7cS6O%:Z'*G].Dl$SB`u?%<4It)b%p=P.UlGcIN$OeAnqD8TY]Z]6!j9ClBD3_[cEZ:Nq[#d?V*23c!b06?<g(hga83E5(+gi+7(F"S+=`%Lq$rBT'mU^P!*dNaeq+#VF*So/&d2G8BC*>_SM*LC#K.hF!%A8Hbh1Wggp?pJ,SWnKUVSkKZFCi]?=K";&sKOoV[]5I%R?YCVmst%nbX@MfhN5TIt_KhU?"St(4%!R(Umh"._oOB[j,`l";umb)Nd1fXq843HCThH/Q.2ROsXkM1(R:_#-k5fLf8R9b"KjYaA1oi\!063%dkDmSTSVH?$i8cqdpd<d01te+$[[6pAi/6u#uG0!(P@ADp)n2a0k`U;AmpQY@:PC*D[B395TYL;1fYaDK4.P@'qtr=qln`$E"iMP%c]k.\7Z%M;I?l1[_$6St?YQ[AQ<_,FDH52E8p2+J?.96-$&@[%G[6YSPF0@0):HO)$mHI:*krln7+qG4Z'*:.<`e+q&?2AdbVQ$a%bnCUaj]LKo'0mcl:nL8D=->`pR=doJLfs8NFp'V!YRKOh4)F&KOFF,Q%Ud,)<jMg%^Fs(paB\[8\"UH"V;JY4e&+@*Qp$/b"rn=C%E"nA]6]SYrl'K@nQ.'EN/Qip1QCAG'&CJ(80]FXA9IkhFMW,2CJP"VU'JXi",fhiF>XLMBio<0!OKgcBL9R<&.%I5C`&ZuLf(cM7%U_EG4@*0,CSYuD/Uc/OJ(4SA)ku!]9-=l?t&K73o#b-/k1N.20VCAWaKpgaMXVWckYJ'_d]14a7=?F3CG1l)XG[eO!7u%A`b5hN<%nWRm8WGJ-F[UcjOp'iSe4.rRj0>90pQ94*!bSFm$[O?VU4YT8:#Jtg!D.*g1cs20H_WX:'q9^_RG[4f0'O_ooJK_gbQMuRh.Jc.2%eSacf].#<u/():dTn8"dWc&l`kJstJTD7hIEX!k^pf\0PM^`m2+G&/uQLqhuVAMt6X7J-C5isr=%Z^l4$],6hK.gtrqc`?@3(;rb%8N7L2HnQtYgm]Q:ZBKFY;Jh_(c:rsWMXJD&ZEq>qm\F'K%2Y*cPJ,oM[*ZE"b<`%F=cG17V\b/&`:^fG\"c%:FP`+)!c:>FPjE2k%JtbZ`dVP1#+TrTf2Mf]f'_$JTWn;u8oZ:Ef;BCMn7=0;tXb54S7aW>1@V8nep<$[P-WmZ"*^p5`&>%!Ch`[p4%PN`!M\&!DH1Uh*%mZqEBX?)$#,CUEbNFB'0of@o?O@pnGlA0'g5X4>&ldb$`MmFSb'cU6!jDH.j0YiY?8OVc5HQ>.::6H>0kGa=GI2$2V3g`;A2DI_\%f1S>M+(Cl'g,jMEF$,j"ol(1ga+jn2Yu!/&*]%/A@MG+m9r8#77U9d3;CL`9:-@+BaW;]@+V*FLC5WYC@^/Ik.;3TS'ncBG;_Qe-%MOjL/r)l8&SIiaeTn)`k$`,hA87#cMX4FnVM>9R#?.k&(qIDTF&SHRfPWY_([4qo=6@sVZF@c-lDnY'S_5\_sm;=M$>LfVbl9'nW%1&`C<0`/F_pV$8lqK5!gi>VpUe1td&5'5[,gXIu#BidM?b;1=VVo9kknkHrS-,SDWN)t).)NHQrC+Mq\:_<k>'t$p?fP<l[(T/=O%Lft,6pD.i%bATL0/XqAQ]X1^Nitn;qfVR.Ea/7>4lm%mA]9C-he4\$/1B;#,`fWtMYf2dqOW04#U?80ulQtF_OC>C*4q7Tu&J(qF%dg$aAjfq[/oDHSe9>[Qf]TCY&;hBKuM`Q1_d;icNYin<u#9OX@4Ram;`&$9f9CNn=I2>fcMT`!_5]Fppn*+7XKlrK'8a8D]@O;`j%Y",0noB!koo::IMS?3$Y]M+[Fklmg\MR8),;%S#$S>Vs5k;&)eO>L^$N_ekp6Pj/Enrg2dNg=(LmuAR2b>Q/R1Y_Ko2L'S5r9H2k%jV<*<YIAlC8;\QIYL<bl3t^0eMcsD;Mm['@QPnAK[cq0GeIdHhZ)m[sONGaE-q@+bdCkEWUfs-;,0kgZ]M7tbj_XB$"BUJ62A:lo%2'>Uu4=l&c6FO6)Z0MBO=KaPR73n^3?h![7=VZr"c&sO+aF<2DGTKq`![?j'\rptJ%`FsVD:M;Z04#7d</#t>R@!g9fZ#A7e.jDA%-_YpOQZj6[pXFc;dm!Lh#qdWcTU-8H8=YNC^"?1fU85>ZGQ;`r:Q=f!OjbY`Y7TSg3\*bie*nW!>GYdgB^YW%G`07JY(EaWfCs^)%%f8GT\,Bq\gkB/lM9r0p7I?XmWch\R-+VF,GI96`2MIc?Y[$B`%*(n=7g;ttekVI7XXk&rD<Y)U?5$p4Ei#lIJ$!%YI&B^Q0q:^5%l2",_:psJN]j+U+ZPf:F-`tOArsZ1'nu8!OX'-CeOfk/!9$$:*fN.SW;D%H%W7HVY5c[h(T3=io?grEnm],\_X3L%nl9)U9+h*`J%Q)>;TL?`)f9,HDK_+=pp/Q'mZ#d+ZHP.!NmpSQs\i%q_t5Edi<@:VDP\&-0`]JNN1r`b2X2cPaS"]M2!WAC/4M0YpG`WOK!Z-@sF%A<*3"^eG,[(V8hKVQI5fotkT5"M)Ih-i8'1``XMb%XSemA^)]t"B;=Rg#Wk87uThWAM,gJjPC>ZKg5i=LfK*D"l0nm#0%CT;BpUI%[@3#=Wao!CK."Y.m@%$4oA,mAL*fg`&2EW8n$]`QJ=N7m?#@NNlllXDp@qqf_C`n>!E5^I?8"VT@O"KDYIS6@AZsi@V\J5PlY^"6%W0Vb@%Ct%77PhO%\`,i*qeO3%2\Il=Ds?Z"]`7Z3D!p;Rk#(+LiO2JNo2R=ps86!@22:$D%U!f-\UCeaHo!M*bIY:kA]=1[kha!e%E2+fY*_,`h`fg^K\8Z/>cncmn!c"STRBmh/(+*#SXLW(VBdV&fS*:OOopH,J,0kk6>i5;O1A$t?#&ZaIP'E"EWK:B2GL'^"oX`G`%SKGTsM+?hR>fCB)O-Nl9E'e$d/&^qb9[=kt?=$&q*C+8&7"E<qnI"8M69op$Or?q9:qI:]Zf!$F&LsdB-o;*SgZ]`O2l'V4JdE"h%OEXB?0fP>R[GOd2,!NE3B1p5eo8n/;:!\"p@J6F:;YHU/[A0,<8V%]2]SnCu3#A.F_O3%n"qEYS^ZF]oc-+>8AdsE"!YI-(o.*2P%=6@-t;`odnYlaDq4-a(K=r"lg6m)$1ldt2L:FZLkg$_*N.c.hB!u?WQJh+@,D;S52ip$GHXpoo,*ADf0$Z@'Nh3kPD0Sh><*sX_H%HoO/OYfQ4gdrE3LiOZ;48.j<3cCRZ_/>3qJ48LuNO/W+lSGKR>qdS9p[.:uq!B:5E&%tM5pFp`Nl3-Y^B&T;1O"+(E8HmM-WPDE'%c=Wk#3,hm?KF+\LDQB5HFPB_`FnXUS5]U]kOT#+HgI1T$fgl:X>ue5+@YF`,`>06K-u1@%B3++_C_p+]6hVocN^:8?[_m@nJ3npA%D.t\2q]*S"&LW``"im((`0s?i$o)Po,,/R63e$2#D;5k/)nWH7JVd=3mD$85.)ho:KseFP\.u8<;q+n:(2/l>\b<XXO1&0LQ=P3C%J.#_I<>lT+^<sW%8ILn\[mQ&\LregMnUS'`mbH["q((t*enmFX!ph]-bP,9P.0:/[0ol%/Hs3g0e(1lph=8[DN9SL_;p67Wf>+gR%>'nqBqq9A#,.*Mi,&D_ec`Aop"e:cqFl,u2(miZs\N-E!*$tg"/G?7Da'nQO]njIJO*b)5]O(H80C4%[57Da2l'9_LnoX0Bk!@u!%IH,E1XXl@-rI$8j_T;HLn7j]!LYl_t76d.s[8YC*.bY;U"CWP74&(&`&H_1OFRD9)]9fOQK+j4n.S[IP>oMsqYhheN&m(OJa\-9A%qC]3$N@Y6tH.k4*d+2`qD-e&Xo=DC2_DmI\M;`@(8.kH^Zuk`1GhB-)g6s7-L6G_m(,:mff]8#q`.hhfpPK<P2WEi#U==G*0N;6j%:5Y'M<k#JW''hr]Qr*MAao<PQU-R5s\3;PA!K0>E@AP@f&#3AC7(c@n?!@TN"C*m0ZREUT,V13/V6rqf#$&0X3lbJgqR<keafT(^%[Ne@J6^qc[$`J?NALs=t9:7ZP`[bs1Ih/;RRSHr,r!N(S^IQh\qlds58$tZnkX(_Tl[fBM2gdg5oG6#eUL"38&\3u!0%?%2lkn>d%>UE8(P.@Ee=#_Y=qo#,a?i!N-WjQhQ0Al'e_<E;[S%3`80))d=AKN48U(LBL"iq4o\iDS4,/p9g^DPJ!HAP14ef7nno4n29ROa&W%c+MYkU]MpTE92B3H<&[gB/--!b,[JkI&.-'+gSIC)"g(_h*[d[g)t1c-FOts:9CE87,'`COAsi?f+Ei^jFDq:1On'9+M,1F79a^O%TQR#R/AC',ESP0ePoGG=i+KRsNb%QMjuch=p;4rnT[-Kh4IB5Kg2R0$F<$O=R\-Haqh7/;,/KR(,ereAX'g2o+n5^3EYu7p'n@Ef%ib+-1qpdh7=PdL>.&h8<,LW!=;B=]G1'rFe2;@TbHY`@!,Z[-rEM*j#11h>PR(Us1V+CEd3e:=$D+Q1.Jf*_9),,5$e0PS31TM*Y%r.\"T4X^t;-/Gkq=X"'^M6o^KoS=N/It>a5p?>`V/MT^Q$)K*L/Go0W3F6*pR]fF-NUbg)?33%J/ir&klbmnDX4>7hSS#b;(nG!\%V4Q;g]YNg%dXBj><d9qM[l_jG]9e&STmAlb$!O-+MVV-2!6l>=TW>/g31pOsaas?T#n!!1e^OV366_2"<5;(c'8DSN6q;[]QSpBj%&HZ98&":&,*h:q"O+]?f\_DOWM*;&>;>akD'9ng.'QNCTkE5B[1JXdEh8?LGnNgdp]je?rbfMHg/R\R*rY.\Zi!<*j,GDM8#jl$L%6t)1:I2h=m<5^&a[ZfRsj7)$gELh%e&]6XjC$#So8'Rub<KYsAT+D"Vh7Z:6Mu.`p^!Oe_T4b25S,ecJ9mKss`M`.gNSn,3M@hmt%%oSotYFIY^i-_Lt<Knu%i:.GTS596J7&pm%rF'=)e%>Lc]MZbV/A(n_+?GUS\8?"3Z2!@^"5P_<9K3Bm$4#$l6je^/8Y=Zdr#5Qm%;E^pLfWZl+,"+'E%T,0fg'EHN"-r)Ql,]VZ[<02p.1H33Pl,DX;of#?Rh)G3#?noI6j9Y;e#cs71W1E@;85_Y#/F?:.4P^OAZ_/#%VA,)$1ufGf@<P8\d-3AmChUT0?8ArN[?%Q5"1d/,<DhOc932W=+N$qM>1#7u[Otl;PUJ[$Q!MfP31Z@_`*0i+>gb?XP&JWT2"7)7%`$mEkX3m*ucP0k.%?+_8685PY[)@DB+;fk&V(HlBiRFaq[Qk?6Vc,/+jB5S&)Hrth&<GtG!<b62m9)1#8EUlQQ_=JV0o?eOkX@JA%i`H3T/>PA>3&_hQkO1Pr@nPlV-/]'N;4)CD6o9[/DIm^[,jTOPJ5"rk@9C:@OL\/E_B(6mV52fr!ZZ#eZ9Tri8ZM8l=p?/T$@I0j%RA_gV0<2h)lhk54+;A9`0Kb[u<\E;Q_mqj>NE>,E+t)g6ehb*:Xbh?P&ZOZB7qa>L^Pm*t<0GDYf%lW+^f&i]NO/%8_^ZOj.JAbL%aBg=0=4'?X5!F5j$cNgj!TH!_f3M2"VV->0Op0eqoEc[e4iNl`VpsWA9ZC\0_`G8[p?GdQ,'Fo.ofb`jGZ$Be'5,"_kHuEA'CFgL%;1jH8W$rCsh8crN,Y%c.!GO=6fL9G(7N>1"FR#l1gS]U:-oPAE!pUV]#)aS>W2/keQE\qKktCf"chlheiMU8CcL-'I_nr[sI1]R"%$2=i;o#u8foipYaA6fGHJ<i;'2W.7_(nq]gCa$01L'Uii`"7MJP,t2$P4Uod\R>X@"!@N&0WDkoJSOWt%/,KJ)m@.4TLeQ1+bIq,%6-WSjeLMuib<!eCNf>aH*AYMG6\\+GYJZ@gOGgl./>@g]C+]W[;>eYh?oM77!YcMO:\XhEKOdcFQ<!I.hikfiH4Wr,TTbQ3Q71gX%k!i(YFVbDQq^!C,Z]&qp^rQ7ZhD#2i>s"pd/*]Q#NM.5_%4XoP,]G!_JoZ%sM7HL8j9Ta!1<8JB!:oB=UcJ<=R2bj&`*iV1pml81%;LApXc1KAl#dMf(cGn#`Rs8fE%+/j>0G+h:N,F'*Ge_p$3Du9sQ7XD"Z*Q"e9k@97=\a!H6LJVeY(J/l3VgsDgpS/\6?3Qu__7Tc%[uS^7Q+a9(n@kB53BMln#g2;2_)2'rSU:?M5gt'reLIE'B-:]baI.dla:;8Zn<!u>f4pd1a%"ji9q'h+=fE$6!WMc00D-]d\eV01%2/sa^]a)13_^N?ph!]slgF^-<=4MqOm4'8Er&#./:2caE$SGm>`5>BZPJVtkY$2u&/R/=\cn"[N2\"bn*ILM7(Ui!4n$KNDcJ'DH%2Fq*H@b!6Ea,H'Z.lHWMnm2J5_bV4\-ia-Z;cVl!GH"9E+9dEpbRBD@E&8Bk(;;?^M,&T-B\BNbi?$932Hfa2cse9=Ztj-0=ElR=%A,QfjJ\a\?@=q\mdTJ"7CHCX#,!&GhCV$*k9\VZG+su\8R)]?;"_rHom<496O\=&XdqcA?DC5YmPIF1V]?S'-7aUm_`tMJ6FC7G=%4W*V]6LP."c6@(R?ToH<fSl'l)<,5W/;i3?\KHOWW4CgP=Vim\'("`.euuqJH_pH7b?R0_Rrr^QWl=:(h"(`67`C.l`KO<.YI^n<%W9Tu/AaYK.X12=qXuba\#Wj1%eQpI9]7$:dTWWm>h^clEFE$?ml9*sE^(@1hD*b&.%*rstFYG?(nd85K*qaE\Q`sqH#Ckj@JtC:&%]-3tZ'8!2p+,>8eCY,/N+>tLB9%E:8Vaj^\cdqp*a!O:7($Y0qVfL%"XDcp8DK!qF,&A`PmZiZXZA&r(>iYB'U\l0@-)Ugu2Q(hb%#p'^6E[=.fl194#0$$T>H>N>t\fW)8T<(=+^NI"F_qEVs_@0SUjG5%mP[]*`OrO%*;";Us"46)tCm]&hgr=@/XXQ0h_n;&[$[NgR%Z&n`1.Z,0.aPOJQ]Pss82XiC;Q8qtb1H<lr89AZg@@W#3O?Ib7TV?2u-ADSC'^7UH`m;9<_$je/5u)A9@`E?aM;L*"qEYG$=<;<2%eaq'&nQ$uKWfRpI3Tpmfl8b@@>^RtFXGIpg,";bHB4DN^kA7/#-K:f:,n]edgd_IEpCY^0i`FIDJa:`9T-$*u?d<R4j>Us8Pj4;'%__*Mf"NSU'80bj1m)2CX`Ca_4mT/,>3.OGR?Ug`NB]N\6AG;o>"6RTCEtThH.%H!\h\lJu^@,bS85kmC0b9ODE1:j2[eA[gb\;Ok%?Jsh-=EOhD_^D-C9Wu=qh/.LYk0.e$LuBC@/WT_2YoLW'j^!mU)3Vhq49oRQM\h/:aXe7B&HN4fbh%c1bCQ-!0e),NQQEnJ`(f1!%cO^aY*d,Ju:i9]GAe@X.Uf\aMn,rngZ4Mm&>e)6X0ZCL2Ud<j'S*f^G6Qdh3%>+\\]V@Lc^:_MqXeaU%*J<l70)+GhJ#!d#4%SiR%#TTEM`1-!pHf<=2FB*V23+>Q,6[p84akD0^B4jdJ#&Z)FOI*/pDY=>M+K\)g:@B9RaifXcMmtJf"=Lh<8N[LW\L^OhH;be^s/PrW%f-VNHX4YM,6B%uZMG8oV81Df:fN]2"\V;E+1m<Sb?`:cabuHq)R@W.%/4>'!Kf$f9o;#QPE>Z%Qeh(&df2nV,bNZ*@fl6--$*=B$%"+r0eH()%ci\&c+bpI8t#mq<8gr1_hE[5oG02[l_N?nWWmG07+*TUYEoq-n[)K+f8TZ+m[&g4*/G'5^4H9hJ_m'PA\l*'"_J4NV`%NAcp?kj`@^TiQu%IlOgN9]YL'9%bt.?R\J%jA+Sl3_TS#?8WuiF.rb*+e@]SEPGt*_S>HU8g6+O=E`WeEPL/b_6UQ`5>"2mjfnu7%kbJd1D.Z<f=__plJ4j@-a>5!G(Q8n[kfU4F5ff]cfUn]n5XJ7IL(rWY4%J@a8.R'-;2!q%=''=0O?ETAXb]9c/]*-[/lG!+'POtI%*Y-C?m7k/J>h^NRHhIdbI%t>g&Q!l6r>\;GXto"i:Vn4ja^0!VL32qZ&`jCkGJ/=5CjH]l\s\=pp`)_MA"K3*Q16+3Rsc^mJ-A'J%2Hh`YU3IN6Qi<UON*,FL82j_K)g*3&B>kUQf62(:R(kXW^,:M\&$*f="e`]'TWt@i$.WAE1(L)jk&NhN=>&^+:28PijE7"q>f;Fh%+6NKpdhI2Co.WZH`N\'lE$fg!e8:Q"p&LO5(Zo!pj\Bg-nhia-XKhQ9%-/`m3Yu`"iWV-.Uo47n=G0`H=PA@_:I`0XgPE)9phCX<%.\L)jk!]]e'bM?1O9i2Y72ch$k'CGL*_tH++%Y^aAtL:@g$]ZoLHbckQF7$raRYmor4L&Sq\=,6/14Ys#dH&@9AZk-l+G2"BEq:L%62inUVn/2iCc*/"=?Z(n&grjZkK5Us/L4LdbWPF5nW'O?a/&@NWfF"n2kIIIdtMU9ih,8(SV57Ai?bUYeRhR&2/,/m]*2`a9R"qS%PDM3d/Z(>3\nf(.--:P:>TE)^o`]a1,X>oZWF<$V@%9-1eO\H64LEW$\6F?'9Bt0<!4`Yd8.5+b6n<Y%gBJdeX=[0^ag'=T>YHI#%hB7.pEO2d.^B\$j`?J!7V9Ttp5R8=PE']F^@S+gYChg5.I0>]\`Cam,G9D1RgGX_!,GA`2MOY[*f$)N,"n8P[djY/+4[lb$Bk>RP%O[V*D(QY*=rT:<%\u.PKYbIPpPmY*DD(JkRaVd2Z@86<>a3+5>-6D'8<A#Zi",_&P&6Q\b<[&8X^CHRrT9%+e-`nAc3s?oC&Momh%DmIQt?X/4E>FJUPb!u(8"b&eH4b%*@_nNdq(GA8\jg:j-DCQ-G"[CPCa!r5(Gs-GF4X+q!J<!VR0!7,/A%EgQI:4,sXuuW$FqgI]%DQI9Z!k58lkdi"ZT`tk>l"%;ELj)T'!l2,)!m@@Y(-9Zof+r?C.,8'ZG'D]]G)BQ;05h4(alsNY?rGaV$-F!DZ,&7ulBf[h*-8!e%^#$GehR:7Eo,)_B&/cGC&uB"i2#8\h;B840QcHL<53[u\Mn6Nl_i1i=B(93GF(-HmM\U+6[u#?BaDa(`GkU)m9Q<?air(CHPmRE5%lV1,J-:0t(Or)FXiF$t!$7d3_"=@ZIC5GM#^`[pu4tT+Gi+rI;Eepi7WWqCPQ?HdjVt'f3Bfr1jJ7t.&@A5't^6<=:(9+Z6KEA/K%rZ'$6,)25)&sB*[/G*,e.>Vk-P\S'7*+4S=X`W=)%plo50#nY_L4J@hO@1D3a\.o]5ad`%WG,poWIXmGZqA3]'PH8ZRE9pl!Z*YZ%F1dFfj9-*ed$kpuiPOMLaAA&4b*fIsj>lY>[Zlgc*Iso4Y:qW5Q740FC2-duaP,XR]+*DtA[a"i$RZ9hab^Sq@#')SP*_gTiB^s<%H*%4XIHHlLZi8S_\jVJd2ZbG&@eK'I^um:9\'U:>,c'(GN*.6?,ApHHfZ]8[(d:b.iljC;\X%gQq<is!THdO\,Pcqqf^2fl_r_d<%.L<;*YW+I13P(#.24ql)9LnY6iCB*.NkE5G+CbM)OIJs6Rb_DTan&hYGgo)a@O%-p4rf?`"Z9%QL"JUg4NLJg^JYD'bus6l@h<7E%oZkJ#\^TD+r)O`upooT-N[YXif<Ga7i-GDQ=GBn0K#rdje-`m,n(dZ(f<RDQ%_P\E=b)'VfkG^pY/AH5-dO-)0TGt1:3mFqEmf!:%!6JBK,:RnuW+^>J:3*!'\Hff'N]3+/mp70_1pVHbM]D4[,N,p(0qJU:aXF#916A*9%HT5b"7ufB]sXRKna>P8+X0%ihd.1.9[8Nr%Q0$8/G]([S3ZRV<[Se_%:+R[2R,:WJHH'0+e,4(dJ?"pkcm'<@<kUgnAl%'IfO[?r(FF!6pSK=I?:G$nfW1WE+_8\0h9ZQ$+69&$%mQ(P,cP0QO!Yo%^75&FWSeR\U[OI<DQ`bNe#D+7S;UC/j7cA7'SpVrs;.oLb^L"hb^_IHuL<Vpc^RH:I"Td*td6Xl>Yuq@SnO]^*%I`Nk;/At/S.>Z3EjPKN^`2.^)oeT]8+1sA+lBf6C^_)RLg%f%a]#'7mUe'Ui*dG1$-fT4cS?nq#6%chdnO-X(Pu#;?HV%1q1a+X]%mhCFWY7JqnpUQ2*KWQ@G.[(O3B#.&W@rf<%%$62g6El,3&LXiBd^["oA$)3u-(=#eS.pW1_DEXR5-iGXLMV_%rClP&pjANqWn0s'%be^r#'%K8-j"s1#Hr6W2"`HOpQEO6Og03)5+t]e")Lt5!A.lVj]:UKFLQO"h'=PDt>D.e;CJE$?I6l2?]Vq3prnYBFC-kG=T#@P;%6[)2s<2UG0L"W[Y&Afh2c7.Tj;g!je[\,Y7_D@@GmkIh:3&r3h!NMocg7md`kEuVoccfT#f1he3Bhgj!`%3Gd_Sh<P^/PGTgRd<(%Qpl%ee:hHG=Y/'U/A6b[$SP?'S6piD8%,kBn=GM+Y"VB)6&LW)&i[2WcKaDs$)OIsfd>lm8Wi`Qn[SbP;Fhom(m@s43u'H.G#C#a%NgG#;+tQFGNllJl"Y)]siCUlPbg][K$5E]?Y[>MQ;i&s`1h4[-j5ft!(#6iW=ClB.Zu,_hY[V2lak50=h8l-bAURs0QXYt@nS\#m%A8ZDFi$>gZ(=Kbf:BNr1Ac*c4Dtbhq3R<[5BV[K=g&b%s1PSq&FbEE@I1"uj-;dZ:CYeZl3"NfIPG?fm2KD=tm(>[?4_&r7qKY[a%%5/35"H#Y3I)NAdV*+.HQ,rt:Ted^MEg?=c)rU]HV/V)!`t;En9Se!5'.ceZ^mP]M_j/ho:?;t3/J5iO=tT?fhZ3*D9!Ur##DmMA%HC'hYlm45O%-PVgpQO&s<mUdY@HAjHkH$cu3CAah6V-ObBm.,Z\dF)fMXW#1[>LrZg8NE)20GJ(JL,LMMpmaGTTln%0.h6a$/!rY%??-I>G[?.gIiaA88;d#(Lk5W2=Ji%*KI8iO$EK$r2t?H!.`A4B>IXrY,GA-fTNIl%*DHXe!]G!0L:MSkcX+OQC@Wp*(=IHe[7#h(%T3-I7D36+o_U:uVNUoVnIY`Nie\nOT=c<t(D>S>?!O2]NYH%_P0Q$-#T2qfum.+-U&jA_rYKS4eHghG`0Hf'0:mo(cc6F!__TC2c%9e?mm>MFi3^51g"ekON1RI&d$!)XnEgi?;(aA?2t9BcVpVmD%L6"S?5KG72s!_nQYS@tapUG.<gKZ,D,^qm.i`'r_,[YU\8P-4`G%4#%4T'2QsJn/XsP#._GoDb<Za&]kMbg:BBV)_SL,&:D)*+jd1beuik0AS)qTr%&fsBAm=m+;Hsa2aXD)BB_DZ@;5Iui*@u;YoK1Q%RP?k@F&VQdkR50HfF48:n)Xj3.Xo*f;$(PU`+G[oqhH>p!HIc<8E61.?NKfT#A+@Vb-U:loGHoi*K],t(9[!;Cg'<6M<u(l:RUF3%Z7Ygon!Eo-]C"aNT_(`l;4r>72qtpiMl\/b@c%g0AKpVXXCKs!07f,F+B&Q5-Zi:Ur4QDE\Z<!d1W7r2?nljuKtq#/(t"2g%TL4q%e73L0h&d&R(1X>jo)_B4*qdCF`?WXiT[9Q:XAGKG\fXWfkWX.In=Xmp@rQdZAXo9?++`^AR't(<i%rnQ=<"(H[keiXp3`#n!+(\5%#P7dCfI[DHHiCRroXA139ipV=g)3LaF)TkkcV+o[?<2EHKZ[n!D)6@EKUS`\_3>#U9"UL7L/lmM\K.`TftYe:fV0+Cp-:m5>5FuN%c!#r!Ai-t!h6RuU!R!Ieh*NBDkqWrO0<K1b9cSPiiII2V(QJ4R=Fc1GMMCj0R$m-\it<1F6q-\[l_nTA]gr^t[%%,(#'3h\dZs7Y%+:9338LO^&Ea#$AI8&[dH@c2r<3i/dG(P!2VG@GNFPorQ<V#<)3"Y-d7VFhP7oJ-u0dZ9r(TmXE\98-b!mrRrcbka1f>a1S/g,TT%'(:65=<,8i&OH'5i[fX8Q[Uei0jIpI],D5@8Z)Z:m\kA-j2fkY=sM0S2]dUbECb_7m/"N52oApre/5MQ8/E&<Lk/&7T%Q;uq,`6?%,9;$q@@,N@/0)"$.=;kS67Z[o_WhCUiPS50#gkI=JqS,CM3th%N`m2>&:RW7-OYcb#?sU_`$6M:.\[F-E5M556,?jZGLj\4`C]T$%EfhK@3;8Cke$BXt8(%qmipW$/]Y@Q]bnLa&ldq\N)l5E!VuZ(+gYdC2HH\pCkToNT$t0\!Yo3'1mNeJ^5U1VKooZb9`Tc?,pFuk.%o'YTrD4&\dL*UUP=^%-'QZM&o:Zsmah)QTr<gaug.dTh=c@J3;>([rDVd:50dMe?9fd"T_2#B[lq5=99)rh20I<-/5VEd/C??5H?%T8bkF2TDD,kq0ZJ$]NoP10@LtS)G2%<rfq_JD1W9IWO*'3j%s$`K_bA\=d5]nk8NP:*Tffnk$Z`-fS,4ps$@>=OD$c0O=bf&)5dT%bpTr&(5'M-o6Rkrb`-i:g7"Mc4s@:Db:CQ'E$"[H:Z>cb]daW]s7l#,s+A(6s3L_sl+d5Wa+(dOqL<n_Mk>Cmol#?U5CW=V=.as;%KaE8"l+_Z?`C]u[J,J;aT=o^MMtcfrhkg'3^A[Lbs8Lj+mj&:WZ4[*3&%=e&k4TnslR)K,qtC$(^]2(KTCi+!ddeKUB<.07H3qRL%5h*5e?6$r1B5nO4RkXk=nqK,gHuXN(hnPAV`1'1<'pjjV^ROWJh[=c&[ZgXSf&@c6RGr/Bj]hcVXoD!5]&*Hn1j?M"fUOBKIp$Ge%Vm'H^iPcOTm;sJI9Kh+EPI@75l*OQY^+F+Yd),D!=#$l>%p#+S>e6ugrh+,9E,B&*/0YjXg807$4[a48l29`5IXW6!/9"<p&T$n>%#MS7B,QhQlTFPJ=>>"@tZGa2#Er4Oq+hTE%,/4oVHEs%4YOKYA>P2Il5Q&<lYblHI41Z&,f[8>UPi,1[PNoC&orsPMG2(B>oF7hD%9+=,GhpX@OSHMg#:E5<\YQ^mhpq+$_DUX7i`T:Kf5N?L\GWe/4L1Us"FhBt_CAC###X@$[,8/?,r/7#tCqlU6jsf7B<^G/e"ZVT?%W$Q<+-H4<pn"gkmf:4p)3OsE9GB]4%*ejfZ(b_8Z*M<e9nX_qNbTt,DL4!Tn5kT&g'kScoqBVf"Bo<Cj,c%^6D6at=SYaJ,X?t#>%n5uRN=(!2jA]k,Wb&PVWEK$Q.fIV6mQW;6>#m6Q*/Ip!2!7NB''1nLhQ%;hf!Xhun7<<DY"kZVm/'1khci[2hDGQFT'AB8H1g\?*%715Ec;MZ_=G"@+s`._r[USjB$1*MQ_2eP/"6b[2c_Wn\>1-(o%U`bcIJoJ(jE%C.M,GK&_ICLiE6DUt(O0L!549^7A*ISbt&<JnB%Kc8f'"]DMTl7jS@3Fqn$;semN.TmuWO`%SEY,_3o()]A@o@I&WLMhd^J<"EI!\AGdlIZH1bs[.f=j<=`[jP.g$ONT6=jh&pl.6Rq%H,5Bko,B:<(*WI(!1a%[jSDb5HKf$=LFi[:!-X9e3hIEGS*50^3ht.Z&4^2s<G4X\.nHb*U^T7q^ic&E\cg386GEd$:?@G0c/'8A%*^pi#WaEkB:5)"A1Qtn@Xu:m@:V:ufGeEFhLV4O_QKj.OAPn@OlTa`IW3ds&NV8BR;&-=ZdV[qP]fJ_R!GoZuWsH(K/lC@,Qf3.,%ipKq.gN3G&TH[2%GM"WYWl_Gjn#lECnrOf[[6<lfTdp.=?n4F8_qi/jDf$/3h0+#o:l72B.p$mu#m6ucSR8)BNSI5</q^b.DRf@p%-f7/A3I=uhE^\d0><+Clbm6j!42X6%fi\l^AJsXb8Q'Am9TT8K_d_''+e&*.IYUku37P#Xe$0G3G,d]2DVsY9CN"&SOe1'l)6Q^r%Z$m0;(S`@ef?@@e!d\@ITkX>OD-/9s*H.UBDV5elBKs1jC^"-$;UCUs$e(8OG#,=/<^G.A-.U0nFWpK#e`i"-pFIWM^pPKgR3q2P%0BpS#Yfr@lb6liE7]N,n"1tXd:O\()PomLrX2NG4`Pl/ZkR@@LO0t5(a\r+E[^&@MV]!H3$6^:m3dD*p"/m+Kc!rIAInq!-3;s.;%l2#67C,Sr<T&#?5@:60Kr*CKA$LMQYq;@qX$W:?_m,r"-+o^QY?i9Od5Q:5Ss8(El=.fHfMk>FnL\LiG:%SN6`&q)rbP+6tjJspu%qr6Mis557hq=2YOf<>5Dl`Yaa:&je_?elY"QeVPSZVR'2K+0X`46onE4&"A_>ci7Qo)<RaqS>b)jZ;REl2"o[5h;om;1/\\5M+$K%-XO<C5CONmD8P3FX!od?X*XDlk<X%bO?T;5)JURG4B/s:Fraq'hu<V>S?;mS`j?A$=2%"[UL<(rr4uhD^jJn\[ih8c]C\m`U@b\,%dF#CEs#Dl0J0HbeJEPWS[-/X!f:9KOBZU0$&Aj(ni!&2is*47[_1.qHj1EUnPWde`%0HG70nEe/f9!5o6<58aL8HrS1-;IuprJ!t%ceE5[E^AQm&kEii^Gc8Yg_B03&L-9.gAd3n2KJiV$uo;M7E_sV/Wb6gS-fbc,kcDu-u>k(Aa=@[!iC3Bam!pJ0-0hdhu..CEV;CK%EK[pW^MuV!]a-^k_Kbq!LHEQu_-?>1#gAqshm]ZQd8uqlF%$/LF0i0R;YZbWS+P:IB$Vh6O'2&=M"4#o>@$+bcS;^VR5(,I/Mh]l%7^&3@cH1R_E7VG;@Go[5=4tOh:9_/+LVB4mOGj;d7jZ+W-6AFuie4,3%^7fE8gZgRVV]CZ,4;QebGAOu-)%iaX(U6?<q`SG+J_qZ%iF%2F=_TZ,QW9DdKn33HMo#=piSA8!d@Z%5@O4eS:Q*oY9@@pUFcoHaKG&^<n'c-]W-BAD@@unOA,^@=H8`FPc(aViF[rVXX>kq>%4A!K="&fCheOks$UF63h[o(!Na!b@h&Kq`3i]("<H_nf>;<WWs+2N&O*\aS\#W0Ata<j8K@[r.L<qmoN*uG;k.n(l_IL^e5kpbc4%m>d5"THSG>kiI]8YW!X(2+Yj-aokn9ErVk.,q@,,:SjC9iQ\Ae0=,q[^T1e2Gs]&t>@sRHTR]IU]2^Vm2k^ISNFa7*9Q<$fkeXXL%df`r2KG\"Z/Wai*30UEK`NaR1]j-I!,NNuOR1LS0986*_jB,'<7>R=F0>dDe]LHn=U;oeGN;#j@Q:,(4K7M?e,`$rTW0[c7j0(''%g`(1PPR"CfY/3We*X@u;IXND]]9=j:+-nFrk/G_cFmkW5'tZ=RA`]&tB]>%jJbk,p\s3V]k4HJ,I)N-ll?aeRQ2BZM;?;n%ZWO(k%W@F:6ai`&K)j$G^S@u4kVT4%PjAp,*'H^ZE8g2,_)$#0oYjKWOVADNX>_*,$X(B#70Snnm>H,do>"gnf7pErgR.0;Kn!\RUaQP\,%S^b>e6B_8JTIPj.1PMVFY2D42/mcg,f9p?q<'(g9^'bZRPr1#U_D,_X4fG]K8Do:F9V8glf0HV[\I/kdA=J:$<JX8E1'FDXRWPo/%_o`s(O2<jPZ8DMB?L%(@>O("ti!dd9-6hUR6h@Ug1"E^#=bT?FVmaQ$m+WGZh.->Ef;k<=%LsnW>^81:<da@1pdPe*%otu*YeJ^D%n##'uP9BZX7+l>R/iDN\_m[hM+<;(g(Zl*31bN,?]_knfZ[%b]9J$IJp%@<T0OZP];F)KlV,aFPOAkKL$B@O"18jH+T$+DClDKt_%RTo'Q^j$'10F*+]@cPmkAHnK?RN=W@/8c%H5:3?ER&?A"E>+MLFF#5g=N7LorZ3>9#lA>p229dr,4%GE,1fK79KoaU(<ab<3T6K5%#O.]-hKII!M$@t0g"-knL#n.p7=n[t?3>gWP/l=SOdVVV*r[k8l2E';AP0d\_?[&c<ldD_Cr_]tHF1l5ZK!!G<.."d2n!:pL3+q!%-Krop&MYJt67PIUSn#Bn&agg[`T<gmp>t*L9crYJqtUd!qXCWD*!))$B'sH`@ZcFZC;MZN'OtUe06UMN,D)F*m@+9q],4G&hX813%ch6eF?7*KI:7/Z8oe5djRYVKPll4DXoQCkDn8;0h9:sdV:GI[$MQ%Z?.RM"uH?NWH5R:B&\f5=-Re,r_YqlS_>ItcYM>?An:M\.S%g^1X;p77dHDkIgZaVihLD^QJ><3lFm-`SpiRj9Zps'nIG,[k,,g*M7aH8:Qi=*(r:W)n<'4GEse@]Di0Ju!,r##8V;$LYc,LX$#>%olCYl$#>Uhfm8b\Q_O/N)8=-&*1f^'hE(<B/CZ0G?t&@i*Z!bTXO$s=<(R3UK^U2(Q2a,pMoe<?_IO'ILu)jI$T9@)_h3K<34,-D%2na0.YN@J`?d=\%e]a#OST!%.!SkWL=^*1)A[ac&^,.KU;K@On-\3b2?<WJ'&>OH@O"6)!CJ@e=Z[1<8fW2>*GF42l<is$P!h#c7%T>POS.]bJ3,fsXpbXtKZeZq7r4PMQ/_!in]_au3j@gXrCrdl?&9A58f?!5^$q-5&RI,U2b.QF#\$j`dcT5"l$P"^0GS'04;`McW`%CpH+43.4miCD)(FSHTOb+Pt++99$/;(=3d9/GR\4T2+jS.m(/O^b6Aal3="!mNQg*JT3k4j)VGJ;;K(jeWW+QksThHn;[M],M/!O%^cg*O$5GZ:R7B-4b'l!]d0!,[YCMr'#aSf9%19#&%+a3I"`]jMMkN7fOSp%@An<X1OH[5j9N[kF7Hta$-m0cZ*Sae?>i9`b\?h'B%l#>W-_&R!A4X^5:fN#S+\AP/\/\8j64;G6@8Qk<<3_5Jb4sn('PJkfQ2CGo^?f&KLp'n-Bo\a.r+26@E0t=>($b<>Qrd;P"d@YQS%30LRC\W_sIQn%ML=CUsneG[+*p];2(^Og&#decR=rkj;7b#-We!2Xd9f[\.FA#;NIh<5^?DUW^^r\,Nu'/H;$(dT2Xd+jpR/Y076%a^'>_JR.D1K`1'/gsZjdbOKRd)#p>$B;:V'.-6CXV8t\0p3iNRKQAZs(;1;`nDKqc2OL7Q-A9!4=K4W7ou;63kNnk&:$HA$\7Q<5%9IDB4*-1>6XgZ"kIeBZ;b=D0TA/*M0h(,b/5a0D,d`NlNBK(S`QcICiHN5#KjK<2ZEqYDtGJa+i)lo3@julj!7UEI>Z-l/e)`2L(%h0fsNH\IfI1HZ`k=00jE&HD8;j7`SB&BpJP+V=hh'$YE0#LUF",lgQupHSWdTZ!V!/&+,\'?HiQ:2Z+%XqR,'U<TP<]+]T;^2P&B%:r99(26[((@+lBqQr(4O2"4dG&#.Ee8FOmUG'fq0H@<uGkK_t&PNJ'9rp2S9roEZH^\Ge8S,Vu.ro#f.g:[6t:Yop[fDfu_>"OJI%[T1!?nX$_IQW94PY1gAT+3rTfm5k,j(/+#6P$=_G&[9d091oTfZ`UM>rBn@_O1)*,D!On91-XSZ98KpdY<o5LWrP$n*MCb?i18]X%DD)r4Y9T^j!A#B`O`&2t>dF/N;UEQ\lLdn'Ka-p"35)o76<)2=-J>8cKS,!L#$XGPG(#F,b"[]4',O;]p.Eo0<V'c%9sr#?@ZU84%D@O'6$C05Pa&!KS5`Kb%Wl&o.Ri1FnGN._Lm&/H1;e+Ua'u:RV3]A3P9*5m+[O]!,Tlh$C#95=QZbs"7X.X8\f!tC'63;G-oHr=1%mhK$0@pfC>Dp..R&>JLn-D91"O9aKA8SXFrFp8uYb&-^7F!F)6r&52`GSO7^?sDG#8Vp*BS'X3(_\LVd>gB$b"LVobJ3pgbU<K.:%NRumkhN*2Hf'O(o#gdbli7hpF\)XLMfY?:"LL6$Pn-9&oUlNuo+`t^n<h7l7SRfEM]<_$2LXo1U*cSb?c<fQ][#V)"&Nuf6HJlKm%gW"SW=taA."(l2J6p>1oYMtCs;/9e3/L.,POGU<#42)t5%La_peDP=RRud_QOBs#GAV15cf_s]Pm`W5K=KqY;e;(nOEQdsk+gd"p%8%5qs2Oi:@S,\=8n;k?)&KFi4jMq-*%Oga3'(B*jfn^JGAp$AE#RcREdSY3$DBO?DbMZS!>Y[XG`YM+!D="96lr(nJV$CIF.i!^'%U9;-9r$IRNA&@Nd>2g(#E9le\-UT6W[r&ST`aAJ]4Z!0](fG!d2t)A*D[jLq_0SW'@=Q_T^:2>R0#F7[h64Tg+1Ep%ea6jrpg@R=%_Y8P)pNOB7J'#h3l'$Vn5QBJNTAS/2qiUpAD0GmATE"f[hu3BfT?;YTVVRaAn6b&Pi87m+s5N`J+)]p2o!=s<rRIg\PmMW'\R5@&%Y/SR;5Pt?p?[f$,Mt6j;J,R>fnSduJ^;BgH_9FD+MerOaD1;5ccbHnX^\m`1J,A>/D`!XsLU=WUSaHFA5NQ,Irj,sZouh9'#rMOc%^Vb8?K0Oa1n,MmLZfhAfm61LDruZRdl_"3\:LCj4afiJYiYT),rT)RKFYd@b?ZcDLitn>9p"OD7V,QD=qoes5YCHE/c[YQ0TD^Tr%lW\f2Mf4(_C%GE`Tr\2rG.+Tgrpo5Zhi?]_:VZSqm5No\!7^pZIZH.2rQ/-5IJ*0^c4t9f>Aa'u5PtB-mk?UpNW8A6<5/$:^A.Qt%mpEg*g$cYu]BjD7r0uTg&Gt%fq>&?cqrrV-o$dX5le?OZ%\*6!o0<+6ajU"9GP_?lqp'o(Q)<O/#(-rYGGAIeoH%`i&-tj`_#bU8%mDsIr3R<c\g:s%Yad-J&FTH=<_[4treX"nQ40r^,Q!/`+.<+VCn;`=@MD9`XAD#Jr,Y$,tC^d+HGmX&\`!%QS/N[/gfuZn6W;5_W%FB5EpGLheF/O/CdP3#NiXM&YQfW,^K01PIhhsdI$UkOfVF1G8l=*[?q,mHUA;.AGSS(<"6EF:I0%&STl1bb;'hdB@]8qZBbc@Qg;%3%F#?"-Y0E12gq`-0&MXR7t^DM1NW&YaATuJq:ltYa>V1;_M<Jb.FmFG\5@`(=Sf'^GZbWfR)+_!lJL'qI:8c*j`E*5C_pH9X4_(%WTH+@5C"V/2H_'pep\hu:%i&r$L-;3/P<JDU"[)AX]6kHCiMUa<kYHA-5/k/K.#j=JgkaLSV&6OhL[+rTmk<#DX%/7@T?nL]ar6Z%R-)mgKU]XC>H-<MffSNd/mI9'QMG=2^4r+>S[*B>.qJ%,;R'-E(-.JVq2I>clJS8cf"^<Ed;!6!NAh%MXJO;\d#>jrb.CQFA2!lP%(i<].'u^-^k_N5cof40n*7pphk@HYoYOKIj;1S]Cf#Ug9#2c1V-<S>OU]4]lkl:C3>/3]Y?`Y;f3J1YXiF\W@]`#WS;157&]GDYL%0.6-in^a.QJDU[iU[-8c2F]4Rr*CQ3XIZOY5$M$Ih4VJ)mUSE>M1ZqBhLZe.L+[NU?%.F"-S#Bs;7#j(?0oh07ld<V6W`,<%eT^3%0#'O:=]&5@=&6-t8DF,^Q"Bo(=gm8ZjJSb3>.R)EI]sB,IADU:'@=@CrlYaY&5U`W')"NK8]5fa:VsFN4mVB+*dWl.qVHQ1r^Nkd%=LTmJJ&sbRmkIWcQS2l02FI>Yf$>V>qV'V-^;b_jDS7*8k4PYZa"_[R>3`YlpPmF@=L-,2V*aDi=Xs-*k!*6E4iWT[Qjn&r"S=/_%H:J9*IE@6+qD_<7-P`L[.CP`)lFf.M^7j5o$]c:g'?<o2D=`UJK3.puT/]uOla(tJ*i@\u![DtJH<4Kn=9ndK0`!P_q_ZtT]CD7?%(9PHA<Nto$bg#9/?JhfOlm?Xr>0UuuqQuuK>s&a^1\K^dEZX(!TC(HZN8%mul!5a#4SHLO&tA\h\WFM2SulJp0O*ri;=U01VNU\f%HJ5Y9ddBoBl(dJ>QoIn<`1a3Com2a8HC*6,o16+B)ggI]Wt!8g4,bE^?K>'*R?d_moDoIWoIM.5q`T7lOH[`aSl6$cq*IF9o7[6I%OA"OAQI*'2fh.c&2ODTgo7&_6QU]4YE/PJlAqIK4em^P!]lW_nI=hOiU6SH5/I"T8m]aVA46ig@qXOF(il&/iDSJ[up;BDj=+C1n%n%q<Bs.]-j+"+.%D*D"A._`V)5'[o(Ng"9]V&nDWW0TF0Y0n6t4]rl=[nG$e6A0*e^<r=,2n+&)'ZW*:X7f$JI(#Dlk)g$)'SYGB%a$n5jK.r*?)#@M[LI#m<]l-"5K.r*I(rYa3%b4'h&F]';.NZ%QZQc0*"!KYDhDZWg&.%4rs6V$8hJ"*#Z;09:JIq:@ch;6!`*FGi%6?%msDkt;o&>H'(+iO*o#f/mu4j.X<3"U[Om!ZdR#([>b[h"/M+blR7j?=',i#$gu&9>7'+o3RHK*V"XWTK1@XWJ)CiX(#O^qKVa%mq0"W++X=O#4P*Qp]$(aCO8"0FG@h12gl/6,B;Sh!@Ad-QX2njjJ<@*I4OI4b$c1j"r5IWZiPgEEs@oBJcc37?r6gBTXJYbpe)>M%$g7LQf[E*8)R-.6bF\].p$!L%Vh+Ou?r-6R4aFLsDS!B6gco$nH.JO'IeLedepp)3-q+(c.3s2i!t+j..HFcAHD([[2*%n#NU`5\%[`qbDog?CdDGKd&>(r/,p:m)7B$KuZ,I=N8;WQdGI<&:U^6l7po0o6tfkmd+AZM:_\a#cdY<J_ti>]%CH-=)a.V1_k,B5nqEVN!9%Ri\*4;<J+$Fn1:.EJ-Xh+2.1G#=,rq!i3e(8P"ahr"d`MD\51NhaMdOIXqe)2pqR!caW*Q^#c("YW))?pA)[5[p1lKp1gNafBE7G%@-q#sjkn,@#TkMf.Nu:40@IHMX7!se4BKDo%;g=N3q_+UaR+BJn_'p_i)<toGd=gBM1[:LhL[.8L)q(UiZ5W.(?S$Ud%b49*P0mm%6]]rEo+#'jFY;D.6B,'cmL,0NNXe_JMG3=X[sMnkf_^dYK<2,iNb'JN%X'C1B#h3HLUQjdlQ#7n7LSb&NoaZhZ=u5cl+2D]NoaZh%Ej0&qU%%!3V'IV_.6iGjb/#^l@$bo<9DQa&gpan[ai>&pCA'fh_e5K0l2#/03_oWd'agde''E685<N!*q:m!^ka+E4@/V/%k[4P/%\OsTY4ZJj7rr0W4Yr53C;#Q7kjPTSrDfW1UPp?k;qH''R:>e:meMqLq%GXMWGLBj`:?#/c#!SjfH[dQ<;L`%=g&F5^Ag/cifToNB%"KfpP"IYI'-nYG?QO6c9dC+(R,s,=igk6\-RpQ(ZNatYP<Ic`MXsQrpf-bbeGq.MIje$>=W#OU+>hH1RAmUMB4P<d@-u@`i5[oqV%q?N%rlQ`bPhjLs-iuYs-ft%:YcK7(IS)8Gm)9k=JXaeNe'"9X"`Z&i(MF<m$II%m<Do[co'lOi;h^bdJi4Bj$/dB%JJa[(+],:;q%#/6!4$%nfVk.>RP)<AXOpb$k^P8X-JP'e'a+^JD3^AQfu?HsO+V%7u-mj0!h'n`c(Xkn8b_"cL#qhrhr+=7'TM4>g.\lVi$3JQCk%.JXs]#n0`&?UtrSs5a"t%7'5fEE:.^:U9f;]o7Ln)p#=OiMsR@b6H#1$tS&7E6t0kA$)/c4YOq^a3+&?Yql5-3&jfjCB/;&q;=f3%jC![#4Aod.n)iskRk+I/QX1SmI.5?&Xgof(])"m6pM")Uo#5=RjLb5dcE#t9a3^T+\9I0:p+#A%/E)o_mjhER&`'m9Hq^JWaS;.b%p35`WD62d0;Smcl*T#PIXogbaTC!au(<-uLnBp6Q:T;rmI@m[Z0oLPP3M)TbVqS2t@89dckJ3d^]nLLH20KK&ln,TN^VgfTG94bm%HjT_d'@;s*:u@WOIHh+mqUZCr1%^#ETLUQS^*2Nf-fFGJ6[NAb#+g>](r3p#0X-1u-\lkA29QY^pE$H0HTQRUbnc=3H&c!-p/Ve3%gpUQQh>=:BYMM^YEP,m(<r8C?n>&GJ._i^h.QKDi=F35d(&Ys*)/n?_&+dsiT<`L,X]X>dot+fNml5-B5kS3NdTneaQ!Sh(h=UR9%hUi'GV[UjG)4[6Q3'2fuqOYu-i=V3)UJi)drJch4l1:*;1<J._<(e4.5cI6gc$R(pbTRq)<mRCknff-=cSbU.<WFJq:N!N5Ep*Ud%Eo*jO`Clcpn4'S(<mkpkhSX:[`k.$OigE5r`t<=8TLYc53(?)f+aX+/XmOq$oRr^4h!"M"6*DUa8d#+hS,(Boj$EO_I4i/os#H7f%qhYt(=A3XH0l`o8^h+M;9EUc`a(@'1R0GRuheP"olZDUCAf=&Xos3,4S58$4<`AR"#"I(WBPMAj#"DNfrX=a_J^O,PA1=PI_J%qs%7?8B^F(50<9jD0M(f#!Y3.36@EY!>Z6iOeiX!q2:mDFnU^-;mp06+I&6g4gnpO,?[4e$FU3.(*g1[b.,nI//$kTL.P?NA'&h8[$F%>KGYa/Z)ZJWLUZF=8uL_nY9*as)Hk'c`4[-9J+k%ZTUr7I)GCl'%obHl6?X]0.oIa.d1`KfAcTO4aUs5L!F&[k\nK5ScsC(hC"T$%UKjeOpXqXoln6I-YC3fc*PMGtjN/"r\l%<?WF5\Vp[W>;$0NN..ehk3SD3Tm8k$>@R):*V^+_5O>8f[!on:".<d6"]Se$.ohTsaC%EjAg4Q`K4TpUJupd;+'eDY[!ri-fjXr&`B3P,5X78KbeCDLUUTJrdJ*[InIK<4#hs=6#9k69J)R>.[7FTWnn^QIjYh"q"!^`c1(e%GTUZOn&9Y0g24el.P"gTDRG8O@c6a(a[=PDI.d$_i]4ib08Q.Y5'RR3G^9adi#$di+W9.1b<9PC5"/KA%UJEqW(090G_`H7R4RS!%(eAO_F74uBp\su>//u[9=66Hq.a'f+hQ*r@6QceJg"UMnSeYb;R?n"QemG/QJ%V_4>I\uh*F=8ko`=\lD?,*loRdfL&iN&]pEF`o%0(8:7a*2M>ET5(cIAf[/j_66k=_K9FPJ*l^Ya?2rT<M,aP/Kr?-Ou1!f'?nIkul0dJQF?VTj)q9plo9/(e7-18GV`F^k4feMsiIL%Vb[g5QqLI#HhQNN\NW2<i.YDlY<7a'GFZ4qG:E=U,t*YuH$W8.dDNQskW?hqI"#/[LA'Zi[`EGC@:(Ij/YQ4kP.PoRDf`2U5c&m1%ncKKho%p[]oCgqK&:.n>X4^^;FmNh_SWln+C7o9IE-gYoQ/D$)SQbRO[#_`642@YNSefcC'pj(J\Fcf2,edWo[/O)L$=m%B;X\6[%>HHV$*/<<33;m0r#;)oM4f\Rk)V*`o^&p9]2q)=Ch?.CB."Z39;#%(CMA?eE&=;"N\@e0l]VQQ;`n'iOiF]-XX5?$k74OVY*0lC/%cifnH0uo1'XbV;Oq]L#\`[:t;E`/jPmpip]+Z6fr/)=CnFh:\"9HRl)fa#\q+58dm>l:obHao1i'_2cngH.8WQV)u-[$E=Ge(]Rm%2*E$ZFXfNZ9mGu^!krU^+:>1<Y:<s\C'*^VG2R^5MJ/KJ#ck.<rDU@$,,oQs@Qpn$mW@:]B6QU6!&&9&VcGEuJmV=E`C<"*U:E%8%cq5Ut?HD91\2JQ;`E\g*";\T^<u$FpPs2FXpE?rCM0d^IP$NK0T2i4@>_?[s>L8Y,!?`am]:,WEmL!!C&8QI^\9O0jQFq.XS++3G%r=`4iRV5[VGg+lcV8ffp2n3./J7sp"&R#XRApUTM(uO!!SR%s:$AJ,/<K+-Z)9CX9EC0.D3jkmm?gi0pqHlX%+-)Qcc[[6fa\ie%%3*t8j=>bF8Qq&<,R@d)a(p*m]n54Lu3CX]G@">7MD>5Cd5A"(ul$lj/IhI\8MAp;W4\K\=C$JktMgAQ(nUKopV7Mri'8E^WIo-d*%MNB_uhr7<$lsWj%f[M-hN;m4)dLD4,*CI"KlVLIJJ)Q*mD28qXD;)cc_uD(^cS=0l&j[@9J8r+>%T`o=aE\@DH4ED)T6>]`U^J%)%HlE"*Bd'60U*A=p>/XfR*Z>lSg_^EB9]KMJHBD(7bVq3_m?L0BOs2R]o6!QRie9r>B,jFm5;$_I9=bp*(^\$/A/rb8+UAF[!)QYP%3&6)%8tr?'-Wu[V8V7NlIZbZ69>ZR-Lu"lB.&i#\m1G7B8i.KZ-.2<en9gNbT-[RbK;k:>!gUQq/#ltq\2F=.c",04]!>@Vo--mQ%0I+^/OLB?KSs_'fO&4S:Z&C*rRY$Huia5)2?.B?XG,NeL/]:>[U$hgb:.\DJe*r<%e/B$!B;#BjY@pqK1'TWe``'7.l_rNR;XW1[%L-hU]k_=\"KR],57/.uV`.WZ`#_d4D"I6)&q`[N;`BK0P<m\Skeg5(pY2/%U]/+J!<D4Bb@7W-gYRbR.+S\BLh!g,ZS]7d?WJM/K%FO\LF4_ca)a9(o7>]eX[_GjtD&Ajn-bP@P.j^h1TSIH5E&<"+\\qW5a7d"@ZU?H1^Fl5h"!SejE;$m/@aOZP?dER5g/_#lU1)qtb%f;%jK[hC$A$gn6fCdVf%AJd]MTVs[Nfb=TaoZTQ5776M*/-9uDR\YD6@'uP>Yt6CU!'#s?/)u+=)oWL:B1WNO>@?YKn;QE6A<E"K%`3akMO[W<(f\*XUHqa5:`:k/++&khVmh\Xs'^88:!?cBKc]PF0#UW&Z]=VhWO6&Qt-]]pJ#k^i+;('R(e#^Epj,0T(FK3Q>]`dPG%pD!YUHFB!Oo=eY"SugRG,l1b*[[k"9ITJ#CWDl$gmRhX4Q44n@C<k<kM+!^1V1eJ2q!\ZKrW0Xh0R`n*8EZZ<nh`cmE[g-G9;g4%%Sn;5')t]S*9VpnaAO>Ob;(C^Cq.di)]J$\smQb[rPP>r'TnKU.?uuf%-ih,[f;c?6;bdO_2[AYPCntWj:R>#XJ//$5XnRc^K`S@Z%7A_HY/(W8nX*C/XEC,#c@"Co(4ojep(BU>R3Le#F)Xg0)\AoDu`V!HM"[\`$\K_sJ\\(qDVN!$h7YYWO=g*Bu#DjmA"Mmp_*dgP_%5<q<rlTL73d`Wh#5HLbLl_t^>M('*K*pI^B%P.H$$i4%Bb6so-ei#D#oriL>_]dA/kOs,7ls7s;mseL4(r*cRm04M=9%@XTp@*m-%>b\FmUf3l,k0#GeVUrU^bF/3;rOr$Qq._'MR"Nq.C1RF,.f'+l15LNdP,i1&c5mol[E:9e6CNOB]Rn]8KU+?LG%;&].:]@jI?R&N%]cU"O;DU@kXfEc(Q90#si:8s9Dn53"h6ofL_QkU8T^)[YLaKr-PVLtbl.)'?^HgN2rNrqk]U>la;JbB_Mk.>N7R7a9=>r+RBV8T5%-#2krLf1f/@XOZU3f7(Yj?R=#K?s0:F(s+7+7P=>raFt?e\ZgL^c&d%]R7sgr%IroUq8n^fBbl#l2m$q?h$!;eO=R;'cRB`Zmlf_%raK)c[:a_^Sat@VhH!7&>1IAfSupVpl7M(<%rV;j?SJ)>la&arJl'3:*0T\<Q0,8=rcc5;2mS]`qM]=.mKJ&%E8A81,;Ik@]5'Rp%Cd/=9?_=auVV@PrS2Ysf.!OLU/LuhTDjB[('9@:Y,FPY5APPu.k)AUNZ0rrYJ`&/1UJ.O?8X8SDP=ejSdp+6u$+u2hK(!.jXBqZ/%I$`BIc&AUBhF<2`&J%9U?qM;:(VMC,O&JcZ@V)j@Gft[p^mY19XsXEdKk7=r;[.gd7IQmo4\4DbD0"Wc?>?CsrCb/4ie*g#K2Fo^%Ke2=7rIr\Ie\?fs'\'oe=:?p31&B(mJY=Y-F6ej/nYUACndN-Ol],WQ:$6+Vbt[Hs\M`'Pm`a1)lt>Y8#.)6kQuu8\pZHW)GF3A_%^b@$Xqu-22R$e;jBpZtb1FoE?_)(d5;Mk"YcDSR6_"OIMIC=/tYeA_E[tQ$B6?a08a--BcJltRHn#r#!ffKG!o[4bY8\UPj=LN"I%1I.;5H0V9`"M9j9$5s7^epdJ-9_@^gZ'qdW%q=jN`^&uaS$c8Akm5]/qI;JuSYAAf_6!Z6e;U3gBec@gq?oaW]W=[M^'"cBNE@?;%]#J3q2'Y7sJs'gT$6TQ@L@ucs]Ei<A/!XfumAc_0!5,aNo\Q.(4t0J:&pb[o?]#Y<4^3*<O@sNjB+YfC,gj_k"C<Y%9#edTl&6ge%r>6?Q%qK`/p]0NNR3[u-9f%4mTZSouo_(()o\.__a2sehSgGRPAk(<*f1Srt^kqSVV"=t"^Jh/pn'\-0gKQ_q]:7e@.]=4M[o'Gh%Q<ae)D(au1!h6mlEc0aaSL94a[E*TIDC?;-LCsb;bN_q.Hlb<8k4UoYJ*jI7+X=GSF7gSJdPtQK1LDRIZN%25FL9`Hna3MYBO`4Q%HQrj$oA4:Y(r2pLV%ttSqea`NQ&/`lA["ciYY'&,U-EY`V8'A0lA[B[6)\gj227Q*L/02)>d!SjL&baX4BDad8>["ieLqRCn@D[#%X/;VFLU8rcW!Q>KXS&#9#MOX-7k)!JCtt2.?+GWd;*6b]RQ\PYOV@K&c8U%CR+YicC)Mdff@W'qY>fqVGqS0M3G6fX;_B:6L.(:J%)N1M>e*u\tcZ)a3?uJ^<@*hn;pNLZ5Qh.,h$TD2Kre:/W)]15%CG-X,fpeGq@-=O[pau%=(ss,BI<g0ggW-HU:=%ZfCFkVkS&A;@%3\IbJ'#n8"@PQM,Tn4IM7faf-U*>uj@D2f7de)s:7RcG#k/T&IrW5huX5MRGM:M!AKf<M:]o_0Q]nfJ#Z$C-86GA6h`:r"AHNPkh%aU.A9^60F%#^&MU5rSp:;JceZLn<3p#JS^Uo#J'u4+DV3olD4$l6rXoZbqGScB<2YPpLZXkq&q8kC9T";q#ie1ib@s4"X4HNT=.c%U\+.Hs4<,i;I=FPGk^DP.+P=N\JP3Z8,gm*;QAuO,osI=r%dMH]tk^<OW4nha.nkFnrPVg.(s21]GK`+A6&(>hq=DX4jN"1[p9Vl%>[q.'Z/e\ob5S[44tn"h];,*UHZTAV).:bjHNr-Ok=9k.bfh\T8u;D7*DX28Is<N[^HkoGHcjLqnYk_ZgG0M6q@WOnU?n]O8dZl*%#caJfPDtMFlR^LdI/.<**]uP.nX+s?/(?`B+Se]`H4BUB"2#TEY<CCnZh87EB#B]?"s!K1ETf%H]ZHB;m-JdW=.)[-"$P;_i5VF6%PQ[<qX(6X9DFfs:'NL#>;4aPO&I$C76W^?O#Qeb%)dbsH[T9>UpFtU5r,]DFB>fdN0j-V1He',\\eF!M<R5(:Ek/;]DQSAq>iP^(%-eX)OX]dQ;PM6e`/6>M@?D#*`9%D5HI)"]F>ZOb=daZAZW##C8nWQ.jL:J.ZY<FkkKWfJJ_JK(lA%i<C!,$<O8+8D'a32ggBP\W4%3:VD?qd=CQbu:1HhVpD.rYImKk>+!rS!:B/NFp5>XCD$Ip9nAb'hYt@`\F3bQ`-la,XJ321Ei->'3gt\"1K%gM2!9f(7"]]_Ge.q%m9.uF$L.5bS_i*okhB1hdmC0=YnCLdh+I(LeY)A&_F[NH*elbe^B?#:",ln;cEi#+e[n>aZ'5>UTeE^#7(U__;q]FfjN6-'kMr>>%Zm:Il%;bjt<1jY,3a&Ym$C<!EEei`W0Ej-$CL!YMElj14+Kf*]:e5>@0TnR9C$F:]&+s*#iea,rji3%:rs8)58L3s:3L`f"D;;qR%`-M_6mG&1$$LH0nJ'YU#!]KZMS76.[:`.TiZT+GN]@o'^qorq7Ri8o,GJAbA_J^K0)YSU([^5>\+qT9)fZdHj!ANXeHZ-5W:Jk(\%eiYA:AIBmf]lh"'LaQW7:,A5l#=kV\'fm7Xn)*:p&K]7!b/7uGWpG+Y?hZ506l4SOe@L"N(NQraA9HZI*qq,_Wo?b@oQ5,d=Ln6k%[4@0,FA6](5M8BJXc);+LjH!+esF7Q38=2S\]kq30NF5;2uplQX*R0A8;<58G*e;th)Q6D`Mar,k>s(f4]se:\[aT0[/:ri?AtF<%f=L+,U$s1Ri_&nXTeH?&-M<'WDiVdr]fQeGV<>>LA1r^n$^E93HRNueFmu-cMpoY5<UHKR]E]pgh#Gj@deJgDTMikgofFgmF>]gB%8q";pC9EV`j*=F*@^kLS11?W<Ak5MbqBqo1*;%0`3>LG#<jF8':$Os7$2sVLP7]Z.,9!GB1n0!*(sADp`cVh_:#iZ]"c_HU]!!10%q$2l58Y/rR4$=_bM=$k!CA+4+N_YHj(]PVRhKfIR<]-?KD5bp'QlV2s,j4qeGd,@iR9mTkZuYurF8FC\+>W'mY;`er-]70"HNj&2%>+&,X_I,/]I:?E*U.<+Y<1KAXm?qiLD!"YJ>KBnG9-78cX9,G*hc`;N;#7o_jBWp9:>_=5dJPq?>7WEZ9)KVS-blZJH_-amX4G&9%pmPcaS,LB"Qi:*1)8/jAe$LLkbgQ6?SZPjCHgZr;="W+igMA$;]X+%g&_$.TV"4TWCt2/8iZ=)#10%lHV]qM90`L]s?)j0\Yr"'r%5`d'kQ,iMG%3tm;g<&h8.sjXK'ZojG;V&#-QEkZD?s\@\9@193ih\4$>!K/ibKtZmmG"dTY,SG&7b8=T.P?HKSn_7e>HF'q5Wj8j%_-llF[$t18d<VM/`83Xr8??$fPNZ5^',QAL1Rm7Djf@(h4;'u/SR"'eU9T>enY)7s5X0,=?#1$XR-AY"$n,3!5M$7q#5#mU;>RnP%>2)-\g-E*NP*N04>:Xo,QgXGKCZ"tA0G@gDPKdt"reDQ.'+(k#'`e<"`o%d!jK!N+]*0gm>lk?p`OXL=&3AMuO86E.i+Ra0?`mbg%=jH/M!Ur6b.o1_I=3@?^3rk<&&A7G*?`opF3/H^'=&LO#Fj@S,QX6^m96C:Bl3PX"?Rlh(g'LUM!,11<i8ta>ESe#r*.U=o(YO]b%U6LD+*XCAe(V>R$#2;f6Mo:]M(#89:'H5IiN1fYQ$J!rt^;&XrrDPB,f@@[X)1:U#(nY+.nl[&!A@6X:fDl?>AdgH1Z@$JK]l\c[%@a/L<&bQ?8nl,D9a]T`b\/D;A[HNJ<Lgk0D#-;-5Z-(k;@b"\:(4.PL>RAJ#f4F5p6b/cf\"'_j+PbM'RLd6'&bYQa7?"us-id^m%]o&#]*S$mTZRZp?YX!k#A,l^-;`.WVW)TMG]6hi5R`F7UIns;a9@ZPUNilM;gDT.AN3AFTH^p,?';_pY?p0QJXIG?[]H2XGF2/CC%HA,5AT,7*CTTm$$*IP&aX9rB1hZZI\?-,0Y:]OrNdO(JM`fKLgl./)-jou3:jr*$9)jm2>PjF0!m,4EqJ"!0FYZBj<>Hlnk''oLQ%)*(\H([h9\-4*`9Y#pM_.Fb>K@c5XERka<hq'f6^j,mg9!(C&$KK==#W>n(^qdMFH/,5DUZq^ecCXoV&qKf/P$4Xm!X<XZ`Rn)<N%1YbU"BK]l\E&G':Yam92LW.alLj,YJ2)4/W]ujhCBA">''NtmT;M-@I,tNP,qTP?UQ<D:qUB_8D9'*Z_6A8%Ue>Yd;(+UtH-l?9O%-XariCW/@fL-W/Q`M0Cn2C*ED/MHi-V6+A@j-VsTS7U,UXBX$a^c9Q7^J1;J3Bm6sQ2W#IO,-1*.E9cV%!=h5ZgnS&h\4TXf64,i%YXjHEPdmUa/(K5%84\)L"]GIVnMR4n@uY`i.H_7_Kd-8aauSn0fs9/c&>`(\MW^Ybb!1Nd#(5FeeLJLrR8CHZnh/HL1V+?/fkq'O%>rNGOAj4.$3Ei0;CD%q-TNW"V;)[R<9)bNONRtqL+t`Dgj$QMAkX"CaHJ-GX^A=@ZiBLG0e`"mi;4+sF+;flR)B72-)b[XD$E/ms%O<kh\li]R^`Hu!jDDFf$j:'T`]?K#1KLPte/7crGRYOfp7U%"WlVi'BBShR\,,W@po"5&t<lJ;`B.Ool%E3Xp$KR2tQX;NW+*ne1%,[\3FO[N0np&kLGW?LJ6\]rin(uR;o)PADfUYr(UB+u>.D4f7G<85SC_ANncJ'QbD(&t3m.b@28;:dU=NnONr(8:JfmJBd9Nc7SE%$M^PDl2gYNX%A4l(E[rof%eF47b"%Akofb+2a%hUic'm/=<=+h==t+=1(UEcT(6IN8AuF+K[jncDXE=8*QOP0=;/)mCt/lF_8k!k%*Y=SA!ZmDd"+Y!M;r(Xqn:-b17?>=QG85fm>(ihX%;7CQ6b&7\i"%9U+gY!DI,04:R`BGe$*N"9fuDm?Tl+&Tb-9EaAbDrbZZ:%I%0?h`^:=$"(<b;1S.3C`*aRoe1lC[:VU:g'-]"WH.mQBlsS1\A3mtIh(qGV*?ku<!LRZ_l]L?@VG:/bXi1WrQ9L;kcaIq\QGf,9%n%cH$5;HrqkZ.2@.#'D8H.*<07ZG(4sG_/U>KbM)U0VIcs_[Up![^236+%@t%*2kMks'm3S0gi!)Ir49#u![)[:KsAmfRE+XdT1@=t%^;%67$X`AbT_c]AGk#<sH;TGUVTR1XQ`_#\jRlF4Lja;UH;Lk`AMZ!`?U!_6.]K\m%..udCB^SDe7P"jL;oL9<&o%jB'`'rX.Qlj%Ff-AC`ih;6bq<$LmI*uCLVg]E2X-e-NO8e*c?t=PL8BT<GYp$OBTG<IIQuFB,<Jmia\R(ZVa'S;^T6OW:8&JB[i;g1Bm*5YmBg>M%&YhDC<Qq_UVsmGG%$.=+.MJSREnFXag<\",jR)0q\$/V?5"GoU1Y"ra0"rC+ND9M<^$Bk7<S1X0N^Eh0]`$"j/]ru!@@[b[pNO63%SYjEH-08klI'1Ul:>"7)YJO@`qtIY.nbI>:?;jHjCHD!ui,j9#0`gV"?WGdnR"(o,`Taeb/cVhWgYXqC:9`3HAlM[B/(Ml>>Zdo'%1&H<CpLBuQ5c<=uYW*9Gl(.dj&21p_4kc>Gq5r0WWRK@!T\IU[H$qcSe(kb<."2Wo<11=d=Y-'bKlm`DWVp(jRU5qJSIM'hY\e80%7s(bjN1O>-M\2LdI2B?,n"*FTLgr_MW[s/nc!QupG.KJ64,WBH_Ko<I%dOhk@Xf5`[k$R(;=&J;$,E1AVcWN@+U##U%X*/kY?s;\%?Hl1K3n;LcSh?tje<mc=m:k<6f<;6l_=a*4g?J+pmu%*$njs5VoPiO0LNT%(UMa/*DDp(u>amdfSeB<aX@d`8qfCZgF4P.b[*u@N%PsssPV-*=oO1t"1>`\/l6b&Mn1r;=;(oa&hguaP\VpGfoHZ:0o+p!)*1VZkEl?$CC.*JY'SZYXlr:oi(/N";)f.SY`dug3XgoOMj%7!/9"&\]?:SdKQH]s)C8NZW^UDLRr_mIY`_o-puokED>(bG\1FKptlQ5<plqF$3j#ZEMk0)kig?rL21Z3]2)9^)RFaXOHNTFb`#s%?C7f3>-VjMXqg;FVMSuH7i&"Oe=LTOdj7*.l-JVC;5_kjF5#6FqD^)I*iYqam1c@QjiLf#J/cY`Q%tDFf]cWsHT9(TI2gSBU!qOa%P>(pU10LM*P?YBC.J;[#G\CskG_1)7]t3^\cO/!2(3c*/@]/hB1A+nBdgsHJ6)WJF@&J0s"o+J6mD>c[J$-EHlXSrsW)J!'r8>@L%duisRH@&AL7VHE1k4nFWp!Xt(.SVd7(Uh##><JMqP<UmqH_7G['3F?%h`ccYX_!8O#^bH@WaS\co4KG:`GFXH,j[Om_=m6Bf_XeY%4q1q9[ma$K*Yn3Z'@I<X5*iV9KI.@4L-73DqXO;c2<&>XC5C&?p$el+j$Tlf?a`-UT)/)aiP"O9rnb\X9).0<_Y8\N)7:7M<4b.o%?*6nT4U$7MG^obmA3mtt$[pbhqC567Y$?IsVmFX<8f4\6A2D4IB]J:/l`F_&Z&n,j-8.8@Hs)GR\j$((eBY6f4PcRAg!Dp4CHV8W%lu6h=f@#mG(&mpSl/Stic.5S,e&u+EEb/PaH\r@rHN%3=Ha8V"\$*N<\@Qb&e*kc;FmO!pHLq#c\7$)iZBs"fn>s>Erm\MAg9(o-%>N&BHL$t'9^\3C,+?&rT;sn+8k\):/D;/C.q'<.mR[h<oRHCEqqVLb?ok/XjA4!64XPH!?L;$H"2P)RgV`p>.()X?FATN(f(\&SZ%T5DeHT)qeLd%a91a1.Yr?PL>ZSD?=+1,O@Jj(rE&-MMe!np7<jT2*bMg_cL7^JR/fg[\8,#tB!E9)UVnSj,&h'4;/RerZM"!cu$S%;"#*?rqZK?m1a5J_cml9ADYZ0lsXU;l"#gR[V4iK)"-sN4@,hlM%R+9Sf6tHgSlt$NHhb<>>M07gHXgE4!cs9U/Om*_9TU]l=7PG%YC=E3\hg-OGD^Q=]i3V9W<&;ElMobsDKcG:!.X`dWgo&p_>@s>eC/,LI!ha;.;AgA:/P'g!0#W]3P8;Pl70BoiU$jnZ;[DgeGgcU%Wf<\FIiHpP2Q"qD@DSk&q7@rD,-k.s.F+^(3ucj%o!.Sqn\D/^Z_/sJp[lR1Lne.6X5<B&'rVA'79Ignj/!oZ(@Bi#e!Pnpi1,4%%+bt"W9aT[JSb2\pi6qnqE-h^)G<tO/^N4c00Ku"LI]Wm&%:^EPrCNt:Z_p!XJ,*Up=PUjfL,4_RkrK5pTsS'rb^Bu,-Koo,rmBF>%_d=Y]%]6o[\?lO:\_\$uf7.Wn4^%K(T7H;\05lhqIK=(tB[!(gT37r[anTe`MDO).J;''LfGO74Ih3WJ`e$"Pj8'0BB9mJt>n6ou%OP`&_JZn*I51HIIL=G_1YX):K#;r+q=dZ$m%%b]+&o\(2O<;sj+=E^E'^52Te8&-@b\or*5=h4br'Dn_Hat$/K(@('kJO+gRltl_%L"S;sq,&e%_o:kb@.CGXc<2lPT<@',&m-lJ?#V%#fA[/?Q>f(Yqm&r?C-\(^AP(++:@*-*q)[<o_r0sa9<4/hXgH"a*1p+Go78(2%(5&]$le=n^gHg8]Z)i_+iV]bH@nYVR?J2;:+bp/=B7J]6b!KLFp$K9SVokn,&9"2[?e8VnBbTjAcjJWj@+u8m3>I*Y5ITY#`VkEa%VFLQiD^3As*bR;D2%[UHhOI*].Q-A6CMKAO(!bR;B$2GJg748J@CEmeApftP-USuI$e@m]gomc*QYCa.g[?i#!%,/XR/;TZY>J3o%;]TQj;L0YoPD/mnb]W62Ki?g0<'l#W:NtLNK@!c1.e9q#odV`Waj"T]]/@c\3GZSl.@SZD<Z^C*:.O_6>`]rQ+dAK;4qo4\Rt!!6%/2`K(iHLOA^Qj7@lX.nti<VNW4rL)K`@]2q;5OMr>H]_/Gl-9VjgDb&B*Z8Yh3]uqAOA-tl\qG.c0b;:C9q#_TpQ`k>2L^&f!4r0%coqm;FsnD635>:-+dp5&ZEc2+%[@P#HQ7k\dV=DH)s^!p;T&nhW,su+$/Y>JN?tQG]_)#1fQC%+Caq<n7UruclrHd>WcQAG`r#n7%UIh2]jMQ8'`Zhh%Fs,Ao[9\<MT;/eR8]S#7pVTPfQWJ6W_fZbeAZK>.G\4LtbkMCi9;3jI:'V<A]]sWS/4s!r%9hb.;rtnL5jWi7%ID5qQRI/%L5\FXZP,gXLOomcCAm[?1R&5P[IIbTt/4?U^-'B^Q`]/_4%YW`X$Oh\kibU#7>_$H0IbiEm85QchJ4UC,#;!bsH)e$b%pdN^/jc.]W:!U0nI6g=TmOup6pSgqe>++0I[am`t;e$=IgmptV-B*@@&."Y3Te\fJ8C"AObb2P`!._tS42:L#_uO1oj/q&4On2d[%piP-ia*-KO63ai#NRS][Yr4q4QbHNB`De[PCD!OhY0)ls+Z1$EpdEfr^\3>-EVQO[?r8GRYqTRn8E)A>;Ho6Jc+rn6pemAJgcJR,%UIU/bkbUGWhT#VQ7sIS%`Z5R]3229,U[^euYPo#Xo&p-9$Bg?W%[ZP&T`/8i)UZ9CEj8Q4Ct$)VnW&'7'$G.eI@`Y1<orR=?p`/1%710e*=DQ__f-J>r;=h9F-=D4/\ZlfqI0!A&'+LKLIuTd02#*Hif+:cU0c!p]X4$l2<B@.4#44o/e%jm33ecBRM*W6N#KO`a$((Db%@PETMW>5Wq_P]$5bC37l7WG7A4C@k?j;39N?ao*;fubi.@rglKnjTK<\9#XJ@uk1$jo'_:o?*Dc!94l;&IcGiFL_1M2B)]<SHCnm%\h**3;j0$:p^NV@j]P5u(Lt;`$P%Itg2Q&Ho6i6?c7*XVLQ0RMTN?rY[>?8@@m[)@AHUl$>3"S`Z+*E,`\6o\4''1@r.\aoUU_kP%`k'PmpeF8QPn[jm2g-^cs.J._aF.gI^I-XO@fa(6c<7EGDq;HFPU8*o?5FM<jVKk)5CZ=d(E@;9VGG,O?^)1Cq3_n\?M2dndJQu>%F)!ahURcVQd2M=k;<e3QX#u(k+g:R]cd=4<d@3=.*0#-u_bDRr9^8"?JUqbugc=boF)WrWg->%nUQPLAm<#F.:b,i(H_kn',.Giu%"flr5n)0:'([uBms,nr@OmWG2emXc_bo7G`$tOs5hNt,B6!\=35(q/ZK$<F\D4G*/*gW"Baem)QfISipX4>6H=[,]:`]B-/^c7mX%alqQ-jX0/mDjrO70nflQK6@kA3R6#_!oBMlgYpN_;]P0m;bjVjmbLU1`l&?*o/j7TAco?#nZa`Qe*k'M%[2Su>'t!n,m^_/=dWsL%3-H5#1*;^T.Bk6Ii.GkSdB^[@B]i:[9?/Ze`p.cNhg^KIKrmqO0-'h:==`7p>.:&GUg_2n*D/'cjOU.NL4mkWA76_RV9\nkQA1`G%:1YepMFDW6!\kn^%jUsKMcp`8-lW:,\bh-$6@q\KXm&/N$6SHoU$dV+29Do7_73d,'fje":jXmPad8N>*k-J'U_%KN#<Z)0iH2mZ%72)X*,>u1+.2-0d?1EfK<+6\-R$9<p)FrkWhql*T`mRA.P)$Qu0;"!2'Q&bfrD!nU*r-G`H\7;XgI:+6M"18(4Xu2)B>D9FJ`,92%+0<pnKSm$sR?%ZgojYjeK>YV:.^0B9<ii<&:M)oO+oQ]XjX*bnp%m>l#=ERPg^WAl`FmPo`k%@$(S=![)XC-.?$li^i:Mc4F6MU>%k^;'8*TYSdB@-I\"l%@sMpJ%(Adc&:6Pl@\QQ#0b%UFGd>p*@Um2W_4$p#d1XlCD4p^F`'%W>u?F>L0>FHIW-(3A^!1[$s8MqER@%kd7fSLXGFKJWJ(Z=q-HTiuM%RH9E.TP6/4[DC7Hm"2gj<r&-=6-i[^>+dSYUdgL+UBdK'-Ep4p*PN%gOi=sMAnV7mV*#[(h$oZQI%S/P*Zfe;"1CmX9cc^UuaIT%L4n,+p\6UHXR0e!'6:<Q#qA3M?M_.)>eQnh22j94?p+2V@/g6$!>2f^l,JLW]D3@PXf@.F3JlGRQ+%S(aA[jte>V/R`CrKRuT\g0`*j_h(0X9h][,`>s5M[s5B!>Uq7n<%pNg>3G)(Dud+eW0514M(qAjZ,lhog9X=dbTDE?2XAYI?]!Eq%\&hk4ak>Xr8=re3d2S&3g#c!a9h[:dDE$4?bEL\imC-U"ZC.1-,Z5r.EB)G6-HYXo,S4t`=?RPLM>\Ds@"CGSlY='n_4Sd2F1-b?%^pfC1QC'aU=RsJI`seuZnhEI)nu!7d#9F'a*<T[#"M*+0*"?,eG+o824ICuk(RN1/QkRAs%(Iq7k9.-k=V3)<Sir!4)N0HPD]N<G%3AYM=/:&hBj[k1KKtn-P^Z/D)K;%t*l'%@R`M[*.lm=&53lE*([nP)6MeJj45U=6]A3PGXfrkPDY-*FUGPkK3po\:oCH'8c$WY0A%orI%k^Xp'i-8'4]XHpl77WZjGCoSKD$8q:27,'iO.;h_a*rncD<gqMN3&ks>6K7k,i/#ieG*@tL)2[sEqt3MEHf[0Gf-C$QZ=3o>%A2GW_Y7t2\>9p&c`FKDQ\P@69'M!I)T0<I3ilUtQgt_PdA)F>Nj'@5b6srP[&Oa9NMKeLl:a!c!7CdE?GT*<3"KS/6Q;KGE7L_q,%9o?o$fX9e&M2Y2JUrB_D-bi/`7Jp8%3kIa#29Q:a*KN^&7GJEFJC6oOg;hc-16F<\cQBd[Ob'K+F<3a?Oi&E-i^lN'fHZ%%K')N^%",&nYHXo5VWCco2*I)+"%m0ojV=^;Aj;`]0`eDN^;%fq;VEE@^:IE6Dj#kJ)H+t:YM(@auI)H#gTs<Kol%Jk@>&rnmpGjF1;or`e%92ck/O(%BggrX!;l!s8HL8B,c(Gj)marb11hgV'bH;/[-&Lf")9]>%4&PB3a5,9Z[HG-n$+B/kt*gm<#UdEaFHph#6TF8#3G#"X@%SIZP)kO3RX*7t!r*Tt=#;:'lQ\8LKI[2,IiDE_;ZY4&GBfd"=\\5'=5q=EQI09PdU?-7qDo9&thES\oqF$,?9g2i1nLC60i@(bh$%E:1h"EM8\8jhit/@M.?UkY(/,9#pSXFsS;=N&r@AE6*"*DTNP*fb>a[*poSDSmIIOLbf[,URgOW/R%#i`HD=&F.8pj-,/D5/o2p*%/5di"4uqWu4Ot[AOA<S6(*LMVXZT9dCOllr7-Ls.?m.Qp'Qt^?&258SnAK$i1>M_L_*L)14r-_E>MlT<3u+;&BYSXaL0*K>S-D[S%Zp9@C;/4`Y(W[.lBssjB4mRj1_iYu-;sY_h$o[64@OC?HW>MfqqYJ.hR6Y!hQ6cej5(ab0OLgR:qX&JC1K'pOmU`2CqqZsb<,jmb%FOO8[C3KAk[O$A=Oc^"<FFe?s/"W;oNnWGHT+WqXq2^)eEG;sI,p\S>6W71u1.([ggE=@Z0+3sM$c,DhTrDu?51XJW:+N;_Xp,j,%+7)`PS-NM.rg`[[iEGhW[[RVj?rqM#'b9IS>1.RE'omPS3&42i8qj>Ca8!O>:k#im,(-1S^9./4,hg>?CJ5A?ZMc3*5\#p2JUt-4%3?6,m=N!L[Xm7[M(&oGpm;=OQ$Cg3HS]&MlKEK476jjmLLt!8sGjseEnR4g^34RgB-6=-KcmO!P>UVZ1D@G.cYOD//YM0k+X7Om7%K.Zu@d`p5'bpRL@IK&8nbn9:%g#gH$g#pl;;X*A'#+p*7T]X24p>rdNS2@K5]ZJ)(\U-L=jGW051ZN/fRu8#k/oKb0lGOL4l;%Fb%?J)d%MFr'(N(eE$CHiWR5c<HI4(2?\5)e]))]@1%VnPYI]>\C7Q0#La]:G(fkE2<1m+l7pU2mN9!kDEaqtO.4e#>P8X>6K12m.H9%-G/4OQ\C6sZ`2Rc]A`-n-F-QYHiLuT7&Sb[Qu]S01HNGA-8*tg</^0dkL7N(LedJ(^9Q_r@5]UQmPH8Wn7_hG]$md`o51*)*kEA'%#8XhAS6W_\o[:C%ocrbD)a\p8pD2n`dgKq2/^>o3W`oq[$$3gYJr45i"/d;;4o*/<EA@3E+h*"Vq<9bZWj+q0jSibL!D_%A4\MK"%A\gM;^.Z6=RW.hZ_IK`V:`B`2UmtS:Q/n=5[Vh69):DWEf?'M,P8pbBNfH9g$Cj_;0qTH;f?,C[M-d^c09P:_T6p#GDldj)O:q"#%i!)5\Y!?JfTj@n_qr@I,K^P>^RjGth?/)r@Y0#/IEAeiH+/YfL]!,F#&&c&D9c#^q<7eJ@U?JGcflWcs5.84ch2o_6b,,Q1lZM*0%f<XZ9:'g)@S#upOgd*ihIlUXa*J`7X`GE+>5E"\-W\.l3L#p`Oa7cm09c'ZDL;`e-Qqc`Mgo]bf`LO!UAi<ps/fiW1?-T5S)j3_*%F=E\3/=4Yc.<Ql)/ke:-H[<;i9c(6e9S_kE2I2\2f^95fF>dE,;p"j#X_-&$6`aMFFCD_%SNn_t0hd+"8(humgF/1=n82geGoEVC%#$m%mgdE@(n`J8^7.+eJ?$Hd*\$P>9)IP\<S(Vmll!ng&DHF1/_MmYW]M#hqCq:0c8GoC47"U%Y]LAH3fPWTQQqHYWO"]b7Zt'8X%ATH60(kC'/b!S&*Mo>,l@RK[):N7aGETc25G]Pu0\P)\I/Vi+^fD`Gi;>8Upi?ts<UZ%G^ZY^,@)Gm.ffHeFf%g=klOn[3\ZC\T2%eI!hr$n;*t\PDY92l%BS8K6iH;r[2N!=fc!-nF8dNA-[OY_O'N$/'ZSrob.)+n8&bT"0p<Lkap%k0>tc-!hndpmO;%m;b>d_ei\#%f5uLR@No)>B7^BJPJ]&bCNVs<fA&f7bLeYJQERh,odC"t\na#FU%t.hA5)-D6B&\A/h6UTDt?M+3M.2J5_f&TY0-WIbHk;Rpb]gn%QH;`X9Pn4Dj'82H5$':)1Of2+Sla4X\F/*C\4j+eW@2F]ng2_l)Z(Ht.l"pq3f&FghEFa+/)MAH&IS.oDa'<H/@F+L[SEE`o8-56%Gm.Kj^)3`JANIR[Xdd^7BAJN$3br$TKkETX8UUO8_PtOE#c!`0gPO7UD7%1Hb*[@`Oj?%Q)XEalWL\:jmFB2i,.jeYQ4n&IH/cZY%g5mP:Tkl/a9(SY^LlH6SdoT`$n9dr%S9GBeA61$)Ip(7jTFAI$2(jV%['cl@+p4&U>ga=n`$8cjc["uXNmCD0.!8%D?qke4#/c?3%D^%P"m8on5\>M5%W^"2*31]?O*CEQ!'XtJS:$m%ecfs:reT=3!]<h&UVu'7Lj@s3!&4fHN$qWOnW-_5tjV(Ad:07d.&%lu(?"[C&%mL=BF&J<f/Qup5O$hm\GE5Ps8o<I=kd6hi^C\O^=f#T68VS'(mF)H.I08]:T4!*:(k;V0"ms>N#EOX/5_]A3Fjqso2F^9)e6<8?@%7N:NN@Uh>:\Zd,4#B\/1`7jSI/W\'teo^^S0hu#qI,m7<-h3]WekV"W/Fncf4'bCY`E"/aSH?6%E]_\3_SmcTeMC-UfB'E2hql!X%4Z2E(^7Pfe4!qjkI[Uhca!0!",!^E`a/?#gj'fIGQnI,MgI'TSZ>2t"@oHdD\*pfu6S.);Do&Tp7*dcTQot@&9Ja>;B$@A+L,bu:%X?qiCncooINQbXk@^qQj$omP%-8,2^MW;9<cZp>K2psiYT%&j@h.)7)[ZO-8Mn"hFJu7$CM"0Z<DIe?3o<k^<1rXC?]"-b6>Hm]=%=1ff^=lb9L4`_l\`h)]9'Flj1&2iZQR,>WG$gZ,51UAuUHUSoa.=.UfoW-6?gK1"+^M_`*CV/<`O/]CDouu73`qoTsL2ifM?-tH/%n.3k8/d:ZO4"hDQ_t2hN$sbeIVjQqiQi$MkiP^XH^3mGY`Ok0/,Wta>HL/OG.BM"J(aa&fkPeJ9[r_/'SI4,Df0;]GWf8iU`15BP%B8QSGl#^R`oQ2"aLM^Is;X`,!R[+j:!%XCs#E'2)J&@J4WG-PCV\ktX2tLJJfm>JV0F]\tG!4sP3\L$m3AfR=bt?_CIJt3E=6ao*%^j=3nF_\lAiI/<0EQ_`.hU2!k7&S&-n++>'Vk9F/PkN%d!PmkZVD!VQ%&p_W<DWF6i6STcXuUXAl8`>E5RUFM?,GF#'q4Q>MY.Xd%L..BJKh]iLT.Y=C?L$)nAs&c@OWK\Lr1Dk`%OnWs%teUG'IGlqb,=KIE\ko3Al;m'kG6Z3:X[?Q63nLMdZH,)^"HS&<D6FsG[ON5%=_UG>Ra'J!FVY!ih8LRN$hLt[[hLtB1V\1a9XQXSUg$V=LZI>e^q@;?3%_ifH)%`u[q;_InMFH2IWgu*26j3_flEl@gX;WA5IT;$%^@^O#L7B4']8Pj-fN,fcNBH0]_Z9\@eV.9MR+f#ErF8(#aKO-nIgjnuA'6pt>jJP;QF@k6=Qb4nc50-\>-Ka]=`Kser7&8g+DBh:%.L!.jZbm%<F6;R<[o0=i2KHSN*.8_Za0,/[Cs8Eim.88%7X.r&&@1N;XuK[0FfMNM.mk[Op]:_EP##@Scpo!4Ec*6o34>,DAlJm/%8B@>Ngo5fgim0Vu.E<ne0&GcNN>N:R8$0jR%QLh8muRV=cMEVn+)<SGd*M0+;E:L/V'e(H(uS`8Mn*BAK"nSSS=dCJkAMnnD`rPS%&[sM]@u6QPnrHH1-H)W3fkLUud?jd<!APn+Z)2X%B^O0g!VFR%<jMcN8?+*D0^]pDa<k*);(l=j[[76>Rfhknr\j_s]K(Ks\g9i^%+E%`4f.CSH0]BcD0.'bb,7BSl#EU=V-9;Nr5K>5d*3C4`':T*VP)UHhq\Ge+=O.h!>3(5-eENfWnMdarlVbIJ]Q!7Eb*NIc#,2=P%m\P:S2mU-4V0q6LXP9*4V3:U^="`SZXUf?cHdPL^U2S6?k,!HfpK)NW.:6IR#Kf"*Y,F9'jI@_XfY,n?0nuo:rRs:O.capN2IbY!%\CWA8@a;*)h)H>\n+H!/g6Uo.^Vi+.Y2&=ZJ#a[cfh`"LqXL-de_.WbNHE+kZ_9Fmf.T<u&[OL/EN``^_B'IYeBYaV_<Lf7oaCFA%[;iBWHot=WfqHT3Y@%4W;IeOnf<6,PJ0a%<(I''5MKO<MT:9d9GH,rOp\Mj!S;$,O[[DU*%6^[<+5ns#CbD:9lPGlAetBU7ZI0Ah%,2k\9MYCGlGZ35EPWHM0c\6Q;Xa[D0a4H$8pU9P`MndfGPPb.M2cQMm7U!FU0/a5t1/b`(YFi.p&ojtE-\o1[oTY_IrHrT$*Sfrs%]+m=>]e6GClPJPa./U!L)u'3Jhs/gaXL.Bi3KJFYpc?"<07K[s.9En$Hi;rBp$:O"^(r=-Nk:@Uj&8)*\,(7/5/'E2Sg0`"q-H;2%]SFjIgQ(^p$d!bb*%C1;V5&D9]J7US\,*M#Q.BDl#%;Ngme)LoDr(KJn&i=mnRcknp[PY@=1@W^^+PLUpoT#4h8e-I/KK"\6hA!?%/R?=3Cas\(:'^Oi`S]qsPPNkZ]m_!n0s5m%imjP'NcfNK?XR+>X1Fj#S&4UdCW"cU`k?guX`0lg^j3+j;U.gWme)KVKmZLJd6@7>%F.ORnokWOQoH5%Jme(@+<eX71g&p6d]maC)J6.VNk?boJ:u]0_h72(?%^AiK:@l#84?63^p\M;[[qteF^\EK(OHV'HaEbA%j)=U+%.=*]1?GCa(d)3mb]%8TA0l5Q8D"CuJ#Z*RkqF0e1[!Jo_r/OKdX?61Q`Q&(9B%OJ2Y?rQn-rV7608]-)^%`$VIs,]+p\Mi:LL:m1%]D)/U$\ng16c-[sbCL9^A0r,P%P]9]XupG_bm,6#WNi[59]!R3J(eAYV:G'D0j-O),Q#SqYKMh@F8\E:8eZ/BTFA$1gM_pX51n6C%oi,dADLUT,EidJ^\'dR][\_.#d.DthBmsr9@9iePW33,R9]^84^/W9Nlro-(]lH:4Fa.T'3]4:QI6'T?og;q#4o7"?3VHE74.*5n%bB)Cj_=&?A.<k9cqXjCC0f?CXSXJWf\)#pXB4?/drp9/R^2UeBIos=mfpS;A\_3@<qK8Y63ds8\=hHE6HsNl.@qUu=[OmOM%@=0E%r0T27\2a0Si9k'oS2m*Er]U+*+QUP"S$p#9E&'9KI0\mi,cr.)Aesj"<FK*6=VeG1J(YT\7S61fcLK;WD<G!_m+ULj6tKj$kS>O0%jCDFHs5'2I16/MW8VSY\:"[&(DsYWa`t;bZf^^SWf@0&e$g!^-=/q`s\(;+uQe%Jj)HT20HNY_IJ"MGtWurm)O6<:QmF@qS2"]mC%IthR()@N*Om:U$QH@5)MACO^4XH/pBm<kH!H+(2XR,`tU9KbBMQKd/TS:30k$d`?p]/%%42`G:1^X$Bkk:)4QA(tXS0e-mN=$O_4%52Rii'99hM]eQpLo^Te,7A![!01j=;QhB5PX7Om+:#I_&E]_%M-1.j%l/B\5qt&-(CV/<HUD[!9>1kf(:NIK45E>*Y9VqE_R4Un\%FFE<BcBh-#1c_m&4'(+-gtg]u[sflUfZ7^g79lABf%nen'C"WLBhl7mc-6Ueg#$j!j$tgJ@Lh9"J[na+P#oqa1XrMLgIEU3(_Yt2%AW"2'`)]P#F^^$=!\p>HL9IY!c7TX7B[+t<H1]"0TA);'fDEG`O4B$9`If<Q`kCg]kc@VY=ar-mIBYGL>CS?mI;gh$;IfAi)=O>U%V>L)k_=M&PFRRV*E&:!>'mC.BZh:UA:Z\,hR6,^[2Y,7cpJH3%^p85U,cF37-7h<<]@qgh?R=:sm>nMugRi([Q.rT(LL960$tg8N%ATF,`q35<Qm^*F>kEA0O`f#&Qa7Rnrp?q7S87m`5J$hEqIsCZ4_pcr<oMh:-(34;jT/3Pb@;=:'Ur"!?Z)q/MlGr1aE&$WHaa,up%=dT6U2.1PnZh&`["-(mn98h%%Sn>t;OiiHIo0lkf5$*cqo^B=^7TWMqc\C_PI!%$C4dQX.C\qJQr+mLE1f_^^\NorL5oXNZG6rE/%0+?1'c*)I<,Cn%NA(CBS31$.2[Heop#@?,Qb2+ts5a6)VXP'H@R"k^ll'$`#UrJ2o!1bV^i7!IBX7MVI$?:XA>5%#:PQ:pTcZO3s%j"iJ@J438]1k:X8,at:'lS.VCD]n5r%'IDlI/R*^kOUK6(RM`>b&:$KZRS_u7@SBD-@F@A)=;'lcP1+5Xde4T)FXIeC5o[SJasO$%qh<;Ae2kuA0]mY1^2P+X*!+@Sc,#S>074nf:-?fH*D^qegoSq/e9s!dc5t1PAaReu.[g7/>BMOu:$<D*)aBtGEi>uPedKC7m3"VY%jJ/P=VN?oukH8G/a*(KrE8;!C$dZ0o^L[Fr3SEnqF-Bh1Tq;%fi!q5](4fFf"\ELZR,Tj'Q9=oXZEiGK[:+=M[#1,%Ho^(X+.;[X%0Upr,1k:rU]#"jt]"V=91p>tpPbtbFiT6=F7q#LL9mbD?^flh]gLH3I"D_,1%lB@d]=^7/X#H05oOr<Q[6u3r<bUgRig`-FGV&t\%D9a?CA\'FXJLZ)1@:e=H2_lQ@p6Kf6^o&-a28]fI^j^H-Jb8H2EUb_t0#NZ),#AIRj+Ak3^ALBI6BBUI[X@B^MQeQDNZAo$G8u*f%JLWato+E#qL[1[>I;PoUrp,Ku.j+jDltD7P@0W^9dF2am8+=qf2PJC<=a`Vf4/6F4`pLOHRcPld<p@8TW?30u%Y<`$6DOu]R.^YW%1euD"rA'oir<Uq'Up-%\o<$?.:LjMdV`4CkrPQ5YL%D(<Kp[p+Lqkd-LEp[ZSGh+:aWEb'-C1Gs'9fo#Vr+3en,P='(-d\T->$I#%"0>.:'6B^>,81&'SNbZZ1k^\8=H\()AtpLb5fD>Yc5,_uB6U9r\HdjO#_!`gkH#NV,1e)QV++Mpc^e!:p,<%#*6q?,#$$m(:BIG]%O=gMgFg](3aRn2q2%J_12&9$7?UQoPCdG7NrZ]KF5g6F'^PHp%)@NM,0;=t`p0X25rZ]LqgImbPh&YUi90.QSEmB&\*qfG"P]OWN%^O"b4S4a*5IHeb>`kg0`V5m1b%W?c",?gU\&`g%[;uqT'Y?*XL,q5%pI!%23l@u?alqUq8cu2$?*803:'O_,^'%9qWF]HRDp@.@o%GDE=Z8?Y#S7AfceDa&YRc+#]_jC]9@Li^Y4Md%:@p(cYRMkb]%MfsR.K6'Pg0C)PZ(k2dnUViNQ0?l>r865/0o"Mb&Zp-"AIm%.Y%\Ba[%]V+-LY:s-rW5pJ*j`RKDcGGg@r;pM\bnt7g`1?Kk!u-NG@n.bMqnM6WDA[-B:^oQNIp+@)p9C0<a;<=3WQ!Bbg7B^a(NZEi%gTj"Is&M'OGI;(a=A:HEkL\!;p@\o;e%.'kXRn'C>sB:O3:43V*T*A,jg871HX52]n'.E$h3$0_m,l!#[2a;Q:!("?kgDOeN=F,`%5CF@eZc)g9fuIH4piW(j8'I,(pkbCWrtFleRi^7im.K)`bi-C)c2G>LZ\FW=9!DL/h>4h\FW8li[9[o`Cia1MnTt/sO`[JhYHH*d%f=O%TX-))nGC?1od-H//,@BjQC&6BMTrAPm$;TU_8%f4M);R.3LM!Gb=0_DXd*/EHUS4*fbRm$@)4FcnF$m9hQb,W6^IN+YFMkLh%92DdldL9>[0XqmhL#9VTEJa=`6j/T\_u_Lf@@>f1N6aWr'1.b3#5DF<KZVG#ZOO&'c(ssqQSn0W$hibW(](]sM87bTL)VojSL2-Y%XLdQUT$Y8f@5hCJ>pT--5[t!^3Y8Wm)b]UO%:J[b7feK\492C/=E>Q(MtI<>S0RKGQDPU4hO\pLB'B?g6B=6Wn*FW4oUZ9ajr6nT%.1jM6C@L.\UototLZ%L?C8:/8MB.5QD%bRO^r!0q_DX6\%<Ait)!%lR9#pO:Zd1rC^IR8K3AinC(2*X->-?$o!<:,q&b6>q#8sa<%Y7B\5*8Bk70`ERfCi_f;@=7%-3,u\2@8$D20VEB'kEC*?aP@AIpOE`I(h%EZd:-4)bam)9U?_oT(8j>7T1ia-HZd4%]XaA5)KMe@%l;D^Aph.^L6qC71Rh8_(AX3,AZX3:84XRm'lS-rFo6CT.D_D:ap0_eG5(Udf''/bAZu#/%YZA59)3%Vjm,*m2F!/)*?`-LkZ:EXJ%_"cPPr3aCTJ+e*^31T@$I)R9+q/OFpB7fWWkY1$hRV!ae@d/hV5/`YoCB[U)&\S<;(&bG'APs"o*G+@#,SQ#8jU'K9h._Y_`Sl)_%VuRhkc.9ku*,Y^@fgZ1TM_En=F5WC3V2MoJ+25i&r4k`4%/OrgIt1E3OE$Ug5\?4D$SM*)cnm*J9)%oA//*k64'pdhGaQABb3]j`%'?uh%K[#Q"8jY<M!2e).%Tn:l48N`\.B3f?^"\iEmQs6Q27Nr-UbLE^5sf0ql"hl*_)9HcE]5%Yf%B\Or@]41cc5-P-/bl@_]'-B%#(DR9)lVSar$J&!A(D0MJ!E2%h,6U5=3l#ue9R6^9"?uSn8$-mf?\RUKiC)(T2MUC[@.]bp<A7Iot7FPL/*=,n/riK:H<">hpY?R%e*mdKT3?GPjr/2/*$afghpims/NU.s%d54aeM.q[ik"K-:*#74/@d4'm$o=Z+YrQ):HrEGpEVecJp)IXGn@4D(FnkBW/8)qC%;#K%h'&<*'3<A?L@_;ln'rG$C<SJO1?P-]&2V]t-b@C&'ou;_YfmFEDg12(KOHK/#KG\A[W2)U-G0i'(<58e;CB+MgX\3CA^6!\P&5X=%9S3KL1cOqfJGWZ7q]YYb=>L)g@4aBL05Rh-a5Q4-69PZIL`@Yc,UXNZ-gY`Bh:B1f"qNDZCA=Xi[,?8Tmr\iDJVs!1,=.WuPa59h%cs[nKqN<>=b:R(%,tEcB;Z=N_\OYh46'[r\"Cf$J8ri3MTgEs#-22GIQW)#>Nl.2^aUuQY.Bff5l]!4Nh*:#R4_5C98,K2(];NmY%(q7/-3g74'l3XY-GQ5$qpU'L@bGdp\d[hlDC__"t=&<XJ$qegHC9<F0e=1UH+^[@Qrb'n51!P.Mpqbk!R2.(n/ZC4I;6fcO2Dn'K%e)F@'TU6Y0R:!;$S,'[2^/W>1s.pO9kjn6$HuCgSOCiWRT^H98&k4,$5](a&L&Rth(u\1]8?]kEbC<CplYJ[;3dPRZ/n',?NXs/7%IltV1Za'b;Z*B2."098aF=h&0:guf>EJgEQd:E"uRH_hW[A2'g7pB\!&CVRs0T:Ka%JmX5&&*FE&&4e$T<sbF9OE8cdQ).@1aP^c%7MSTW/ZV?1dW@)>$tWU3;?[fXe;P`3EZ.Rb6WTjJcH)G,;2Hc[&sPp)<RR-(*PEgk\cHAO7alIX,\KeRf$^j5Aon%]Ul6K)=C=D;%L.#rO)*sU3<[M6fn?rXe_m]bKeu?S!=b/,]._R-@7+6gu<$>b=L'!WZYS,5LaiLbS]h<rC1D9oBQ'bE*%>lumSnc,!6mJHGW^\;G%Wks(>)O)(8U7)rgJRQ?@U7.2j*$R59(f2Q9ElQI#"GiW]A].FsO`ZRJUmm*)n%hL3<X8r5.&)kgTJB4XYRKDG20`'BR(=V2M38H-%8VIdZ=+s8BN24W">X?[AL('!7^dFWQ,f"a2c3?lL9n4)hL^t+UAEom!Y5sS;RXtWAe;UA!JA"c'BXm%U!,>%]!=5Q7dL(f-0%50W%(qRRb7@+I`V9guc):9!Q.Zeb79hn_Gk:OT5AQfg?OX1p/MDG9tcrJ"\(kkO`UM1Xk$`9kY\l3..1b\&iV@lHU<@UjgS[DoV!eZ76%n!V[h@Rs+[buCM?__gno#+oVh,#/-qOf;CbX.ZLQ3l#i3AUlZa'493#(-$57:RSFV!9@])<AT6+la/kF5p?l?U;0BO;mDUR"@]-:%LGHXLRYN%PG6b4.^l"qa)(*%rlU4nV4&\u_P>$3r3,*+g_^+FO]9]ic!?t7rHo3>tle#)K.Gpui;q'pN4((TEJ?[V1Y%AAJ(6QfA%)M"^c+^G+Z7U@E<cQ\WfVM#ci[%p8q#=,1XCrMM.Z'K!4@"'TN$d&l`6oraPMG>Z2po6WT=<`Y9.l!.lW5OeM]Hfto=9bS<-q"(=%;a`)k$k[2H"\ch%6'$UA;1W==6\'?Z--^ulNljWT"!nS1Q:`tK3=D&W!mXn(JS@]U6ee&]/#U9O8AM;:W(]\s,3pHF-Sqn**'g52%$1S'i<7;Oa*@PsJ?iWW*;hBQ#Kk6HZ!eO!+#Rc/<,mFH??na8OF-&6g-]T1_A512b&@)Y9^_0)Ton*lC@N5EkAAaK7-NKW1iarCr%4I%<%nj"U#<CD*\;0>6JE/F*(BF@Xuedq:D'<k0TW&-L:7n5oZ<0\RY4(Es4]#3?7@,gg=BkejN13D[.&s/P]+<gq@<7+Es=G-b2%JfoRq')%,.E&)r"Pt;lJ)(Z@g6`1P/2k397KF*GC-AFkZ/=M.u9c19U,'*k-CT>7kKM@=.5`V3UNlb7V.70G]9jjA?5T,iCZr"!.%"q2MF<(1G@d8f*]:4J#BE#R)/Ui@k6E\CO&;5+]])h8cY"L=]2'Z2nd+Tb;e"Zdd/U)46EDr=e2XdS[UKXH=1&7)PuKT+7XkW)<?%b!\Qt6N[sT$*pG$)O:EKM24EVVK<WN!&-I:.+U]XcPVm]+RqbpRNUW?'>CM("IXotPV>]c,`mqQkRt"03n%NiJYEDtUI3'-:dbd+%$G`+'7!9/3&J0el$m_lFmf@(NWJ$QT9*!pN.KN#93;j.-MH4Cr7P9Z+$fb-Hr>@:D)0n6,84^KtU<"etUP?pk8,s-4b)1dcK7SuK%:_Z3lZ_;.q#Ri6r%#pNKdi0J.ZN.X<9Q/>mOC*s@6),S,$IBi=.H=eK2$jGLjqO3$C)*(7;2R.&!UQ.e695+_!.fM_i_e1'@pm*(%`.T:$*%YNC!jE55*5QuV.5FI'R&q#g,6q%f+u<J9NM3O),#,nTA:t/I*K^Y$Lc$F.dm?)0.hZb*1^;cfRKD%`'7FU(25tT?W<@NA%)Fn1-DAD6h)^3!He4#Te^_@Ug'NbIdKFcC&d&R-h"_B'c%YCRWJrIMY*KYs8\>]RpYf(&b';Q)A1%lM6ThMg,Ts<42?Xeiu8;\]K%JD[&#@,3.=5rV>+J=3)N#DS%4K4u_X5Sm#mJ==U\%^637QP$*n]-38$k7LPp0kH,')5q6m@g>c'M,&mMTkH5Yb@!@MQH?(W)Q;(t%`$1l`d#QX$N_YO-;-8Z%PD0:$OqN@`1$&SH,1'RtO+tYf#9XA"!gY#.,2K"8,jMH6Q:3"EaS8%Z;>8Ka#Gf/T<%9[t=ef/TN`69?%";pC)6q.@hE,`l7MZi*iJ0H+[)##hJ).W8O1M@%mR%Q&n-&O-M$#pH&cZ%B_-j-hQWHk^A(m>Yq=CFmrOIKt(%8A_s7F5<TNqba;%`W1F>.VWST(aq+1:IR/a0TN-LOumSrN.Cs]aUX6+KdXT,`!Ght%\p.9&?="o[4MLPFf+Ku0BsaNX^J*Q;W7HpPX+2>-&+%.%PEVG%%LNs^,d9S1/i-'#BV5_gWP(P2$s@,2RtEskO>JH)'Jr-!+;'ag,HRVsQj7Rgcn^+Q%2K%<J4fp]8[dga6Uee&;eG#Y6tV&tRZ-ru%JU02@+&kSu"le+uY;qe4*[Sud!+[;Y.jN=l)R@6_iIbY@2IMB]YT,%q&;o1nO"*^RkYNRf%b4:;aYFHn;CWh^_[26SG$$((MZRQg%a&iCN+\2p>La*-eed[=!;^.pVArQ9\@'7YXj:E6`=ifT%PnBIfU4m?60NAB]La*82%LVbW8R`)EO?s,l,+fDY7RW8mV$\cUUD5j_%5&qIdYY85E-rZZ\;d_Ei?)!`T9F/%E/.i%p<!JP1e@6Y]ml@=sA1p:`$M$Pl-4V\[)6u"`()TFK"aD$s$U5bI&5-DOBO6hp"%AlC%(fU\pfq_6U,8_M%6'/Dc<P]OTX?g37hNQ<n<`!fCVF3cOOUf$gb!<D."pWR,_CVoZckTS*WMW?819+=+QAB!SUE0RM!`08478Nu,%;V1-E+jsRC_*l]b%HOrI"!/p.=?ob(R69Dm9I2MC'EoDB;9ir";DgtEBHlb96;^"*P%rDf!QOIh?m(mo86JtrR>fAZJBCED_B)-"%jTngB!udD5170StTKDIPQjsn$16)CG-qIm3(be7ab,S4Z1AZSZM+S0WemfpmOqp1"+M\XIS?sL)Cf&HrC(rMSZ-6WRW(\+IM8<_S%.cKAZW/!)PJF$hI.1@3c;Bd>%%6_'!YtTpSM;;mEs&1Kaog:,n!=I^qZsjp-"Bl#^8uN,tN4DQR\3UGl/i83BD(8WkYYp]S=1Y((%VP(7ePT1>XeR:lJd:LH))n;j+KEY=:h"O'j`Pj^&ZNNReTao4;9I:NT[);Ar)%BB^qF+bEJo3(1="rs,PYiEQ+Zfaj4:Im$0WTgg%*th=O6:RZ<%^2"n.1Ng=Ta?g?U+'p$MIJ9:,lm[J,nApbIB+"q$q]"j)C&N!8"co5*K8!'f?sp7BGD(%U:Q$,!Puk@Sd\>I/5FUS%\)\/(Sd>[Qpk@L.0Ml`j3!/6(U];l7%#7-:9E@I)73Q57,>A^W'YmZt&2f^[7"t7k1a36r,$@.?UhFeC.R>n'i$_#.<5;bT/jnm&%dYIl,BU!0;JF5p=`9X?)r?hqT_)Q<Q\[lBNM$`ahTkP&L"tMLWqh=t\K`P-u[/,WVE?_X(VWJ:"a9i,#""@X=,?lU!:2!0fIi&Jk%-rH(RTgT&5blDW(&YdS]AV.f/;2N.F!'B58UaKOVkh[Ln"GZ3+TKeFp$Gh\TdLe%/PlT.)r\TbuRDG>f&a6ggkQ8=d@s?]3=9?&q%^1TD*7SO&G"Y<MFLM,li;K8Cdj;P1mJYiHJP3BN:_@sZl@RKRYiK&MPA83#.T0Q,Ob\SY0K=7a'b@h\/Y)Gl#$tqC=%TLONY`*Wn%DI\:08T+Yd@U)<_,\gRS/e0`I^ej$;6/GZ33Pf7Q7KA+g,(+I%?mOO,N)X!17?ApkJ6%=#XQXa/Em12-aIJ;6nF8)uq6-0=##u%8%8%KA%KJlgu#Ugk'+\PNs+fE*\<FkC"MJ0nn&QDrO@48_4<_,L=3q5$==g*cRN658&LoM)RTKe-M:_f6f6;pU"Zr>@T%UF+>@gPRg%Zn.*Y#D\%oBX.Xu.KYn:bS`#`?uIaVNiBRs7#=Mm"[IfZ)2@,(fAq7r*^O<l=+i#!l^I.97d5JU77Q0pi""S=AH8M[9hAe<!u6/O%7X))31S[-g32.;%.l0SUJ08H'-D;:"_)eM41,^d(<+<_53NQSO:b@=F6q))`()[=6$tP+"99h>E3\pQi%*$c4(c,j\VVl]mi?=%o%"?H$D`"k3&&1Al/+67@,;0.@If+$,M5_5?'16_j?FL3eG=bRD_"+uHO;T/M[74#.B8L.*?5F.DJb6V*&!Rci48?&:3:2V0o'Y;I^%8(Z?,C'i]HNhWR/lP.Nac)F-,>V(Fpd&A<h<iErUfEmc/=<`o#Mg2G2G"hP8Td^BsYgX*Ms"G]sd619:\gBIB+[d*IN80r5Xb+Dp%Pu79Cf<9ep5lmG)3cdM7%W8!O*M!J[@gf`#9P&r21P[:G)cf:3%kL"8#RcH.3?($aE]N@0PVgr5a^#l"W9$(*-k_eqcDN]U<12EQ%\5kAbf3"c1Qr\<@Tje>P)V8(Y2n&'tZ:k`#7g0\3Pniqf.6%C1,mX^?8;Io2&t-8r4[jEoOQ^rfTT"&-YRI2F2Nh%8:^(,-,&<(K%/;-p4dhH2`VE+P`c#Rk$8]Wfo7*ui_$^0k@TN/W:_E;*7(i:@gD[`$WLiD:PA<c@9G8ZsEN!_h8E]>C4$qihq?laq]adl-HSN8ZJ%Pa^X7+S1g%,I3j\`=O&M/S`4:Bck4RiFqqXd3p_O&9+#')%9)L#.ihn<m[O--"uD%\HL!m8sk?)A\.#S7kbq/Nduuu"0?06;hh+3%<$F"70P#l7\>1#kS!j<lE.62`&IMW^kQ#"^)*>g(JRi3FOmS(6Ns5^t9C:)]9Me+W!sLbgXU>+6'cfHu8jSfY9I36;c5$L1P?9$(%UYKfH'FY(GQ:g9h<'k^F<"(6!0o%'jb7lF'9nlLXD1EI&-D6fe40J]:.<VQH-p^cXjTS.BIXQT<7Je(J"PaqmB`j8W?jU\1?jUOr%<$F$j$LS_R:0WMu[)[_MHg2&_8KqVA0h`9!ZKgA]LsA4`Af<1:]V4dh+btlRd&r/'+?H/bk4l#(Q\onuagfT-14rLq?4=EO,bp6L%941;,7dq<'AJsl7e;?t:>fKK\B5R1>MJaqXL(K-i9I_h1X)Re8S\A4#&nrQXP#t%.$;hg&*]0`ZTPt]9S=8BGj\S<3]3\pK&!]b/%$0d#:"_j]5#'?Y;R:)KM4W/O,K(8tK/QdVe)&C!r%&Z0bb>>kgd/=A/;fi4$'BLG?K_?&o<2:Nd#GjD#,2HWF,(WVB(grct:dUb0%YN[`2eHmZilUPApYTb:GZ'S>VL([3^)$uE$TqK/,B7%'2mM;L9D4h/Voam<0!+GrQOX>DGCmW9SRAb_D/IAci8gc/*i#Q9iN*ENb%L>o'JQ7u+IKV8Uc^JqT<9kL&mq2FTratt8^J!*)J85>Su-;SMbHrHm?$j;=q?)rXWbkRFL<<+Kmp1R(*%?+hYe:?NYI>'X1P.iE'%,a!pW<.5OW2.RNed\%KCJ-THu_]#4P#-150&M!3k3pp#sdrBl&aqU-"T84P3I*Y(':*mCVKI(.CZM,'?`DrX#[]'Tsl:=K+/n,0n%bdMY5kd9`99e!#T,?P5&TdeobMN7"Wi<G039jrDO\I*irK#.]?;)%bI<='>-5S&j-&f-HN/9,mp.H1B9?RQQreCK.3$b0]',pKpV%,g`WCgFsCY-qrEKFs*Ng*le9W1e.Gb/1L_SY)H[6/2;uZ9r:26CLH"o\">XMNZ8O%1kY=,Qm@#Q(C3+LFHYGI5SGuR%/5tU2,Jhm%23eJi/C?kFZ"d2`"!#KT.:Kk,K,IXJa_VrIL'@gIW%':E.%sKqAFC\n^ratf["N1hiIFuf;<022"lLfmFdFD_/uk\`dT.rXDGY:>%)(fK"A82IS*pm\bD^#W[_Uo78iImrFe9KE#d:gEQ)85lC!^+;0Zq5SOK&1ls'VOm<_G.6djrm,'R'W!YaGcj,>j/</&rd)!'V_<`%89$c!3'YdR1fSC^.)$jp;98jqbOdWV<&#7NJd`>cDE=LTN>,5-AJdH?#cT8a6:*4GXOe_>P64H&1BM6RD&I8fA.^[W`![Hfh8"kT%R>?lHi!((k@`Y:[,)9-cgtj6?OQSkt@mctm,qP6VXJom2Yr[Je"H2ugLmn_7=2EF_&i@OG!7#`u[KHeh%^e.%R=ll\JU;R9<Zk8'%D5V(>T#u_b8cfOt^S$6Z5G3><6>?hr;DntB&[KhrAA-'+<"f!f3mhL1p5-k?5fXuaaLJ;6!6W4k+"Rt#<$47(p5Q.C7L(dp19qg=%qoD<"0Pr9?2',"8a=\E1:d^m!TX"PCbfV1d]<P$VL4i/6DZ!lC/Z-BC'<(s8,*i5h0W?@\mDNM&LmTNQQ6R7VFt4d<.]d3e.KF`g%#LRKG$H@'WaJgEfVMMhea=i((.$d:ja!1+-@i9R>&9a"78FA"0"@uLfpQ3]5GgTOs"@o3qH'!ni6Y$P*40"#&+,i<;($71R%Y5RO%e/QCOR##2Y1Bk!+BLAHsQ;.##i_BgJ73N9L3g3P,A25")P&VogNe83B<8;\\co$J_;o312!<jM8-E\%l%r(pP@o$M>q'm]HEC:s6%TtUMje"&`m689Jq<@B$"(QOut'GBUIJgfn`!Xst!j>slO6n3f^aXG[Ko#4K=E'\`pFMnm)-85W/91Vn\&VZ0s^l.&sPZYGaZml;[%#)ge1S04R"L*\TI";,Jf'2*;jQ6[b-+q0B!j]Gej7U5qCb&jL^!*Dr6K8tCSdLOXk8u%Q+6O=1^)`/F/1>.#MlQ+?B"^PSU$8OZP%!&D@0,Y)Xd:bl<b]/Rg=6s64sHOW.?"qpp&Cg0gOR?'_#0WY;_>R[]%^C0$8mN2IV"sjCH!J$H6Ze\^uNFknY1.=H:Xl:\1W)<pu%+A,7Y=bd,iK>@`683m9ILULm#!;$Jn2[-la._9en&dl@jf6$05a&/i`@Qm87OuX_#NY8+],7,)1M*fGqV`S0\Qm+t*M$#4p.Bh/P%NlZs*X:=pK:h?JkTT]A0Yi=;8Wp,sLc@."PV.(,TQA?fM<-7WgjFDI<kW-T_3%>>>9es8MZ&DLT&D/<0(?hE13$o8P$Ta2s_@fF_%+b1D*H2tOBE(I@pYEHj6G_@RP$GOdiTJ>HX,Sk3n\iY*E#uier@NlYML:e%!/8jJkSgY!`<-#+@DB71\&BTgGLc(#<3+09NoKiq@%`X'mEFHkaNVTI%Q"l0l^!etBo8fIOuZ%2Q8W,7e$<j7OWp1OoVFf,Pi.te6Dq$!uj(Q]Z2b7K<-E!U.4ilKNg7`F\Das_^ja`n4=%d1C!q-K1@['?<A>'jX!9UHFJ[_jt5cMA=q@_7#HsU%+)QZ\CM)7QhA,YQTU;,`8R3YDL%fM29+Ze$oPsLk[aFes,IP'IN>qN#g?6%7D[2'*Od7i0VWL9Ug4WbPEC$nN&KDS4YfEECBY#?Q^FV/J2)"eMN'kjB*OYn(_1LMA[pZ#"=>A%">!9p)(d84cKh:WM6')fZ&?j/%"mAotBXfdO]LFiJk,"1*(O<J^l\F=LM$u]0e-[_$?kDC9MF=CU18UFair:CnD0BI1Z6d133:Cg@[g,NfqiBgBgB!:C,b[l2Tb%Y=%)MB@AIG\CLT@orcAE5<f+Om&ZXE:A(S,6jsfJ5OUB?u&ekJCOTaOgX>dJ^&.1KBa\,@AaF:SU6Y1=U*CN:?XjOc:R3F?J+g@-IZ$%59XXnSV%/I_-G>>/7aSE.<BbF^6HiT_B6"<'hR\,ddK=@@QM#8QVo^sm+i`b0rE1\>a'G'r;#98Ac'9oS-i8D9?or'NZ`hW*+r_K%?k0JYSr(VqKWauQ[o7Wmg[2M!@,'@c!:K/`O@;0V/7A<S(QtgObG!Y)7R>n:7_PXEfmokTJ+%YJG:YqO<FuWcrn:V)Q4NaQoI&M8%5)EMT]=?2as2,4b\W!Ag#n+k<m+uHG!k!<DES'_$'/AO7PKT7J2go:R=-IDNe3`&0+kW$UCRWDo0A_s6bdMS!k!+%KZK3+BDQjJ`%(T2()g%rD"S#1#VWAY$5Q[B$+$Vq"+LU&]A8g*OXhD4LIT+Z$>((O)KI!I17W"7e7\K>ug'c!sbB]%p2b-n:(O0]2'M#r!.>*<`)%Y%DU;TZHk&Jm98DF)gLP"^E&;?\*@bpZ,l/rA6.Ip[0`pq;0jq,$$W"qF1NO0n[>3SMTQr!;=SUO5mi8?1u2b']^T`I3=N,DE*\g%dQAahg2KuZB2HX:jtjW-6dJCgV\]_,:\/[:G9XM<JFM(*/i=AN:Ibl?(!YW.1OFr".Um2<04H?1,YM&Ra+o5-RnC(0B9!5566G!l%,E:jg5Fm`q$@!+XcuqBj4+5K&&&=Mo=a"A2*&rt$ecrARq.i&Tc(>[=3MT\q.legT#X4)CLB&'pS\&iS:VZ(+A7p(`SJ:TX_bOFU%5nG1YMr#>TkC1tOWH-V:H+!\O)(@eAOYdC4-%B4gp2592(Ip@-,bAc<5'",#FO)2e?KLc`G!&4"OY!RVNn:1)KpSRj>FV(Q=?RWG%fK^u9&gGi76b;%$gJh_XB@s:NUu.MJeilf(pE6s<4=M;W'%u;4F@TIjJ)Hm=^XK94D@C\<'HuL*Sg;iNn.!Cf]r+$&%f&I!!Hku9%'9I_DkHWGXl>W.m4cNpL0=GO9<'l$b\asXk=Z^`9#XcP\.uMho0>ppUjJNUXj61s+T`U9+A:ZTF]4"-#E=35Kn;(nt#=mm0BuW_D%/>Vc(fk\mF_78e!lYs"!M<VQ4c<J>2&:5C#I]C11L:&8sMu]mB7u1?@;;-C9+5.#["O^Ah_j-+9meN6i\I09(O=0"kS4/uE@"MtS%]-c$gTiF!Q>7No@=e"ta?b\Xhou#Yr8m<7eEU8_$!<lorX1s+I/Sulu0o`,Nq?6Go!q'GbAXgha3u>8o;?6d6TIW3)ElR'qU/WEo%Ffgp''O0Tqb@ke5<$*?c_nN-uf>[/'5HO_t2J&&X43@M6qOag"HNN6G:ro^'eQ_$$KGpD1%+jN7U8^lO3!h#?d5@*5-if4:B)Mk9%qOI5=L7`fM)&kUu'_QMY*7SM0UC&Um?%hjlYf5m.eES:%SRG_!nFrNTZL+70:M6'tA9IX6a[R2):)WU*,YI8ml1(C78dBG"*]>0t%#oMnp;V(d:$can4`gqp:.HPA(D'CHAZ9oUG(%NL4L$\4]U<15a)UM.1*%qZAFm5Dp+4;<N<$O9k4\@$+4Qk>ApB6nVp?A/eRj?Us%\7#m.rGi-p%g.jUFB*0!oY$@<HG5<>?Urt7bG!K,-6[mm*Bji/LaMhki')GTSW/B@`aCEuYta)N>lO.Lb1#Q6Kl!DTSh@@sB9Xqp%QVq.;m1)uHhUUE:PX6@l49aPjX?5Hen6Lc2eC-iZGI&_E9Zg,4"KKSB!UtBeou%hFV2d]c!dPX!^.1G9A96r'Q"UuL5<T"QW%7@F%KEE<D5-]DZVm@M#/urs(NbiUuRH7(JKq8(qF4>kH]<IFWr4nWRD+feU:]eqk$Ars%9)[7R.1<7eFODWna/)>'$:)J@n(tbBg#_km%MElL-HP7*"2bE.:XgRe!3h%p$qA>EC]R5CsHcu2!fq*sbo;;eY1L6DEb?QS7<H%hWg*nbH])Cg@$A5&$OGqLTgLTmjA_FTak4Sq]%6_N'MJ?A!^*REJNi3[XdB^G0+^d8'L\Uq[K;7?`%P@LeCE^"9>7Ra]bPOh[%JN[#>H/"lJ_"W6Sh!JFu">s)>%TdXN_8@(d%FC2/%dE3<SHDKq>#kk1ZUM!2S^_"^dOh-j&HA?%cP_&3l?rpGGI8nNu86C";]$U0IhVk=6?(Fe)bIP0`lNJHT9S$@b*e+WLX9M50a[]$h%Y>bmD1KU"s.ECOs,,9k@k_]o.F5g\R39Y-X#Y^Ae;]3;M@d3%CX7J<AIq(fjO6^h$83otS0l40aNCmf^lq]hgd)\kp]R%jAfD2#i%=P;2<2,H.a>Q66"_0!pmq]KrX[BO;R^c&6j<u%2Xl3uP/PZGA3"7IFln_WPS'Yp!R-s*8[-1>uZ9Z;LGg([_niCY7N9,2QugF:d5%$ilm4am-5QoNZCnHbcl3a.7jK7C>)af22Y,QE:Hm,o[_==f.:sWXn+Qa`:^>hoIR#X=U1R.A36OrI8bo:^"l5FJ+#CJm-VdYhaB-%c?t[>Nio4YA]M^q7<9@Rs"+]=I[f]K_hBbWobAQ6Z*`e#Sj9mq1!`Qs].;@s8s+n/3Yi&9Wa$"e1U0eN<DW)?rMbcC#Tc%MDcPk^%($9j67d+sZlbg/jM&eQ_-bI[3/g!fn!/m1T^Mi(Va,R:upF\0HpmtS`Z<U-6/n_ki?W4MR>L.@C-pcSO:tY_o,TG:0kp3e`GBG/*%HY_u.5KU(O_CK1@;mJGuEcKYG@"?#Tk)(\%#p6T59$5%5#*tI@rcB5ADpR79L-_9on?pc"[LV'E9^%tU%*3*=':uh*l!ts0UTMsK%hSl72hItN*hno$;Sa'DDV?\QHrE:WR5W,-6KJt[YK=(R$fH;,@^KEQ<^.)g.RiXqn%8goZc@]C9>464uE%EGqBfi*c=3dq^[r5$0%iaTu<T5i'2i&^r,`mrhFm_S-$a(KsLND<4p<?/\rBfBFGBH(d[jK4Z&PiiZE9C5?lg61J$)'[P?%e#WE\LdH("^`$C8f!kOZ-;=u%XjjdY5^5HqO$)gY4AAUI?u_h%WJ\*0H>%NOVFdIO/tBV#6/-!I.7-In:(oRZN5PTiHCH$pg%1`hqXZG1'6Y52p7,/?iD7G6ZL("m%/G[l60keDON1j!NbqH26g(9;&3$5nGUY[WX;CjPYc?1$F4^`r@Km%]D-n4t=?"]?R:946s2P=3aK;Q&;"k5cL"%&A($5/@nQD_?p%j1s7Z7d3`JoB"g8TKKNAE1rbQNYFYH!n]PuZ3%;90)'/l+>rFT=TX:QqP+hq-i*c_LI,9He-BO=^e1Vf8A<jj@DShFn"O!d$gCF-%n*hcfCPP$!Y26LrO5XEp;8ml)@#K32!Ie5tX'VulFsT)Q#YhbVl#lfhP642DNeVcdO@N'*8i?e:!W@XHW@NQ5Wt9dQRN;C!AnGFZ%b?4WB8634tZn_)^=n3VETi>FCnm-gaoX0&PT%t812hg3i/`Aa(=B<=icu\UrU>LoQ4Q5cd2`(Xo<J/hsksL<XcAc1r5Z@Cn'FTQ-%:V+OU_r(A@@71.2?Ui,`+l_sQ0H3h0jEkrYP9m&dV)IM1UJ9VRG6XF$@7"Z2"R3'`IF>&QHmI^c1_Th@6=$qpd\cp=eo;Oo7Bb0]%Q'6(6App1[Q"0u8$0LMhSp&/OiOP8f81XqunKcJ1Z*qMs;'$`oFa/&f]:b]+<2&aNP)mi?L"EZAMsS7lEmh7k2T4bF9][:@\-*+7%M-ZE@lEonl(NN<%:?Us4[<<qGL/-EiC[J9Y@O#j?n]+$giunVs,@,'O[E67ITc]d\NNk`9"[C!!Jh9=)F86^&abb)Yo/`gCcoMQ'%=fW.]'f6IXRhST!*X&sdBNGn2S7,8=8=$:^--jL'e(pPWmrd"Aa/dLYIUV-s"C3@lA:kV[n8nmkmG5Q9j[OM;ER7"^Lhu<(<&#N!%MuM0Nh?ZhV\nQAlcca%[Vsl.6ZEA>?\^mclUfFn:BUW;ZBqurr8<j\#BLf5%K;\sHf(;:>RDU_e9u/$>&ND6&]Y?u06W^2]l@V51%c4TFNk;?mU45#m2U,P]C\f&B"Tkin7"U(JMI;D[J>s]_!0'"kL.l;m9ZoJd"aN'\5ll/RKW77J5m;<IPb+#O*rKGQo`U5)6"U[Z9%'%:+QOA-\<)WjbUiDL[gQEEa)%;``R66MpCguU/\H`R4"4$><E%qN^>p\8'9pSiaGp@.;hIpPp[+(/gfr#g=[U0n"1XlF=?5-l6R%#QgoAH!**I54&EMgkC_.(e9/I4RML9!K___ZYiYU<=^4DMsbA&$5BfAh/fdlII>+n%-TD-MIlV.,crQNIU)\;p-@0%4:[]>p4'Y,%TTTaNU]pD;Zqta49P[G]7S/%M<Ws=75M_l.g-0tm<4Sl,Z)1jIFr(in^J"lr&&RK4=dT#mRp+_T"fmq`<;hIiWcQfZf;$YKOq72!%X(9=-;pF*5Qc&iB^5.9/oOtJU7[g=@>LCE:*ma425_Y!n62F#ohMq3e57UqtmO1k;cUPfdcWMPQW.@nf72UYo24qP2>kRX!+9(9l%dM8=I[nYTX+lmMZO@J^)9_X@'E;,C9';Geb2KBqXoU]C'h5NZ)(Xs0smkqkFO#H/(Sgb[dQ-Z1qQ0oE!W%Xb-1?)=M,!*uN/N[>R%Eru<eNTpm-R/So"WXT'%i:GQb7J#$de%DVYT-+r]NZ5jIhTFg7Vci<\4lHJr[19-+L_Hf$V)h*OGsM>+^*fcLr5Wk6n9`;0El%h4%48HFndD2[*maF+&ms/_eom]/qZAlN/&V/R8p>4S-$QtY)FJXP!WT+,NrhE;l)]3.&Wcuf'$)<*fA+EoZ?<"L-*SU?S5nLF`m;EU\%WYobuE_Q8SN4=`qFu=gLq,?oY.n,7mWofA.,@S.h0abnsJ^$]T:pfUF]n)M:BAmq`G2StD!rr2VBO#>V:<N"n6(+V$7YaLFp-m_R%1GJTfhZLkcKDslG!B+;gDu"bLZ02o9EQMZ@[q`XoAo^R^FIaLf%c*H"]!@j+!rF+[Ro\s$;X7r]gt]G#mf=.,?gK4OBYf;jV7/7a%@C]RcZSZ(<6t#)r<'oW%M92oJlJV,S16]1Dd`=8d3b\Vb_nd.WD;F=FM[lf!Jl`.ap'Rk!5d6R,\sf$*2.m-Vf1p18o`H(e2nG=2%hET".m9\P#0l35DGHfOk*$]KM^Ol08bD^7lP?)YiT\J_EV2<U@qc.O0],lcX^Vq<#!/$qb=QV)/-,V?/rA&kWK4ZEM"[(39!;ET+%+#=Re1p499]"9,lQp0JA4+&R[^ljDolmM66^+oNcGNagF`U#&&K13\U643E\Xlnh7i[@(F#Nt!0KB7A0Qka$AT*bnF=[cCe1Skb\%/)L*=MfQ@?`Va.S@"5*G[j>LK_`>O%\;clbYo++J.fhjZ#UXE9$4ALZb0-ubl#"G;QiL.r<<kUBcbmp5-^+OA[$D_k3e2&-_K>t-%b/nZ2R_Ub8*qbD3qI"r!SOn5N0UD@nH-p>&=gkDKo8Ss7p@m@mToeVMWV&Y^C2Bd;MR$.C`;hdCW-"AK?m&l>me-Dj-IWh'_g2%d%/qc$!e335E2>$N,)pmTE_GJWlDYs!pZ*-f5d:>ap^1s:u!c&=m&DFL5,&1>r]$HbNglF\tm^FI=eMhAn^8VD3Ci2>!!i"_cE]+<D%k^PG<I'AZ[1.aX1n8\$[U"Rl7h2eVcg...\K"W/RB&3S[Dau+8fo]Bd)AFY,R_0U(6IT;3hBgG<+:AE&F5ZeRd='R+#Mg2t<jh;s%DdW]*Y8*Z=>_3_jA1uY)`\0%JgZU#;9UJ+HoqLTg*.X1?$D/?QKX0<ZMD.qoF7].IXa/u%?_uMWSbo'\I>3mq2rQgB?H!(q&,79#%]9g26r5`cM#W((O,*P2qPdNLAFGe2[@Anh$]O*751)27'$BTro_TuTgPi-Rp=H5U.G[m.-CDXgk/5;^g/01@k&V?KOXGq69Tr:rM%e%dkb?[2V#?I+)'"8O.A\f&)q@=NsKCf.BHVh0Iu#aYmjJKg4&5;oG%8BL?=:*!IcYF\?L3FJ$9Y%/_8jT'N"SWU?ubndnK+G=gR%/FeB[Cdid!I$lVP#_*V;#'pucA`XOj6KKV(crHaV[o=un_%Cl*^X9@=-VIfQ!//LMe(kR+H13e.Lciep.1,J(^#2XUBE;*E,lar.%ki4>I_lIS]eK72*68/e<r'e0uf3E^6]]B/"?Q#2?K`=rjSq%aUhJba##/:D^!KQaR)ugddLY,j'c-(eBrGeF61s3IXEM.>+>eB5C%cQ+@F:_;q6ngZ8i.]Hlo]AN)>QUp@T4+%GV^=0R/Qjnhn9Y2;3mI4>Ad3=iBf<khFXMC#Fgh,P?10L4pk"&'0ZT4L<khWU>\cmud%`0jf4WoOa@Ma7!3(-I#^G_61'!ibT5h*fa;T+ANVMp5GHfFVjS%>D[P@AlkpbbngXMefq/Quo=lSgt6u8%(?j=.bD!$NF2F)/Ls1%4"ecTkp'SX=1Ct5L(df`Rf]+YDK+_r#:.N[S%ioUr4T.5V39'CZB"i&^,W=s81iqB+7L-!3@i-<G:*cd,O]dA1mBH$[n+*PoPg#4%NV9T7kqemfrPX$h/n*=#WcA)<8nIM07p2FdRHOC0W73VBVK);3)i(V),5)aZjjHo(jq^kJ/W`2),*VG>gU**"^LQDQX@/a=BFlG]%U/28V):3N1RN$4G7_1TRLVuI=m68lgI4Pdsp:l%:*2Iia[sOQN71TJQL^_)Cj-A@A1pjOi!(HP2<Tm;OWRG@Q<4^BFD<)pSX8LHY%&6ZC3S"BhTBkm8rB`hD4.dahZT3_ko>-:T]4F@>jKCIf(m]`$8kIIka\JDH$+:*NDs4lPh0Ita/,9#A6g697"R9l)$U_c6i0oFl2%RoLsO]S`3K5PrQ%dLih&dSE6FCUH>NeO+a9F&[`"jS-qDG&2H1CUiFs#I109.1]>!b,BL;^jK+MJT[h0lm*pI%3mD';5]b+0AToE%3`EZ:?l3LuPX+_'$r3F5YU8R^>Y>Hjdq8Cb6+ZNg;/+Xi3PI^_ign<SMlO$GjPXEP5'M+9RJ(h3S^dE#oNaX-BI`VVCX4>ea0;Kt%6/eWmi&hF==dN43/r8703Ag1QnG769Ee8'2Y9h]Nn!iP'9dag"brQCm%G1b/pV8AJgmT*EE`](8p>jpiJbE40nms#t#>jE'+qN$6%_XAX1K)*0:3t@i_nbsL+U1Hmi[(q0X6f!lW=f=AI2e=.3#$!VKZRW93_['5^euQTTK2r75;OVPQ#_tGh7B[+@C&j#$e/tj%Z98P-%V[HnsdBI"NO^q^pOae?.^/?cp0&mcRSIj6O$7p3q:EU`k6m4`meJh!J3IR)=RJFFS<ZcL+2^_4X@&=r")UhVPmt/S+s.heC]lsOu%"o([=mu\9br^rjrW5(sQ#o*m$K)=Xt\8/]qQcXD15X#XJid3d-FC^j/&Dd.U<X!a=HTN21#Q?Ga5Gg5Ack[lE]-#0u$>jgpPe/`]%e2VLWHSPS3>.ZPA>1quTfjT2M(ltkD!ATm;d8B$pPd^^u"209h;I5HrU:4XO&S4db-0;RL.RmS3[<0d]6LB`h]1a3A?Xlg-9I5Xk%mLjCHZA.Q)Ted0DBb?/rKg7fu);bjHf-o:hIc]Z^=u2k_Z4d^O=lAAPOWmtQ3$F?tf^a)'r7>;Sb5A_UlhA0mVr.O/s(ZPB^Sa[+%D1r7(BY[JJjm-X(Z)gD0M]L$,4&p.XTLHa@0s`Bt/0-#TD.*GC-U!=Gko_%0a2XBji_;^Y<AoG5A!V]3/G[dCf:fC=G$VOm+Q4QY%YtE41)>CV@$WO8\+'Rn5JS8=)\.l/\!>+soZ%>^d#%4s_mVWNcj.Br\8;id\H-EN=R&bHne;)RM[fVW?>rq'=.l89:]*dBt$.8K0%]**mI"(bt8d(ui1c#B0<%)?++3oFNl=/!Vo[q2;@UD6gYq^;-RC##[*Bc+cbL;"+99_E)']BGUaB=/k<&L:R`n4nlopHG+:lgQ(_%jc,d)SKNI-6+/o713nW,4\2TqJo$N"mZLDnVf;&;AeI!*^?6cK(h*n2LZ<W51Ig3\FRSJliFt3QIcod@:?"3i8`>ji=M77R^T\k,%`08;g<`>bt"DCu)_U5b;UsOJRVG&J*oa]>7/cJiH@$LLd!iCOSJB<@qM8#cN88nL-DH"OCST`Q421.GC`K[(9(rm;)fl@$QrA2n*%".hij=h:)q-/^S73sWXSJ@E.%p8_oK=TT/`Brr!DV&)>iPGTX`&klTi9Xk,A7,1Rc@QD'53d-!':P]%99hCU63PN'ad>jZ+"F"r0%O]J$7f?J0Y\8&SYod+9"jBefM5tsA$Nr49ET-a!"C^95b)LY'3?eCr#o408j+uHM[Ed>*h&q+CdqrYnG5IX"$V,rfL;*p+O/#C*O%YAlH^ZOJH=*%*RB#mJ+sLl6k9J:-_;h1_i#U\YE=89@?%6$c6$bhsTT_#pq.IQZF6NFkNJmH`;9qLso<YhfrQ<cq7KkqHd[;s`!^%3(Kg%Xn^=->NG6aU\d`+PfN#mdLieCXKp&&F%Akn7B<$J:p`LkDV/?kl-=SD@.Iiq%gGkqY3a&&Ygpb4"?bIkAbq$$chI6pMN=@V%c-t_;ERV!W)sPXd;no+#&lc486%&11\]u>@Bn<%^iZdqgo^Sd,oR-=<dEU'C*BE\.`I!YWR>*(5"u:%k$KU[TmZc1D5<H87=mUn.%Nng3Em'"D?O3rBY:87./<b*@P-OVXH9rp=F&.nCR407)A6m'EERA7j?4XkA*"R"o=!Wl^EGD^9.JXt>I]4WIQ)>o"X#o%'.X';,l%8nc]4ZDDg"Q00M&]K-#i]TgR/K8%r`GA9DkC)XU[XR/$9P^uQTJ9mTE[h1-MO945"2*Iq.+69.X<7c[a9XgtnV+%4pgdtEdT$Iu,%oH'T)g<U9@EI)D\d$-`UHYWLG'M/[!NsnFLH\DSB5mn`J>DV^8Ms7_56HWKA9lIT@SD*JmkKJ>^ib*F85,3#7kH(8==@OlPA'P5B%N*<Q0JR$&<(QQh3."Dngbo3GCL'RA^$-J*A&Amejp\_`=MoZu@bF01AM"i\2e8[LX6QjcgOpVP><L..iXn>+0LU9s8dhO18>$=[K%)*B"-iNMZARO#9%*3/Tt"#=iJ._hk!Nk@bCI7n@2][Il#rU0#[b2=NRX67h4DD%s,R7V1U!!u3Fc"<+?]-Zrk\7`!PEF)+1?f)4B%Psp,pFCO/4V.i7>eQ'oC&L"NL>o#i&qb<C4/kV[[)G2#2Mk-jb`]S65;:JIcj5<Jc4W<`AE>j#D4sCAFIlNBfgkq`>PoPnL>!tPt%CQNbH`n->/_?lHh[#_j#AI3&b+[\_QgRtqre+Z'68G:s@q>^9&!D-AAXHJmLn0g!gHFG>!.-_<t7M1^'CKHe%!J!a010Z"Q_c-R2%<'0DEFetGd]Ob\m)tbs,FSD&"rVZYAAI6JQUW!%.Fm&LaIQS]hbt$dHf0d;H\PlJnl9UZgGDpW./[Aq-J$0C-I&JZ;)t)Ut9m))l%bLAo7^\)nNmcFH:Ff4s[rqnU!`.-s"Rq;a"In&g\!:U@C8G3q;lqWltM3Z07WfhD(KNNdo?I"<caJ<Of)#7L3(d67KI4sXt)AL1`%W[M:h'bCNc:8(3b9+ZXb65nJ;,Z&^)2H0UP`0#EBo4*/1TCX]nB)di!aRd%Dl1b5Q^\mj+p](0+rf>t:p0[gBJ,]BDpTOVms8MKe%]0?(g1CG"`$B];X.P(#m)\Y(E\db4?(F9+T.%"B)DMG%I:2p:,Q>_H<-u?!&6_Tf'5hmi0KYe"4.A_'F7+nG>TY<!,#GIO/G=A''%[L(puIY]LVm5&d%5G$h@%F0$e*2EPI_,355%=j'pfrnb[$W=9*T\74mF/J^:b'ZMg/RF*%es%k(Khob5m.*5A^:FJ3-;WY=/KAV&%R0hY#Go>@M:DK1_oZ.8b:'Tr4r9,KC4E;=4qi.&qO/MbSUXR94903(/kZinZ.'QKCRT\bL\AF,>QT5N)%C3R7/XtinjM[0p!33eV%F$Rl(nDg`r5.KB3kWdiSDY$.^m7PM=Qe43`>^-@JncOb7'4cc#5G/?%@$n+$eUIG8;uE]Tfse:pqqi;5nKF!WJ8KGq(NICX`"?8_%]7&QPR2P#]Ze/Y6U<tP2HHQ2lO#i*_edTNM1Rj_d:8[I/#c$&.J$+GaG`+)pTI-cp<fiZr_ED>3_)5S,rUWDSa.r5jaT#Pl(]F)_%7p6[M[Z3raaoipr]c!i]IF*^ei&bkH9t3P.)=D7N[q/d3GZp'LNPH_l(-@+3fA^o:huJFVL.1`e3.aDPKbSL>!'o9m__'+V^)gFB%!Ac*K\0$e%0?9tT_p7p6ViR&MReO0I9fYjHB=_N/aS,eWM#O4qI0Uj+8cY3R8i+MCX#bi!*5cnuqs5^MPXag@^%90NFD5;Qbq3$O%nThahfP/c14Zq>n3&1KX>e]p(DZ4"'aqVejn*N.1bV[M$(JgaXf<8N$,j9\qE*ssDOsMqH]rL.mDnF>&$Bk*QiGKOV']h4rju5og%nq3Os%SU?.V95DdNaMe"5klGn1E5YU#+6u+$3LJQHcnYMj!"E`n2t!1k;N@LL?H>N]&Eq/rq5`p6n;prZ9Sjsp%j9VO((&]KpH:L%^X,Cs:SUPJ,DNFV^;8(IiaXt^3%,jZo;8r9=_a0<Q]J%-C+q/+%^HiCDQPCEMZ1]6:i_K61g/fQ4h^ON8,W03roGU/]UO?HHfl7*%LhGGV"FBr#,G/WWZkCH_IZT`p!hcs00:t=q"'$816M.3>Rm$a9c'D<-E["i!T)IH76dl\N7$_]N39Zho9O\0+NCL:*_Xb8'YRCPf%f>h5\`P3=_-7t/Imk$Q-;OoX"%ehT(5pYX1)a3ED)f!Y6g#bF%`D2g#O$DtK_c<V-KPn.+H-4`7*6T'uHOUXGL*Mi?a"QUL`r"9l%8a#kl,F+@tD=qh^:_3(LQe_:n3rA]!_ZL>[53hQBc7a##K\A&E\Qb>g_I$i1\E^6CSbn`HX:=r.0*KW5Om2#+<"=VBj[I>LkH[D7%/);uS&-)a90O5BFg7.f7l]6$mbD30B9/!cHcgWSXk;dgZ0(@a;SM:_j3.a?oJr@T2d+UB:!XYDZDRNSIn`?"`W#e\Z\?U9AN>40_%HO'!-'JW*)P<8m$>r?;,l_g;l;;:3'\t=*h2WncP"3,^/Rqnc@59A`i+(S#\56!ijlEkj\=4)d`TW,hXTnqj[MhCcgp?q6%l\b>-%kfAt,41K=lc6_oFTVmVo:od$bDRuXI=;tOM0H>0g=m`]YA@kHU+],<n)9!&H@4_f`U21R!j72Gjam[X1O/'"=d*u<t6A8E\'GI]U%:_[f,k6:CKGAJ.e0nSRK+pffYO.tGXf(3ZTLU\no1IUd<HC2CorOYA@_KqmQG4L:+)3#X+RKHE=+fPF4.X^r-@a(g-?PY[G4upsQ%,b6EP.LE)EbI4&K?g\[(q(`?S/qkXJW)3Q)!*8J$0E=NMQO!4/A\qXu?'a)X?KA"qA*!:?a9G;=$b\ZU79-2<e'nQQDVn%j"t;%3%Toc`IRQHYp=GFW_i+VP;=V%[E\d9-*gY'n,S\X0YN\B*t<TZW@?qXkf-V]PCU_Fmid=2=.2[U_[YICu%83.88*+:2B3.lbbY:9[n%!eqmpZ8l"SJh\Cf/[VcX@>_r1P'fj:K=(_\]UOlY22f5;m*)-u7*SYf]i)^-)F_$SSc!l+W@Lir6opU!RjJC#IsP>nm0`TmP!u$\%^9BWQ>=##5(@F@;8cp-o"ce:;o[h7#](&:P1Uqq!IDnp'IRSaM<?8;O&%^>W&Z1D*jmf9HdSMeSa.iDfMW_:\qXktiG9dC2c9(/(%A=[RhkY\ZOrp:'7a)03e%'VF([bZ9jM1`f&Wqu5HqJ,3P]&?)Mc8`W,,_A7\Wn3Y[U721mQ*q">V`R4pNk'=VEql1p@<DNgF_4%2%Ps-;[0QuLI34DsP2)'F3S=RA\#m(*fIUab9#?51(8PZ7bKI:m.XPh*-X32A%$XP&pg[mj^Zd?eXf,n5Ur8D&!TBLa!%'-:#/>)XE%p>dam:V$)hFf!j`p3U^9ZhA4kW+u1I8a`UpJ/D;6d>2VYT*G.E[&p-]/@qpM6/>ULA@dnnJf780P<s0gl9<&tJkQa?+/QQ-r&+J.%Utfqc951uG<[`GE[*XU&pat.b:Z?gRR,EIo(,L`ffEXZnh.<%7">+<QCXuMg$5r\nc'WB]("Nt[7^\V.+I[Wq*ot8q81NA3Y8L5T%A\G<jGEeoJrQSg:K!Lat!n=j;S@R)u:i%>;1C-:I^sn;TQVeU&W7a&A,'2?"*pW+I8=a\<._)T!.0V%0L9SA;@&Gp$RLUTbdIAq-%:;XP;f2m,n%)]Sc]lQ,s0#>K&lla+>ERgH'SRHLigr;I[/AU'/:Ebfgs&Y3Aj"G#oa/c&nj@[MYT&,jK^ukcS6d$&s4=/VCAs8]F%dM9*=5*!P>Xr/-92uBo9kYct_!r9IaHL[6&F::Pd"V#a#A`X4`nB7L1rN+;F&a!_,Q6HG*rlUj%lqHVC\q!`oKn`ek*?%4?4YV3l%\-Xt*\\Coo#,i@a?9maA@.k(jpPL0n*r\=IO#+]o&e>n\h?fS9menAi/&LRiq$\9$T4E\H'bHB+<4\a*;3!P5lWESk.t^l11N2[H%6[L(1BiK#@72L1jg,;Z?/U/^-=5<j^83?$('Wc\NPl5ks>57atV3s$*]fHArWT(>E3a9C@`3oN17:_fGa*QR(quV2(lD@PfTr%5N%A?(;bC&.FqJ1p=&ZA(s*hoAT*OK]X7["Uj48,<U<,G6-@;`-@[@K#]?r-!elR1]V:Y06mA<YVsNnNK`j%o'Ei9I:LFjV/mGB!?55%(s*dd:aYXsBMg6N"^d'\oec=;C(@:2%4G.(CY#q%.dO<LV,3PsPQl<D+??*5I9D_3>(GfdZfEI%"V$FDj`N";O2NH=I^@WPknlum%_@Y!"?[u?bM=anF);Wn^80)$58?DRbG*du@Ug`""AgOl*JtA=;%Db:g`0_&/2[E6S3g^nHbPs/3WCuPOb/4S3%?mJP@ZddmHE+`G%9"qm^NI.'o/ctSGS=\QIYYK/("4*^K^F*+<&Za<[].YF#*=rL*cD=[/"1Ym)N3^7#[)[1DHSBS3d0i@L&=7t5']agk?r<!?TIqsA%-!l?(_0aqCe0=j(n=RP.hV@*!:)%;pmJ?d&D_<C4%NiSF8,mX)3?`Oaf*%IPaC\g\B@,@aU`\Lp&'m?KQWlBB)E4UCQ<t,ZO.\;Y%JksZ\Vd^hQ&#!GW#J,e@V(ck<cD`57]5LbD1Q6f\06iDb-22QCqXQYLaM*om]Z]Kt!U7,KU+[%/bEtLV:>.kHIN=7WNnm;-'FA'>%"(Bu'a[Y@r3-;MLbCuV7W[*KAd3P8<e]A]K'K2(Li7ij+RAsip6dH>")pEA4o^A)][T-ZRl'-_,R#>m<#nNsjq<-hs+QPGn_*kX=%)gWV@)FjL)\hsu"30%b.=V=ESD62nYpF$pPrHq%EYO/pYg[uF5Ph1\nq^sPJ4;R%3]OS:cmR&:@iXqR^c9olUK[8Y7IQNLsf3u&!%Bt\r[8?poK*J%SWWptH*ici=<g@]VjEiEF^W]P^$ZhNME/2eO"r?4#uguLLtGdp+CG`S^O:A39rk*(h/UY9c%$=bOA*6q5FGcipH%[Uq_R1(C7+lX`X!s31aYCISs+eU$h).<*sWlDB&V].%kuBF2edf<ApTg1d8;a2A5]h5_bdK1Q$`?7?b:EYoNJ>de&'LfLjZnk`k%%2rc@%Dd8n<@]EBmEBOn.U0etCf,(PKiGdShh'dH+RAccYUD)B:_,kP*PY'@E#&O.Rm9X"qGf4JqX4"BgjTsU0-c;"djC-3a1HC7J%neqM++6P3%j!hr_n4RiD9RDc:fl2L+aO;L3]pD@#.^>uMm&&)FSg\e9^a4N]W%8?VdgT#P,+Y6fE.1<"O$Fh_4Te)+63S8c\j3.-%=.IURld0jX-52aNa&-5L--,'4,Dc%bdG>Qm@jN!BJ7M"]hP:XS9W\pL!@Hh_9mEI#CL9SB4]-_o?#\d;&4hC@hUZ>XD]J+Dqj;1!%<7%F7O!KE0pjW2,;U?k1)[1!DPUiWib-+-Bf=!`rE6cKd&+*Lj![&k*0*RnN\ic(/dc)XoJ_-NdGWYO)h_p]O+d61!h4oN$[#Sn)%b,d_@DjXKh`E0Io,;cAN2b=+:r<+EB(8lF"L`@`UHQo;PF$o,C?ARdf2;]u)O):^BRqDNg6.5AYeYd2)q49PWk[F("jpYg!)/'/E%SKu_oWM47jjYK3q[lK>rh1PV[r8I<q8+(,GP"\DG-!W_KfCr+Df'pNm3d"\EHQ:7)$:\t/Uf6?sqO>rQ;#1Q5Bq3XtJ;4eNUgQU(%5?q='U@TP_mVG:DM1CH6S?lo4XZAUX=JBN/TH:&=H\;,c[W$KqhensEq8pY@L-:u-cFE4AR>7e@^SfTP5Va*/O7Kb`>o_WV(;Q.i%<lC6Q7J"5a?!\B>[?QC%G##!%466peBs17)>q$`L>6fR2bj*ngkkL5Up9k86/:OL'fr>`#!b]9WZUVe)>d$ljJb.tMn(Jae!'d#:%aqdUe'!trPbr0fjP5]#KG+.K=$KQIanOu5c>?cFV'\m$,Ij:"9qWj)br7X$3.Kp^\_fiAheqqka&1l>)e;ueVcVd9bK0k>:JFdeK%W[-<7Et'BNeWg6sQZa\"I^RSgHX""H2?0G&WJ1rjNstpte:S\Yilau&0Ns^H1p,88/H<2qjf#:j\qO@T^V\M_9AWP@/Cd4DEMp-5%^-"6VF2)o";2j2:3Tp-f%1V$B=2cN5DVht"nlcVE*XI%i9I@b&BXW_t%uX;'cB7=(+j:Y,%9,YT8^oLJLbLe@=l;_p!'j"i:DGR\%jp*ekYYX"c0bT`'!C]S(q]_NP0C*QDKXqg?je"cqB!_fa<@>(B9>f,D8^aOd=,e@[fm/El7eAiW]^m=I8S?H-Wc+%#mn)d](i'Ab%T<=YBcG!oY^.>*hC"ZM[[sNG"D\3n]e%[:5)8U3u/cC[+c04[pS>7k1B+O62)B_%VjHCRT;t:#NP#N#]Vb9StBS(SW#Y</rZgpQ/%>60S;+qZ%H=#70ep2GW1d&L\fjd9X*aO,)obX;Zlj+D-8;l(jss$:PBN3;/FPgTV=V:8m$iE[4$S`khWLLlo\e9Y1%oo<JJ<1<%/%8WrOq:+G&+_P@S7CfSt01jJtqqeIm;CsA&AMGth=At@+@LB=bH%%mmLkD1s$bXEiEO'roC)8M(GR^i^e+)\i!-M<'XA_"9&SZ$6^%;dJ$k9rf$]7IQpFe$g#RO=f9@o368/To$oRD6n72N=:8<AB7XkMolD@&B"@EXU%AWn73VZPr-)-;/ZH")*O84$=$\eE#^Ci22<KF%]c"9:*[P`>=A*Gda"6D4,bI7('ne,DOUWk8;GojP)2@-63+.Z4-=0UOd1UF'U$e%nVsUI=H=aKt`1>20kSC[6cH=t%1^SrrHT*%@%4-8Y\,fSG-LV".`pX6)eFcR.B,$=im*i:T)pW3_"MTUr6=c.*FnuWuagcF0MjY]@f%;Sa(j%5[JZ["lbUapU&3T08/fop1PgZ,W.%h6@lMYF]%'A[?a]qIU]DR1C#uX7Ik1(5mmZfp6h/),0L?(e)O7j);@.<D3?oVVP[<0&Lma0dg`'2N7-GNr4<M.AGsf$Pf-W0&4K#%bJ!B,]S$>Nd-;@o7(IC6CKK(<OYTICZh.L_8aP\q/FR]MK^X,'-$+,pX&h$=1o\9:)5p8F\<Z&G$&Cl,;ftQe"7"J9Eb0P?S>1^W%U=Kb^9[0`9:0R<?62RTM4[Ci;A`o>&34;`!`rFFUko-cgAW"N#Tep[>@TMR[aOQe5`?WhT$hYTE6N;;@1?&P7h8;SLL\leIPDClQ%5:nPh-J9m3$B@#P/!ec[9B!XSUN5htM`T*b3*2O7-)cF+Q=Gm&>_'G1B3AIIL>FW!.*1]HFtG6lUhu.AJ2m&H4)NYP^./b14QgZl%ZD\8I31U!I?u:Z41>L]oA_7s4Hl8kcn;&QJgV"\!papj92N^f.1j.6f4?Zlce$E1p<O]s>G4=Ek3[*8bP*=04EI+]SBY!glfi^[o%BepDVF4.2Oa>.70LI[*WY:m@h:_s/8Bij:8iV3k":VFVA_d,;oSREpJ[C`Q,Xj#2**;pf8.[BX^\2ll28$fpf0)JYM<IO^g!u'X;%3h>,J!9fYqc]9m28WcP4ZI;Tu3Niddn8Vc;2;Y=n9$RK+`6mifA%F\A=nH-hJ:ofC,:"_-=TY\o,A1_["[t-r2+j1;^\P777^j7k%^p+CfksQoTA."e2X0k2`LV"5)d5rt=\L>'iFId.?8*Df"V+qR,S_ieA\;U-M>M,.SFV7'-C!m^WFLUK^L-hGCcPcmn<^;5/H<2c9%(%=r*UZmX".=GcQLVnLs(W3EW#f2.NkP]-<j$QW]+?WF)\EV/h0+ZM%.?o<E*P2si#3D:UTA&LJXqH.!^P:#/9Mb?W&i/;aMY`;^%+X@UQV^QIH@a8A)R2O:^on_K:MATa9(L8N^CbHb+jkKq8,[tnHe4_ZailN7u(=-bDfp:qQT):W(8<q-r#:i81c1KH+=?h8F`B(?j%:7`4!H6:[4eSd/C/`,ke8Hq/9(,ulG4^^j)JT^?OrYZQJbl`,J)X+eW%oWS0KAOdn=kqNol6'!_&O3!Y*M2$M!sO5E[;(aI<@aef%;e+-=7TsJ3YfM[sLHh&`U/\O#dO%aC_:c^DD+F63=9!#n,"A+7O'h;m07*%d?0('-[&]Ajf9L"UOMq@]PY.94G`Lh,#a6+T?,=-^%gC2V[ohWcl3Rdma>oW+'T826>0+a/h5b0oad;EOFVbELted?65bP]i&<Fc5Z\@\8P[>Z0.p1qWj1R4Fr%8D`,+M7IZ4c.:&i>Hp&%Q49V$I/_Aj>j)%HAm?eDk!3Q8p<q%ug7>B*mN*Z\oBYj.2Un,)QHJ>@9`.<S*oh9!f3=-l`s@P=<NiVS<)\-!^2R&QODbi*];8)\%A6=!nO1pAMK7cUTSf'S8L:fsulbW.h$j<ml,)L[?6l79PGOFFD[FDumleAO)$9M:l2DnG+*Yg)%?S1DcQU8[1aBWCI\Zf0'UI@Yo%Zbt<.h7Rp*?G)F(WN(FFe$G?t*hqlWdI=<i;QoqPR3o)rFb[Rs9,BK?"Tffj?Btn'U0%801=B):RK?ZDYJ45;O3XK)E)8>r5)+su%ISS.SJ%i:[;*'Ne&[piS$Jds:62lrS8:+fK[K+):QKH*pobU[qgu!`lF-aJ.R6bU*26%MLU(Y-Bo3/=/U6tL^=X4QUWMJB7Z^a.-%TOeX_J3/;K)<'^lV2I':pGe+Q71(?4J#gfiIRPEa>pZ<k'Uq2.Gn`k-bpBDg9\=uR_K)&gq\aP1^d0]4f>CrgiUJ`IMXJ>EOZQ*!%=W2m$8jQd43$$^D8tZlkpSk*Aj%cq-M4p[Lg1.BIT/8S:C%9R=iP>*TBYZ/+R&p5G[gWB;QX3h:6`<YpKp$8e!hQr>U@K04RP:JL%E9BCBlDlS$+0j(A9P%)J=T4V#dIff=^ZAt@RWFWlej`@OmN/OT%`FB&2^SLqE*%ltnsq,E2I!r&8MQ@9:W>s1K-i)teKG=4k'QAc%/:3sSQ/GQ<A7/)&K$eaE8h&Tla'PihD^i((X$E/XbaWIp?rqeP=0p%B;L$8)Hfr08HuQ*I5HATCe0b69.Ur`+WZD-#(%o9+%gQf?%5/Kd8^#^YZg=ftj/D%V(qNL;'@;`E<PFSSckEfA/;fILUiKIN#;M5BWV-kC2B;Z()Q)]OVPo!^T?/#u]3:G&0liJLiN"@uUM-'P@%##76a8M[?2D$J6W6jpJiT1ccl6,2[Vq0ltac2"(r?Y-u`3tpaWNZ;d+SYB+7!9TEJjcs\<Z'cfG1\+@X;^*PsO"q_n>UB'&,50U_%9)e-tp-G`M@%5QQ<D)I/[U&d2gjlCF+nVf^+`:SX/60628tB#ZWbr).@#:YC5TWD(b(5$W9)'*te5JQ**3(`rWf-'g?*d:3VSA"i%<P3mWntJ%rS`_bFDR\`lUKe"g&aIS*k'Tr@M$mnR&O4#Qr#DpO*WDN`R4RNEY+U->*$>Te.dsF]'D7ht-lD0optGM\e8=2'p8k"r%KnR7aJNO$$eZ6%F3?omN5X3Sb"Q2C$/+6>L&@JqAedn/#.Jc6G4MGrM;5l+?=SBYt\=a/HdqjJ>Y(\poN#\15c[PI:KX8H9*)P+8%B-GgO1)3XAqu`<_rs^'J/^JqEdqXF"\MKa)a8rjlI2^^t,2ni'T<!Wnn(n[eUsHpMWZ7u8Rk.<@ajNk(KUUq@V.bYbnJRK!=_OAQ%Ms7dsI9G1u:/"G@7W)j,$ngFgWJSt4n*Z(D\PfX#g!18m-t+'#O$Bab5U-sJK:;HdUN/93"p#$t/6I3Q,[^5E+OMHKF1CSL++]iP%&Re_6Bp]!Q8q&+b""i(#.IJlqQR-p#^V/U!e+_c5(FV=(C9%G7LBc;IXhQ?fO%=YikBfW5ofb&#<,QQZ.oGtF%>%C9WWE,&3Bc4<%j/@+PJ:.I525<nUCP/G]3bmSQo<m/klfG(`Hd(7uY>@Jn!!;n1D?BdRQggFP%1_(CK[J\Ce?):gbOh*B:V?tk=C86<g0.q]C(dSX%@Gf\GWSU1'k:TmJN?D]%Y;N)t^(lN?AYn+A!b8>sfDi<`J,L7<aQ-$>QLY9q[m7"GHKRKTq:ZHb9CqM`ETlRt*1YUb_rmsqe4*u<%I=U%RoRlSaX:7mJV&B6?lfgd<KR7Xu#PZ#2fKU=&;f06cZDuTq2*k5BfhVe"7j]qnCHq!GAm0h+5+AR>:qrsGqOJ,MVQ%^e_o#<q%`>RdWHdJjsR*3ubn\pt2VF8CS=ijr7-DQ[/:<;_q+pgF`E.QeH23V077Y1G4)HC>nF+Oj5elt'6O&7oN4MDl[mS6d@@W=J0f;=3c%bKX%V`oM&>N?JZa1T\qT352^&63F;ET7ZL6JXG^Ipn.V7ce@oX>C:"%Mq/<G@(UhW=^#`0l<<.:D$`67A8qWm2Wod*\U*ZMeZoG;%1LUbOTE'IYl#2jmpM%lP_$aj2`RgM1XdLH\gV*'1F7Xd(9sRGoV.XM#@bXh_GAj3L!aRM$,G,jC%Bb<-^!nG%Xp?L3m@FRfNlXO9%8Q2*-(P?@bJTf\q73OJr=[=Sg1MA+u[[9XJI59uVD4;ut\@^i"B'H^tGIuS$/0?6%o"6_/q\?`.k$d2^DMq)]OV9_F/14uW/Inm6%(HgNUi+fl"W))n"gF/8I7l'j]$ij0ZNWA;:@WN=t)oSS%l[jM@kLgenZC$6CR"UIl&oR"b)XA7T:l233"u<V7/_Ep(fJC*37_C]r%_:kG,OZ(aX<hL7&l1U"kluKL^7X#&@&#&fTXI`bu_%IdM=tDW$nR=V[e&1ofKQ!)!/0,fspH!H5J\LW61EDg0KtqPM#6Z!=?:)E1%*mC/6T58^bh`]n01"8N7-m_AhgTd_G-A2@1,/b,G=F)]rPCgY0R-I1e6/=)lLA2"5f9SpBQ"-*^K$DMD,mr+-ZoOM>hl`<E@>ZkN%'/+RmH*Qbn@%<[N7625A6VO,!VfPrY-`^V6.CC+HEoe'k&MK02C#Dl4<?hu_>;'sAfW>F[c#c0ur5G/aI6D)J<&P4VFC2KHH=RD;%[%$u$`"I./frA;cMudtjk2H0e19C]/e#kcgN(8Ap)RA]nKSc/e<DgB%,Wc`+JpeZlBB\?3oQPM'*EUDA1joM&i`^+'*C*%77qr%\%d?!KlWedE$0s#UffIDMY>\+-_U5#@UA=iFTG)q>;nb#gW_$K-LfCU/4./!5]/S/P[F8iM$f,:l3[t3rJBW).PjOHetirSD)G?FAB%5RX5ML8pbqpZ"$=`mfF216YIp^IR1?Z3j'uhDO<A19s,O[^ir6d+'C/$=_8!'fjDVU"5@FlK9?mJ=Af/g"e*8'hl[a-;-M-876;V%LWJK/P"`p):gf#KSnZKog&/pu9T@K<&Ats4L44?6bEhElG7F[LEDNk%jt0`+f2H/$C,Hob.j,%rAe6/sEjE=*X1.7eJt=<:URmFD%lC"M>l9[SVcYnQ(0#Vt'bNQN,Nt*J7m;l&If*,38I<!lNRQ9`6ckpWE`SpL`O'd@NRnJEHC0)at(I'L5rq"t*V2C>`q<Z:9\1aW"%=D!e/FG(\)#13h_:CA(XG>=8a+!]::92<`%Y,^3lB@%`rBNj,)EKdeVLCl0"(sV%Q%E@A?<0kF0P\G!2#8"A^4gP/#al8n8'd&bO%G.f<p;>:\6DG)k8Y/*uki_!T'X)XqQK&n]K;O=-.7pA[Y/Z"[iS7BM>plLsDQ#E3Vj[1`[ju.9I>.,s:AiZ]Ck3Pr?ZOfJ\S8"bh%S*e4@I^6p</_Za2Cin&VY6\p+S6M[KKO""DE,P3=..`5Ao;[s\HY<.285eBC@OV%a$Ua-8W4UnF@GPp]V1k]*kPSe]=k.U?<=oCN%?QAV^c:7HObfHZ(2pV'_MC&flAt50$qZMZ<kXR3W)]6o%150AX3l0W$+fKC),4(!ME#K?L3#O8G:3WmHZ;jZ6/A!u?N\+G[P%`j:%'#P_[[8N9"g-XFbkHG$HLFME%7]F4+X08X'G,HI%\4P'ERSooI&V2IgUpfM5V3TCl#9qnNf?KEF!r]<Q!3iSEm+0rm=2,oh1C/,+%'VF;P\V4I;7=;tLRoW[Ue;M8aVpaOE&TLRlN?:>l"WJd11MRFtqZ.fN;*O8o7IUZgRrHo+q.o4GZL'&X?n6<EoH!d2Or?0Y>a'r'%1Ju,d%&<P)4Fl&lk`%dfkm9B3[/67*lB_$`7=d]_I]dPK,rdn/0'6XX(%M#ICnLGq79^Z!DR)M*.bgp`:.15`]s0!8bsc`'<&np!%=shn)5kXZ#AaqZ'b9;_&@nUj$rXEe+>70#7eR.[RRt382*n*]%e4q.3V:,n;R`Fp(EpJK6DIgaXTi`'U(h<r^'fOjo0a#GF\mb&-%Bg=cn=NFF#Ut*-Y_1%FW@%c(&3=FnoVCuIMI&(TEKg_%n2XhfC@KYt^mG>(UQTrIKPm)tqFFM<lBG@CiNDPO^RT<=O-J=3dAB?GH%32-6cTsHn.c259%4r9DNHUb'g;(dHFhcQht%cV%2fu;:P6<#0JZB;\GHH#*@VSuK?h%f;hSq$O@3Sn?;;7]6IK/Sqf#r\DI[5k\F%)U-.K9EJTF)\(Q3U,j`:?Zo*%mbW6ipu&:d8OIm"6-41ZJ3c2i!3f?JJpc\#Ed1QV1&@qj.WL4#lJ_#m/7c:\KEC,aE=GT*cJET9%\Ipia2oC]kHjdPjU1VbN@e)Rio:tJb'^[p+Ig[Xi:_n<Mb=e2S\@:HBGTJ1m>mOjoAYlZrLk$.RoBO,5rtUgng50$RW443LmK:`o%oejGZBh,[J;EDedER%n)s(NV4GK\j'n)$2VAuLqN#FdX.G71XucX5RGc9f4IILt$/G].aJp[i`Hg0LT?ep'NMVKt=l+h<Lg'hQL+%;GmQ?!kMS\r:79Q(91HQ+@I6qe"%(J+MTIQo'*Ppan<iV;HX80WO-D!LNfmF+M7fkckNgIS,W:UG#C52112IQc.%gF2PUe<`LB7S%PRP`S8>=467(?>=FLI!.cYhHfesd)aNu]mZKG5):;_%I]3S?b3.)W=dOl(*6L1_Z^$bDDV\p>FZ`4:"P(sb9ZG&Ag!E9&t65r._V%7CJoIF3;*b#OS.Bb#Y'(/j3l$1Ug*"><"RfK];bt5"gM3*HlfjEC[j%m?a=X"\dNU51p[%3c_"l)3-'g79",R:..n(lS\283&&DP%]hp\ka.nOXmGpE9:1)`7ITBQr]dXUS'DrfGIlUFVMt;f5K5:.PL"<jED2HI)B]8M28jHnIkuIW50]k^nor:j17+edRU8uH/ogluI%)P6bf"%^ZsEYKbV:Sne.>-5I'FKf<.N=IV\]SU"N?e\iWn\fC=]kl1BA?kUVN0\#*_>cI24RYRd/8><U752rpHLW;Y58FKtfjtqo%k"L,1LFdP3LXIc8.a(h]48b?"!-ndoh35p(%u:NUfDbZfUo72uN[hSkCt(Y7L22<Dp7HO:E'IQQg6JEdG'5qO\<TT>!efc#hX;'"%*e%*UMVS*j%oK:3q?-@$fMGA.Ku=0dLcQH&'OM>^E[g![l&7$'CcR<!o5nl<e<o.aRJnC)4QPX9M5uBhHt"Y4F\Fr5hBTlc9KfSI%e(`I:gE*&UmVMT)(V[Nb-5i0c>m0%thrDQtQD2d%HV+q91PM&jSTXA."1H^+p+lLs1ZXe5kUJd+O7_e(j%a[9,B%@n82;h?RH_JP%N9QW%c:h/E1/65?p/g2WkKi%T_4Osm1V_6cinn8,jes#oS^gl01r=J.Vn0Jn'h]`'Ssn+7<6D86d.NCd9So=te#8>33ASg'9%7?S%'(97HJ,ph`&Sm_B@9e)*Au1k`fB,o`"uoV'C:gl73&^4>6.Du.5AaCbR[0Nj8^&[6+Jci7(ZmIoH4,%s%``+R46jl=0qt['P'08j%TMs=3Xg7YiS%ht?=U%f@^->8Q*aUm?Jl)8e[[e1a<%Z*!_j\ZH+,HPSMRHP`pM:XHdV[G^$8oV9LM-JqkT-cO(N?gpnOUbE="-$4%MY`o9B6CrrbE[A<+\C>8MpFDuN`Qsraitn6Pekd)n65^F`N)Cc"tmi3d:l!W-tA#KnoHY@+d#e8&;5)3kVKD=eADUPD+:.=O_&d"%g,AgD-3Q89DnuPZZ.RE6p>![HID?q@3?4<ZR7;9\"OCU+UR,AHf#4:gVcC$E<713Q2A]3$).)+#*`dgM+BI=f=`_KjYD-6?D?rSd%>RV@[_!E'tj`TN0i*HH7V3TJd%u=t(0:GK'#:uJ[mBRN__bDdWC2)(4qkV\)plH5]90qcG.Y1"W#^[TY1enU1dd*NOpYiU`M]lkk%M*Y[WX";G:eFuk%4k*'UG:Jc;;92DXr,f;8"km*WEn7ieKu!<c[ec`LP:"IJ-"_mo*G&PjCo!E,I."%AC?31hJ3-(uL0+`O,%jr\%i%:`Bd/s==oOQD<Oj!?)_OPIO+_GpWHUG+^0h#<]QXQO5J;2=2ZLBfZfk-h9<[8F^-gY0s_skEQgth"W=Vta#rcI[EI&iE(I[k+B%2G'q7c27YT1O'@l7JX`0A=F(PLgI%DY^CmdihH:$P=1:Vppg`1:PVp\@r4oD&5\Mq/?HfFdZjB6jLb`A,j\$1O=tFNi1Wo[5tX!4%WG/Wt-ukFi=K\PfP-7d,k\aVm@3l&Zl>bK/(s(#l,Ipl(Vr(KL[InK86e7tfU*l.D/T6o\dT2-GB%]#DUit-.PJnM-Z39cl*SkG1%,O3E$3/iqcP(\p.S]ec\iD>r&(%<^.o!4?p_6Q$='\T"]*"Lq,eP(A8C5:&W-(U^q?7W04;?r\l!SnPHVPbALW[)ZGWN%=jUl3^>%mccCZ`asj^Bt5bu%;kF((pGRKhA*'fZH5EPouk5'IpT</IBrOX4a]Y:Oi%/M,aRE,J6&9=T(G29gaiu28/Gh;o\dc*`^l&[OiGB?%A?-P)N)i`0^H'3q^=,qbaaj.2s.'894M7/7)]Y<ToN5@78CdC^H?r*Cs,G.A1aKcoPPK/$j/t<$*4?6WfA4)S&CY/2;e8mre]FTN%XiK1+k0inMrV2:N8MXHe-Np8fMt04d:?Vn/jjap=Q#?`bMDWXjSeFKf#lu#Gaar)2X]/2P9JLSIRfR-1C[ZLmh>l$L_9W33Q0[]:%D3L5epE?r4Sa@Ml-B(Y:ET#TrV)La<%ONFnS'@@>*KDAf'c@!]Ul8E/"_O@2)=+8R#+=m^88_ak$@r7imE(c_RXq'n9)9RY-.!Z6%ZL::9P[s'"2<rYOCr$"To7s'5A$]aT+[@262h6.:^R*aTXA$a%e.CkDE%o6GY._'oLS!&W5A72$f4/d&p0RZ"&6m':c,cd*["mRp%_CLB-fXIQWqtcK'j[I/;Ai1gTK#YE/WtQ&^Y0JCG3A-!-B&M]]9KoLrpXe2DNoe?km\DBWXlcded$j^?2eI-%1Bj>EQY,hpL5]KJ%,XMDSgJp/m,-eu=1!\C4F/inJJ`L<0Sd%TC!)0bO0.;g%d'OKc>**4NQffTOf'jDkP3UkZU8U]kToIDnA-TFqSVau)Z$)2T">>_0%V"-.B*#6kQl6L"=RP_^A$Es8(6@FH][:Vst2'$SaM837>XH]_J!h7=s8_3a0$7%K*0E;"Bi?!j3*-UVSg5V?a)6J?k"LQDtm"M)3%14%O5r6&gHcN%e1::#ZuD5LiBOq.!&*0nFq/FN*I+jeCl)e`Y^H_/5?75V!+dab.MeU3O_*c1*IgU)he<F`lLciVHa$V'^g`K:8b%Obs2U]"MY-6,CY`45AXZ9<>leXC\]Lr%3hJ83/9kHr_YAWVJ*Wk$hZ.P(U]V2pIL]/Y20me`5fJ;10bjXp<1+9Sjp0#2J5;!l;(Y%Uj=i<FLsk%dP40^OP[.rBkHuNI2!N,M,!IE/BM[36QOALApJV?Y"u<`Z[EXWM>/,7m-+rP.[otUo8l5oG#+bMj(4A55L2_ncXdk$%>.#<T*Np=_aDCH?l;$WiYUfg2&+*F+!K.MGHQ)BL@#JG!i*l*r<Ya(@M2-Z#LhUuZG0.ZiGD35n+hh!?m8pUj-0#F$J!0\qYlf4/%_C#?cK%"3`g`V!.>m^A)faQ;JL-=9OA5smHK8Nmk3f>pI"2"uWYu4L%d7:eY9OT3b<$fm)E+X!]^S#<5kD8^N,YZ,!Tt@c%d1Qr5%Bf!V+;`8<[Al]CVV(7oWqX5KQ)\-M5ah(S2"*Bl26P7]$LZP_pkS[h7_[q,R*B4CX9Q8uT"Z8cQi&^4VlR:+Yo6U%rVs?"d-<X#>%<M-!^&uZ:CF&tdmFP5W,K1K5.<fe14)g$F0r_>*$NQ@d$@eRG%PWP)5E*:p-I=^\Rkt06`*V@Er\*K,f4MiA\g+ko98>mTCUa&UM%cuBU/UDm+4&Ac.'DcA<q+&[qOb?Xe+!HMcVNUAgcZ<gj:o@tU`D#T;TL\N@i:'l.jWO(l/C2((ccY(pF`m*C*BAfQ#9Ou1JBPi_(%YcFKfr!RJiq4\*"KPi=(eRjgHB>3c[oPf-qO:VfV/Tka24UR4QJ3NZ<^/k4?Y^sms/nPQIQB#=fHpKh*:TF#r]81(7?;YgX)u)q;%os48V:S4A6i8"H\k>1!iO6b,aZM`H9M\5-]e7Ul"jZd%8Q0gE->F"7!n"^RLZ\f?4(/CMJ9,=.[+euK,EbenC:4SOq.kR8/5@:[2%Marb?"G"7'gV^\T;II="KJ7;4UU=AXA;2VU`$=K.[Z"1L`Ak2i]b!hl]PQD\3n]>3e501j6.8-.!#VshUd9FGJ]q!gH1=%*6#Do?%odq!FBpFJL/)MSP05_"=H!*,!>M;3R=ZD?2]s9Z&4TZW[gYP'MIrBQco0#E-E<;:hI,3t9;@N^7)0PD'%Z_tYVMQF/AXpgR[rB](%0ptHd<r_-f^a@QK()Z>s-CEGdb$.PQD0L/X=[f`sD,`/0WVs_#Z$@S5!]['R&bMRS?<Xh?3=AOJ%D]ZsS:fcSd23o'k028EZQk9>%j>)T`15N^Y>PZ-+q>004:P7G@Js$kaYlHWCfLTrWNKo8^+=Pe/oDUP2p5&F4hR?d*G7tK26g_RoY3[>]^39sL(8&?J[^O^UIhe5]%oC+!0B*OZ$3ZimRm:PY._`9'*obh'JB6G^cH%BpH56+iu-``XL$j0(@9tY?>>:W)ae\*:CJSg=d]IiV\V!T0q;1]E7ja1=@4ZFXM%[DGDt1;qAaliHp/\'9mAB5MlB!Fk71-!jGtc:fU41-Tem0W"J&5ChVD2)_K8GUu#;+uphrG_Z0Y\&mG'o.."2qT[S0m<,)h78.3I%NhBU@TersNCUL9fh/\jC8sGPLm.1gD%<C\41`j5Q4tbk0cZHh.G_9nXR)S@,:4WSAE3[:,iF2$'DGS1."_SO<HU?Nmd_#g]B)ZBk%Q(rPmH]M\\A(Di(MM:Vkp0mp[1Z7]kIU69e.pXEfOc=IM(,4Ttb'pjJdisF`/AP(^7W%]%iR;t@osNe_apd"HV;"-HYaf-p@SlYZ%>56IN>O20am,YiaH67Y9)KDf0G/O6,h[S*rnM7A+qoW?U"RqAhN+(JsRYU8e-'d3nh_!.CQBjAqQLYXehC+p/]E^!M8[1=Ak,sbq%b=Frag[.-:p:9W>ro<+)>^CtR8>;uudP,0(aMbG(F#I<R7#=1U]@s4b/'/FM2alR*_lT#P3T<hD48aVFEOO(n353+0L*:^.2A.aM%(h5)5(iQ2pE-:!6=mc]>g#I(Ka=8.m9%ing;Mj:SLju^KN4`3=e6Q*fPg+<VdHdWMlH!BAZ3!ZR(C*E[M;_'mq#d+q&hDT(2ecD$%W9bBeP6nVP?FU5l#pS*74elRUX,Uou-J;9jcF6>ABP42oJ!t6Mg3pkCm5pullPk3@(?]:WM=,t`/VgeqSGdhpbX\up%0fF1/\+':%ZcKUp76WLC`I>5VSr@rV!snok/S^ca.gkqJ?3WXa1G<F]")VqK)CE"MGPD**X.-5I9sH7][pEPhN(ts(VgaP!,IJfjl#X/b\9tAf%nTnA&@Ji9t>.$mJq!C.O,Hn)DY>ORQ("415@:)3'M0RBKk2lbo&$Ak(Q%9tllPe\WENINdgXaUOJ!Q;,mO$UCBcu)d6N:<0N#!j(%=kj&8P$+IZNrCj5?p*uNLks"8-H\tCrp\3ZUrF`Kr,?YBJ>_#:fKTZe'J"0?(9tANE%1"MFUYbA1e!Wi!0(JbQq0^J'L$qUqoe5E%Kg3$m)ZHB_cn477'[P$VE7Xn)aap!5P)plL,Z4MMF0M]bV.coX?`8l9h^m\',ef$UP(]Gd:[UFKIdFTOs#$Uc=L^2aGnmhJU:kNL%CYmheeNS53p@M"!7.8g@gKB!Z$?Y)=4T8UBh`'R7e?O;[L'g9o>9%n>2UipsL"+M(Uj("qFl0WjW2U0hBL[.Hb+-q949`k4Nt9rt%bRMsN?8?bL+a(oC9:3(HSO_/:h_>*k&tpn_lg>K%li>DSO13'>]5B1;DCD0)9qChmiG/5I`k3EnNnB)a[d1dnIakp.]\8p"s7?@L%VKL6/Uup!kZDe!D376$epU0^8m^`($3M"=t6hmb:`E(6j7`ksojR8r./9Ah#QYXAnk[QU$?afFXW/Ydt_/]\<>+JVHjOhn=$0sc]%!ba_*:;PB,?:M*tgLmZcM4AKDcL0iK\q-&(lfYd:$`RI<n$_I80h?auonnP#f;\^0IJ4ok]BlMA(O"jodn"!sU2%VMM--qQM,bU$%]D!Aj>)q)(:^D0tE_g,)g$[-Cft'CiQ)ih&8,1;uk%@8kJ<7p_b^m&i<E,8%"Abeoo5<fdOSEG2BbcAVBNfemS5ql5-4aTcn%m5C%m)J:"Z(B5.?5roLYcTKZ`j;>MOI;WQbo8gV#@,GD(_RN*?ls=c_^^0V-4+)#*<t`P*B%*5@p<'_1uCMKe4cO1]!HH.ZN-[h'I]CV%=2B;F;En@]8S(fgkXTFm%m.f=ItDb'1\>0cY&MkHBgDG(RpGDaFEFf77k!$,bpKi&_;Ul#Zg4c_C_(:pN*(h@"k7k/Ps%$TmW(j.%<+4FE/iU)$%=$Z>Dt=&fTIVp><k1Z/Q$4Ck6n3Mb1bNCUh.!+a8;gH0R\_c:5=JsULae%WgLW\_=hI=BEHEJ0'L#^-Be@60`rTm#%L;fE1,8/hb+^W.D'e)]6:]DL6#Su-.7jRhJLrcC?W1n=-HWaBq,ZZ=2ST6K-:l96F`@J9&!V`f&E:e%G#MM4LB5/GP!jaVQg%:uF%g!fV3R,G=Rpru^=Q7lH5_=:+6^![4bMcE*-.Yo6.:PaSG&45AaeL#B@'tu5qXVWpt7?f?"kVK/ZiD1G&?Ie='Df-MnT9*7uOgRWu%i!@U<<c+fJd+JaqiWQg8VtSREk1WjX;lWCk!R777Z-I#;khh(oZADr'/<H!OV2:JH;R`D<L^*BMPaT^$SpC:0,I#sX-;43U%g*rM%#EY7Jdf`C+-le;TlZ>)C?=t"7DGE10O[o7Xb\8C1OI9jdgU+oXB]%m\0ud$Z[QG%/#%G6V;AP#Wl3c2BDOgRaCS<XGh6W/;#pAUV%Z#Ejo>]lHnm=FUj,T6>@K%@\'UiZ9E>!F<<TpIEE)bgKJ$U(W`P4?,2ca"D?.9+5_C>p4qYBH\A^P`'@#11rR1@Tflr4Q1L&NP/?%,(Sc_pkhB>Q>N[p99\*JFG%Xc>M>5[A6_t6#Mp&;Td4na5Q_KkAF\D8c1?M;L?U`oYCME$2_7:7"pBe%2['9kL70_1<5hfVY'F/%%PVCW,EuQa\#io2E;&IpBVQ@I)W:/X#$phEZ;]>../@\Im:4js"ftF#9-EXDaG)#5b=+RhM2.WLF@5X.a%8iI-CpsVl(c@k^H-C0a%$Go7q!8?g\ek=K?aIJZh;c5aGHVX#^;r0[_b:iq"T'"o#C!Z-t56otBT3`80D[*\\C@-QDQ]`kLEihXeH=0:5(ZDro/`ETn_3-Tr%5h:(__G++0?->H>+g+;?oSLlKUL'Ep6gl/C](L#0=G\Eh:?h1_Q3U$/e/iYjD6&]'h.59+#BF2_@T<Qdg*8W*7QR]ZP8_TuYFBEZ%H^ipbSp]1&q1mEE%3L))$\,B>YC`)h>Oe6P?PWc'Iu"D,AI,qYfsd.BLq?A(m63(#<-"]/Ph\K+')N\me58XpdjTOT`)PNXT^Cou%0M;o_bQr#jf:jd,KKgL]'J!haciuX^q*)+bOHlGXPQajGa,U'Y#pNOu9r9T2F<<r&\psXsYV918d[qb.IquV7n=am]@=aVahM1V5%FaFca]a`O1enogB^@:M`NL*N*H`-[Oqjg8EL;b,'kofa'>C'_QY5#ipGADON\',BZ`(4m&gLB.rJ3I8B0^<D;XT6,LBEYCH+G"4l%@pCWF4FRd!7r+/FOj9nhAh&4jn<]!XPh&o1/fj%%DSeUUpkadL:iDS;Af`\Zg/,31k!Qknb0AQU,3ijag,Aiu3[HoiS649r:;/Vn%f`Gq3D\4DfYK`MRRk`Y)&M,cP<P1-abqlOpDmJXDVW=kj4e\>e<Z,qKN5<);<d%r#("#E%X>T?OCrXG/O)Sr8bmr@:ZBO>jL0_4u%r$I>&$c[XaI!aW-s)8YX_BU_55aq`Y&3F*m]Qlp*l83$l"E&k@jL=DNq9?,pj7iB8Rk<h&iGI;.#HGne;LCN<kVd?n?WpC>oq!-g%[8[n%nEoH@KE8[fTU)(QMO0ln\D&ng'lFNjnb.(T'[%6&_M3TX[MO;SiKRD\f=ebbX<hF:D+5A\(Je8bl&%U$8G(;Ra>A#8=r$t@%Hg0SB-jJAuAqqp0iKn0e^6WIp_lWR9[[G%gb?R#-3ubn[7*BmR-!p#:p[8t?Uq<A0EYYXU:nJ#PCk2m)9:]9]1kSWU*fUS'f+EF>%B-$&c3\K/;8n]Nj^3Q-4hmW@3&bi_PeSTjc%c+LXka-HYqebT/]om<!j`"mHK[cIlV.BU0R54;:Bu]Uk[.5.*S:TP:Qg/0jO<jAc%%%d.!lMOkSq&ZE+jKi/fIu$QK3t>$BY2T$mgLX;o$qm6"jCCJm.J*K5aWBb>GCN#T`T4C,FPnF3F4As`]sNTUcW@d]Mt8*qmbi1J%,dY`t2.<6*j"G408L/QbZ&95m)Al*\\HGUG0lf5=Q!a12\DLMo$P%*0E&2qAHF$=E8Y]VQ$u_1LJ8X<S&]j;NfdcYcm:JD9,k45P%Tf0QY>Os4d'Nm\^9o-9AZF!Ypb?/Se=S?do6Lc:YVh_]rKG/g)J:ti;8DbZNl#X?4ZJ:hX0uC5UL_8BQO(ns39!#Im5*<KJ=6rlK%Oei;BgsPS*DqO6rg,Ai"2crB[INGD+H<L=He4([D;In0[Ee"(+?UK%&,AF>2[VYX?8(\>tB(sTIW[u>nE4%QqnioSJ5=.sn[%o2>%C-[BTOW4JV0:AVS(7=X>ei@R!kRt\\l9dU>AEh]#o<lL,5Ub5nEG'M$Um:/*Um^>h2LF8amE6-WkVT3,7?XCkFZRX*r6^Wg340]7%l#Grqa=fQ]DBFeRS1Ln4&q4WoUtgBQ%?qh+f94LjHk7EL7-ep1^h$*V?Z)1K"=402?G>gX;3BX9BVq;-O>N67P/p"L1@9O$Y`?e+%;5Na?erp84HbtdN<"$!5/]f)p>$6r/BA-\@hm7Z"P%AofPS,dOR*-F7&@fQoC*O!qj6800c`;`*RhJ-F`Ct/7KJBTG`o`q=>29.h%<"q;FHR"hEZ[T374V%8$?DK2'%Xga4D._nqSCdABa.g*NJd4\G:Krl9NueKdOTJ6hW:k==on.,>p5t)pUAV]7KY\#!LDR5#pJ'8O%r+]9bg6Pa$G"DZb8*A'!KkL4AZ[VA%Uk[n,8L]u4j-Irs129uM>-!FJB+Veh+rWhkeFV-8DXG1eZj8bU[)-_,NTG@(aaEG,Wtlis%^R<W%s2guAK]S)f>@sf;fu.omA4tZa6r9+3h^kZe9"`epgQ@JkE]W(AJ*]^X/gAD:1+!.n?e>d_/Tt]`5iLp[J[ojMV8[q%V8&8[%9$!MKCc$0k(ZTS/TcLjMTk-dtpaSD+Cgg`Xa0_uam`(`Q>*;G(?qCSj8&A`'YooRfqHiqi6@>ms"\*m'A+u*;l]"6CO#PdAaq/m_%\@<^BmQ,33U]j*<h3koW=@lI6d.cN7LAST\A,9f2[]!4V75nHDcaUgFZAOIEW6)fU"@]kp#gAF!3l4r"aghU'liO5`C-)o<O`Xr$%iV""h`1'k7,"u'_]4l]YiZ7X:h$i\sA&hDsU2bZPNG7`-VKZ>/elW2"]S)_cj:d=uU`SX]]nkdH0sqfTAh\,.\]pd<lEO0g/gC2l%in_9#mNmr0$&<KZb@6=+im$q-HVnd[![1cJ9;1:1_-M%hl0#I-dka\s]Tl>NrFjS,Uo=E./>m3L?buh!R@$/&!Za^pqN1W85)UfT%V,O&KO;KZ0=l+U%'4%f+K%<R0!?Etspd@20Q7S-)mWh)>0+EZ;d:*UV@B9468q]L2QF1STW(9+n@e[0]+Wft_:Ag?,`(+W;Q.Z(H%)<a>CHDQ\&qf_ETeo-AiKa\1#^=4iaUWl57.#iJ=K]fSRaC)sT972A#0aCQ$3r2K+,VgDLB$p2T0$V[ak'JYtij4\TL^Z5);056Q%.EL<0,A_S\9S6:.1[ae&Neq?PSLM&%$.F_f8h$Jgk=j-Bl_\&Go81Fd&>^>.5>d$.e'3=9NXVtMBpAGp`$;R`%VV[TQ:379/A";R%?ar!I*JL,T)I)$;-4<i?5L6J"/Bn148YtF4aVsR_=hJ%r9LJcu>SeKE/fg$CYT:g&X_P4%ZV`rm;;Lk7#hKr"&rIs!o,NhI6qXc@%A8,#g[E[e-$71leJJ?m=6X?C.fcVPLIj>t8UdZ:jje+FsD5@%KV72'>USkA$<h&!m_'H<bfWq5gXm5_K9dU_gbBNEoAf;l_%_KaK%T$OWplU,P#.8Fk6CrsXXc@oN']ZJ:oF![cDKOuYg(!4!;$3"floH'(mk"D&7397Ki7*%[WbDUIJ[ZI?KYj)tjh9>8bDApN?o=O=8%l+%-/4F3P!1NQaAi'D_;I<SeC<qXul:t)q6TTUl=#I3@X>M@k_n0].X3)V.^PP:!<]W8.gm=et+QRR?c@6aKf6VeS[F@8`*jGp2j%lR/5/Gd4Bok'a9ifld0@Nd)%]kB-G<86t<=IfD.?=P64g\3h*>9i&B&M>Ea655p*eFT)@k<At(]6/"Q]rijataq0m:0S4I-;u?Lk%`Z*Y%Y`$&V4;:JS\IbEn:(cX`7T8$?Au6qXolFa!h+b";Pbf!2iC$+bFWM8&/l/jfT%DG]JnHQ-fdi<lnl3,e>%QI2faeii?hM6A%]W[lb:26mF3m``&`I'D]U(ht."O/1?^LBm"':lL%GJ(8IFDON]L=DN)]C][$7JGW..1%;7Vc6l3jal'#946!9`4nLL>D2lQVB/S9%H\]t41s^([<^ID-*T'hso#md8&40F;m*+U&dDJ2p5jsGSd@l4ppa\8o^CX&l&6RlQrTPXR\S7#1l9^sOZ=E%"l-NASA^`@1_9JFm%,VY^'ke0#RQ0jQ[)<G0)nLp&;hS9k`$`KS`Ke((YW/bYI"[6ZfBJ"4NLrC:7%HNP>d;B\@eV%'aq_Z15=#aY[JMR?`4AXo#YoFob%$>K(cn9T[r-pAogN:3&d1k2hL5kB:*iHkM!k'3N:qB8,#MrKZV'2nV0OaB[1Ml8&I=[%Q`L";b11MmEl3O@L96l=?`\]J?fb^3oQ%Dm"69,#StAp--oaJ!7=a@bc0)]0!HCT>lcj^-hW-:2bHhCqGU0i:(83Loa/1AI/t$btO2CA^'YqqnA5W!E+Ti.H?m(^QU=-r2k\'%R<$"Q6phC#1s.#Tq_IiC1)OK9;f/+@E0'WgCa_6c5:0J++pGd6>1goQ_L:N%?culZ,gX*nJ-OKUXb[Y_EE>tTcLqb(9PE'dG#tgh%>YALT8"U\Nd#0-_>DDnH9dDAZA0F8thk@jW7N4gC?)b84$GH;@?IC]-gN,_p=Bnn-9Z:>;6C@+aOsB3SM"H%FipMNipl!,-afJag%bY,a2qdL6Jl&Jq:B-Hi0ai_\Fo/KaM%bl5rP0tcB3ABb02Yl\d7kMGT8c7YDraa-22Zqkc*>)oZMtB_JhC)[[QQca:cP/^n/`C@E%+'RAFX9>`n>60Eq[&<U*/.B_CSV'bX@\VgcE2=BLdk/`eb8iui!,reK8A7LMV8J>#r$bN1IDjmSV.0:'KqO>@a+NohqstHf@/RUP%R./jZE;><?7KK=:q/WNhYR)1rIVXf0]q,5JkL39V@d@bZ1?sFC,?s_H<o&XeOZ0Nsq19Y%cqC&d-!Q&SN@62V>@D"jb#iaS+'Ks"%du[5[/Ve3)QCjApg!BVnkK/\XZE&IEZS7Y?SGaK1<R,1dDX2M$Z5Bdl'ul`5\#5g?1\frCZq)IjR\4.@P)qU;0L!.u4Wt5WXE-?k%$HjQId2'^7ArU0[hO+d'"c8`ZAHS^\/)>YQ*BRbV,kYh;A29WO2's7r68ViPb!3r7OV*S1CWNK'hBn@'$>UD"`"PR\c-MM&HuWT$%FPX88`b[_VEO0''`l0B4Ui:6rGj;IkL2Qp8Dgl-bm_t^h`q:ojaR4%&K'Pjq`=WS8'$&%U8)Y5m1N\74fE=BS1\NIqjgH!JN>%;f%F!6e2\Q"FV'ECNaX\S)5595YBGiN&Pil_:ZM7m!Jlcn%!9/rU3lsok:d>cCm[UJapeLu9UI=JSV'AU$0ZF\E5X--TOi`M^0^,a9J%-Bb1#SF&^2qgFZrs.!)5k+\7$i7h&mU.<jj7V-3K;EorI+%lpr%(Eg3?m'`#3WL7^%grD`iDj^/D_1uOf24Vgi]s\Vg+>r_r-4,;%;"W/Z]<T=*q2]t0C3I.KMO9$#f%eK7,GsBM_,_DaP+YlaDq3#":M=uOo8e8$"7C3_Xmoe'/)+'rMW_g5.IGhn3M?+5Cdq]\kt@Lk%#nZ`Ph$n-s.?Nd(6:Ri=`>kUq+@APpDFk!0eh@JDKG4!VmH430LVoVM'>i3DaH.>TrT.JaI;;o1g]GZZ_PJfmL'_]<s)bVi->$d^%Uj.6nhm\t"H\g3KDT,=U.4L1rEb[.LeAk1mPG&Bn2=d=o)<)VF:`8sn=&;uMiK9YWXX,H$mO=$g*&4TT8!:7RU<7fhQXY#J0(PlA%p/%WCNnGT,QL_JHaa0FOYEut8(]-.9][Ga)XT5FUTh^"ciED$PH^K\.`R!DdMY_3r;#OX2=O]^+(nei?@J&^jYK5ST>)>a1Z:AX#%QC)3Ah)Guib(&t+?:'40?UQm<Jj9'C$$jEIRrbIoAub>BVR!_.20Cu(]IF1ZYFa\cl-o\YO)Z[qC7moX(5.o'DLjE7:g&,/1e'K)%n)_ib!3,3tMK_[-3U#p+VgHf4DGKcE[]Ml]X#(u;R-N?YIU!Y91hM;e$IOYHUOA8SOPr/D>iTY!R_VOh-;pD'(`E>ZH@"![BsJV3%Vrm`_b<(K85"$CO^qX\A6XtFoR:e,JUpLTG=mkG3Dmn0SO3$`gRkg:lG3a1k`4*_2HFH#kA6tJrPOPukVIab%U,o>X*'E,ZrE?W@%A``F0$[$$R)S%qg=h1<7HY\SV8TWdIkFGqGE!^Q"Lr'KoF?)HqcaI\9*T5<76?caV&:o/pTfuW+np.Z3$L'65&XI/]U74Faj%<j=%0@U%<nLKn!gf>Gd4diPs0A&pGF2G(n.DBUR'j/O-Ck9_Xr"_JO[eW[MJW9M%;.XG/R3+,!)Ji!HXCBu+2FWWK`#KjWYu_`gLFe2A%'Z10A,(E4c5I:C\D(b:\9"X`"=r:;j?+`R&iI!5bckMSCqS3:JOdUI(B7N:^p3a>r/qiHJXEd");"Wa9d&V+\\C_I*$%6(r(1_Cg%lG^ZV$n^$6Y`l3M/;qe>(<]dn80=5aVO/gRTVsBnp5;+dA]2#a,SL\(XeX/X)22n&7rQZ[gWlOBaB_aR>O30m]V[!#[5Lk[g"r)Q%A0J!YA/d:W#q(rWrgK+%MRp^s_naSBpqTa9>6kH>#-ur9V@[Q"T@,!h@J(GsL`NY,^[mUBe,6X@?Lg!=6ZBn92q,c@K7_?a<bW_r%@]G=tWaIQpaA':`3\%QRUM0PuU2/Ep+GDfG-@+SJ1G;=_W4%@GbYI%23M[If$o[^@R<QXmP3Z)K1dC[>nc:nXq_o_.hM^VXe6f]f%/?N@do=5lNSlmAP4hG#TNQGYSUgbS7<J5b[/ApU;--Tu,QkHjKcb<OKOnNApO]jEDX.*qMQ=A`+-(Ac#/:q3:ZM_G)h0RI`^%&jG%>9PQXrF#0.0TR4"^I"t<Z8mtNLsN^n-oQhZc'Z-bqQVts42$qrAmrK%KeUK/pThHAoY0"Ij3M-Vj3>a@o9ED$@!lapTfH_p$13o#%RF.<R?8X;+'G^M6h>cp`D>fdKGVQb^2Vr8QgH)01*,r(Lk%[A7ij"rdBY@0LZUbG65:75,U>CQ[b%ZRrlGW)ipuT3S1=m;c#2Y\%%Oi)VoMd%*W+mYWZp6XWQ+=F[47'k!/fQ-t?U[?KH+VSm[HP)""XXXH]ZFH%cAdMs^D74QL3nd6K*N5DXiS"SaR58\4\A"obA@&.+%;4PU;g6`GF@<#R2>\UM=,^V8G@4QF#"7scH!#V$lNPQ'n4lu1G@2X&hJMhh]gbHj]c!buQIDlcDfs5)WH1YtuU[AM,%QoKDp=j4H%L54#rp/'m[na"qFqs&ob]TM[9G.eah8@1AgbALh5GH*m2L[Y@&IVf:<=d4Ig;UY7l?9rBSPmdJ^U]'6I9i1V&#`IZR.ETA.#HQMh%Ir5nEJ6$H8-rI_f"7_<WD^lX-*_Xp<.obHG_!2&`0kePUWgW(qP0?G*s8;b+Hc9rF7%+dt=!)2ia4emhhpeqibj[_qp@)\C%8ErU%3K$79qoobjgM]!A_cOU#-+:.hhn'2<IHTc4%5/LF6:KH%HJG7d`R9X/NKu5<'le&A=]q^G]\%kAd0!Ag_oB:+_o*)&dR'rR[UO(&%$ssZcKqHAda!?2P]6k.NmIQ'%Q95ejZsoIMQZl`mph45[,@7Y+b&S/)OtOcV0!k=kPKPM/BR[t3b]#Cn9:$!?*UiLb^0,>ShJY<i%-31Y_%W1_'Ia%T=19b94WSu!Wl$ef[1"'KtR1@9UW0,ON@:OJ?4n7(IJW7orDW/b;@@P!"la"L@rS<VjqYbc&H$m(p'%#Me)4EK'%pp1RdJhW)V+tIo5*QQ03+)Z*87nCpZ^)SPQ8`O`PF,rW>c5[3?TfU'@$!fSLp_!]8WB.F.[c=)g#@h6n`N07nLhG_hlH^OQrnT]p%\q:U0hoXG6^L5pp/Z&%O.d/;2FH=o0dd_bJ:/@id-f@]j%t5YFD-%1)7j-=T+SRDjI1tN@WFCo@RX@^4:>:FoT)tXQ:N+,KDH_bO%2_.,S/i1b-*i)=&kDe?Ua:!KPk`iAjZ1JtPKMp>8Mq%qk1i*BD3N5dtS%MV_&lAE^Eq36aT^LOVk&Tr@I&07CW:JsE]n@"Z1/9+#%US\$Gb/K$7S&#GRns3j[$`"ns`+S+r[#Vd$/IS=!(?4ATFr!VXU`qj'33?ME>L&pNitblQG!VuN.BjKf28U*F7^tE`neM3Rlrp1l%piHF[002a$+^uF/Ef#.SWfhhLOfl.2Is;N*0dX?rPKq0P,(s\moD>@/iX5T\fX;ic>03S$]W.`O-:7DQS*;b%g-kBlOM/`-0VaXb%)au$+,o5/H3k/-!D_>ZjD+,<6YT;M^/@(\`[Y.k2Pf68K"^q0A_2QHtW;7QdU55,6B($b9KM?oU\9E]CGHJ5d^9HEN"agTkq-0M\%pla/(M>:LV34@pIfKfFWKU/Qs/V.>"HKPJ>PWhlu=)PR6&Ifg/>.)^Gl)0.c:WhFoDurGo@5p#;;EY#5E$['rT*ms7/O7hM3k@X[%@2Z\;f&e_%a$^iPh;o2,,pK^A\RH1W,hq%BH4lOG>$Dpd(Y*C%dU?UUS40@YaiH#fo+H-Hk@@-=/c.pH#3Cs[LLS8V!eSoXI7LHL%hC;I0&J<i&<,N@/ht3r46orV3U/nR27&,,Ub>i@QW+0t;ftr&Ei?DS*0&=)0FVY"'.3SSZM^3gRSP:aDZAp-S9?HK;!u9Qk`4g=l%B9c(6#tF6ACQVWSRV,6dd2&LJA=Q*e1[EUn%5:T`FV==5Rq^bV6bWq@V08^t$n*9^BPQMK]8LLZcR33k9#[\^E4#Ii\c']lC<>6b%!\VV`#u6f1`DIP,J$M@PBA<7<1o`ESgl4\"c%IRcQ'=.4!*:O_2!bFIPq!h%b,?VW-VN/UU99:5pR;/T%%4tpl-fn[;<]kF>g44"%BdpSW9Eh',ft.E-h@*P!pQm]IB:sks!])AOV,+&Wi?%<3$M7dEM:A5"S_a:.6_pp6psE;&Z-S;f93RJVD\#aoWI4*%]s,-bBquu[%L$$pE9lqL!70UlF3_KJCeq@Ssm^WRM'tU)rbKlhW#s%%,Pm6?&`[4bI?Wr`n,sum@rh+)'F@u7iK?(K]87UqIh<_Q*)>T\^r`7_E%H*W3<<Th4`Bm.(]7?5,a+_W(bWV79B?-.OZIbA\bhmYLW-F;rEP=5<J>.^(@3K>?Z"nN7G+Wq(,<8H*\<FqeuPmeKH^kQ^[\d=9,%5naf$@n#(thg=@F<Ae%Hk/1MG]6iiAaGc(nm.'SN-5^?dd:utR&5R!X$V<`g'XeP*`923*.o]dVWG#FBAOK+E0#WB\#P<PQ87*3:%91&t`,/g\lSS=p0(ej%,2.KaAkm;K4]G?@#6\RB>`^b0Z<nY\+k*.j&152SY1T=5c8ZR#S=?L,uUr/oX<[\LEG]PB%B*Pd]/T&O?%T]_X>P^rDg7ta<F015XQ=fOt?%J0FK6ro3[#3,sLQ)]>[@_8inT.;14Ob75Q;lTK-@.DAlm0fC4PRX(7`FR1.$-lN#BgU*L8iW0^%WC.mh%#`%-ArDm4]5fV163l9r=9/jO%8[juH#GR_m9"9em(SO%Ei+q[/]oT>oZhWO'U`B-0Z^QEa>rQX!'I="67:P6rsYBPPXV<T%nPWg>BimEsZP`nW,0FLhC*rUrEGHo6Q>4J7f#=bZ#hR%t(KR[BAC**bYk73a9H3RsLR+#^`bb8cBL2(Lo99&f%?@a@<56]3[KK4R%b3QOEhH^f[m'dGC3BUT'4L^sj%^kk446FeFk"($paR?_'.$tRH+cajBME"9*l*irlm?l7&a(q0Nk_9j7T$s\\P3oP(#:kJ`nTj;P%>5TD[Ee8=uLr]74;mMF2#3UJt1m?nkH/kkq%ki8+d:7<A%g)-(9QRG*pLe^</&VsA'*d.AJGO4d6oI+2'Ji:6Y2('l/'W)YfU`V]%9kf`<S<X8!Te-GK(Ouo1:5[RA!Qmh\]/;!u[S&kY$!,D9#<OH&PJa#%pm#WM:r(a3"0/s"L?0buZV*ham$@=Yn68Z_h3Fmbd/p1u%ouJrS3dKd$5+Jj\b[o[K[Jgt@>][`pn0a3`###34-ak98*a(Te%8)#$mVWZ0+>g-`.ug=9FqQ4=`/@k93O2[#6"ACNm%o&M]+,-`%-lXbggh00ui\4CKEZl8mDj`-8:e"%uI,mh>8/a[$FN$PCku:`.a&T+hM7[m>b!mA$30TsD:(Gqm\*7;(`[]ojmET^BCL@a+#FiV7%h!o""<nkaF2-@7t>JhdG[i/sXK;Dd1etB?pF-G-qSb3q7,"8jC48?K`/E4=R-,46(nJoN:=NNe5/SjMXBR88]kH`W"'CWSlHIN)^%ZK8=PYaI(=WM%BDeW&4Olj+]Q#Z;KC^0$L:QtK1($Bo%C%X>h8g)X6WnK(#0G><F<9QQZ4kAB6s*=VVHXL>3bDRb*Uf0-l%Y'Y6=%d8J4j6.UEe6lfaR>ea?6"sNhA#!u%/QCf$gO"oD1pTG)fO.63c]2)Wki3!@aTk\HA(2tWU+Ej$%*2'[AAKZo;h20StXjf3?7[Q6$%'1S'Ee.ig((5K*(UXZ39)@W_Poo&:XD7$/NV*PN/DqP3fEs,X]60qm8ql-R,A8sAfFXUell%datZL##-GE_,ppO]j5,7E$VV?0jc%K,.b\]$(@qEK$S.LFe@eA-#gG=ELKfd,ss<_nqiK"sOY;D&t]\((h]Zl3Nu)NRhi.,DhNoaJcQ6JgE[0q&j-L'>bNkP:slXKi"Jg%c.5C1+L4gafPm;<W,N@&:q:hMj![s+h[i>k&_5SkC5k(P4]4kcRZfT$JaY>T:[X-H3*/sNig*%d+Th$TB@'m<Lefc]&Y/Ota8+Sc%KV!)Fh"]\>"T"O[QC28*((Jh\`=JGGi^)3mM`,`WqG3DPr-r@[_X#1;0dHm0EJd@))B^pq=?X2-'10U!+,U4/YEF]>Z3CY..TmqE%%qIu0K]O;547UrFWX60F$:u,X$91Tc9nlqT=\.Ck9nl(F12RV.UoQLlTNC5X1DCohcmTS+1NXdXHa(?^TcUIi-'doA:mcLAPN-Q[%`QJphC3`#jnu&rE`o=>ZLL,`DD;(4F$UP<Z9TVD^3iu&_L=X>@6e/;T(q4&*4".!N!5WN-WHq06fL=D;Z?[oA?B?tEL.@Q%q8.&%%K_V9!(+[(\U6KMcE<c_=gL2S_gQcJqqlFmT_7c(i8j^_Ph./BbG.'ZXib4;9^p6?t=\G2kc"@JtRI)tG2pp.@m"uGnGt<.MAk>k%%f/d2tSA<BCBUgR1#/\\8cZENGdhJW(R4GTrPo#:kjZoS"@mMJpLKq!FctcDt<J.4_0?>*S`7O.U!I>CNeZ3s!1!iiTZTAeJg9)'q%&Mt&&2RS>K_5W+iVf61.B7es2M?>C8](-W"5i?WqRFATs!_%?AWI#?-b>g5KUFOAraU1e@<Mq"_^+<AafI"12;^"C^5c6fI=$-,5%j?.^"W\Ico-:7F:Jo.GPb#:pbJeL0nWHTG1f$)6_]A**AcJ6:Rq#RA@i+q-^=q$^+Tooj$L^d%MlLZY$9RJ@KeXED$_IG-5-4"O]%CLAcs7>sC*^kJU:<Sk_i><Ha[]L<:)&fdU.'.K[;h)Zo81S[NpL6BuG9]p4Ag%?N-&%;j3&sqP=`YAUU5m>k-?=&gciq(.$.09%5%]3UU_&@W)T"kYCS\5CJ&*O,a5"e5K$LBSM-S"4:5-Q'B)_l8C^*Ib-TCr&6q<;fduc8T?T_4oT3::E)PYMmLhiNhR^l5mj=F5[bR%C3XEekV66bRr2p`</.g&<N!)*2#tDQiT*KL9Yof%3^&V\<U)"bj'\`NgdAch1:ID_85-gLA^fA-IU0BA>@S3*X]sG-XrCVj2D<Y(%_Wa`t3!W7`OAp'$Hnq#.>6\@P`)Dal&dr9F;j7hMXb')]'a/94*9":@+Y;[\Ng8qQf?B21,HPlI8$J/<"H"-(5=pCE')P+oU/?0M%=;R%MgU\P10/Icb_34]2T+ehAq"b9LfbaVB^+W(hE&)eUI0ACWL/iBM!^cq=_j(fbl[FK9c+%ZpFOO(6!NS>X&F`I0`<8Fb^$N=E%;elt,0bsOC'"6b&K=uQ>LPHGX#N!+ON]OZ@bJ@gpN.jlWpi#LTcShPZpT%*WC;?!Y=Aer"mu\nt:++g+SlHWPnAR&Yjnu67*/`*%%C"_G)#Aa)$SuJ!T/el?2'T0`H,I'-p)UR&D\=V7RkLB;>">=a[LN3LbU[&N_*7-%b6r;0M%Yd]XEgU3IdqVO$!iA]M#O/IG7k7Za%[HWn[Q4WoI;Y8IRjQcmu-knk-N,kFSjFH[4Gg<9,oahR`W->[8.c;+I&[-pS$n>=uGag(F;1-Bm.;]dL2#dRE-IE[GH\c>p)N54H%gp0D=1=qK.6%<R1PH4G;.MLgKbI5]]k.6Z8-$e(j@,OQs"+D/&bG<lF8u1L]LII4or="23mGW(m=rW.TOh5?jABbim.W19Z2>\9f%Rib=$KBiXA#0W]NX1\k(@YoZmNOqON;L]uV?0k<+E_Tt$IY]J>#?E=_HiLVkbjUo0;'q6,rbO7^(uDrHQijgulhjT6Q#o&jl(aPl%cq40Pl$?_nA]t]le@-?Mi,f_hC(2U#Gu3K\FW;D3BK@KgbVfH&ZFJ4?.$n]']%u%_$]A7R;3kT%Vi-jW15CO#OCLV_*-a7)TslU6%7'6ro)N2k.m4UAX(;E2N'iD:!PloW!"q_a2Fud."n;IsjFm*<5EEQ,T(I*<?p!\\7hcrCYH2m=&l.>OqDl1jp9Y_"$jnScOe_`PQ%]m9AKr7O$dI!r^-o(K9U5<RrYcd0A<4o'lf+,(/gm5eu2<JW6Q[A9l/,GV$"O=hZ(`2I/I2t+'0eM5l[%seb\4/kR]l/OPs^M<N6%eBX\7IfB>=[h3ggh`3pbTRs0cY5)u`)cUF3j$sL&bIGJo*Yg^GR&`rCq((PSR?'p<?)4a>MU"Pt?])$Bj6=dtd0?/E$HQ#/Kcu>8%7n*3ARM&VXcn87H%rQD=DIJY;TE&?Z.JSbJ3dn!D93CV2%^k$Ur)uHC0(t92mcL!dYFT2(Dl^t9)aOhR\Ws_!HBEM`L*`:9/i](S%ELXI32FO^EXQkjVT9HQS']:CnIT.1"oI+_@(tIT671#0Vno9=>S(m%dhrf;(D26Jf=dQ,OrN4oa@C].nB06q-3PH3@55h!A`cs!<%%tlr$%2Fl,W7po$#%BF*jYV^-Dl?O/hNhT,(4Z+tAGA`S1Uu/X%1ti&QF=0&oC#:Lj-Vl`QCJ'ri4:Wo"[PY"l\>r?ae9Xc2N4,W%G^f[=$X\,m_8G_mKd,4A1^?T/^Qgq$193bpUDWGFW+Wb&B#OjR?"/Nbe="J/hqLil4=259/#35$ScV6ebTD]^XSM%B;_#h'aZtGT%n7:D(W87VF2aeP;-QuJRLcue1Q)/pi[:WO8bo]]ED%U%K1>@sEVW7!H0W:&U1VM4FH(^*s%K@PfQXQXbmq=<H2F<fqBe)f!\U4&a%[cId/8dK0oF,m[QkY&CEGHpD^m5JmW/E>RL[_'+:,DBsSP:aW2=/V@9bDRa#hO;?fFOo#O)tTcXH4T_QpKgU1N4_=t&r<ZuFuLQW%h"o&JXC,EK@NTo@D5ha>1GSK;R7?]p;VsCj^FAo(;KLFLo[G%^7h3p=kW@>%Y4M*Z5;Fg7S'n2*os?/b@SNKW"8*n,Ho3f.LbnIW%<X"4&Va@pOLLn\b@>hPY1>-,*UP8)\'QS9""N!*CBiM&EKcoM`$-=1S)!cMN%36enfT^O_(1NbpcD=_5&;An=UAe28_q:2CB8(2E%BP^:=;'[nJIZ9-M3e%L&gRMKg?4)V)m&FdPAT@I*h;MCd4_6c(l@`$3fH%P7g)YpMa>ks#L13a(0cPWWJcfW/aKT?_e4LIaH+!!W%p,0%'I99a/H*nWe@si(YGOZA:#QN<jlnLWB_EN^p=T1HG`X^DnU@0>%_j8icEkPQOIPbAh?#(?#A#J`j`Vqg1'MtXjkH*Yu^".im%+62D7l+tX[&eR!m;g*Tam7B]'`4FU@RgrGYJ>-'UF-6'V+#J];RKAXYQ(:/@,XCPo.4!VMg+e@P=#"A+pG^q_5qPk:,G`lsA!@GX%%I#3KFK5,(&=d1XQPAu$pqT`XP^u*bl2tfW*u'564JDDFa@EUn8:E"3Q9kXCq)E34Eo8^RHtg13Mfls9;])7NPhO?ch)3si0g[4<%W_LSAjGSkg.MAE.0j>,Znu0F2[A;ae*sjCd>E0hU223k;<sSP6)i<h;]>VQ=;PThR4ROIg.R0dN#mo[.eKIOtE&'&24=jRrS[YKP%:6Jr:'Xg9/d>'V_MB&'dO\0#3f&FeDr\&Yt(.5M"qj`%VJ3`_+E!8F#`(9?o[OD&=7N<a7K]O]C*l[(6;d"XOrh3aK;N&)W-<oP*%_c]]#`G-9-d^O1-i2Y-A_:/KC.FrPPb60!(KN2n^0ILlZ85kEMFA#X]LtYG/U\a2)@7UUV0jR#8e;hM^4Jd*[J,eQnn-+2E`@p,=%?@;^LrJ0jurHNVcp!qNX?_1T:prh^`=+>^GI.PgfVpjt(+91rtr:o\#0(c@HIJ_@dp!]t65J2JlFoM2Dn,Ed=m?Mqo`Ja3ar5[:d%!##V`70~>%AI9_PrivateDataEnd